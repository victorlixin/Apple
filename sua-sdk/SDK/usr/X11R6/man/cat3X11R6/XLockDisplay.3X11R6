XLockDisplay(3X11R6)                               XLockDisplay(3X11R6)

  XXIInniittTThhrreeaaddss

  NNAAMMEE

    XInitThreads, XLockDisplay, XUnlockDisplay - multi-threading support

  SSYYNNTTAAXX

    Status XInitThreads();

    void XLockDisplay(display)
          Display *display;

    void XUnlockDisplay(display)
          Display *display;

  AARRGGUUMMEENNTTSS

    display
        Specifies the connection to the X server.

  DDEESSCCRRIIPPTTIIOONN

    The XXIInniittTThhrreeaaddss function initializes Xlib support for concurrent threads.
    This function must be the first Xlib function a multi-threaded program
    calls, and it must complete before any other Xlib call is made. This
    function returns a nonzero status if initialization was successful;
    otherwise, it returns zero. On systems that do not support threads, this
    function always returns zero.

    It is only necessary to call this function if multiple threads might use
    Xlib concurrently. If all calls to Xlib functions are protected by some
    other access mechanism (for example, a mutual exclusion lock in a toolkit
    or through explicit client programming), Xlib thread initialization is not
    required. It is recommended that single-threaded programs not call this
    function.

    The XXLLoocckkDDiissppllaayy function locks out all other threads from using the
    specified display. Other threads attempting to use the display will block
    until the display is unlocked by this thread. Nested calls to XXLLoocckkDDiissppllaayy
    work correctly; the display will not actually be unlocked until
    XXUUnnlloocckkDDiissppllaayy has been called the same number of times as XXLLoocckkDDiissppllaayy.
    This function has no effect unless Xlib was successfully initialized for
    threads using XXIInniittTThhrreeaaddss.

    The XXUUnnlloocckkDDiissppllaayy function allows other threads to use the specified
    display again. Any threads that have blocked on the display are allowed to
    continue. Nested locking works correctly; if XXLLoocckkDDiissppllaayy has been called
    multiple times by a thread, then XXUUnnlloocckkDDiissppllaayy must be called an equal
    number of times before the display is actually unlocked. This function has
    no effect unless Xlib was successfully initialized for threads using
    XXIInniittTThhrreeaaddss.

  SSEEEE AALLSSOO

    Xlib - C Language X Interface

