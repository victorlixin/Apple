XSetICValues(3X11R6)                               XSetICValues(3X11R6)

  XXSSeettIICCVVaalluueess

  NNAAMMEE

    XSetICValues, XGetICValues - set and obtain XIC values

  SSYYNNTTAAXX

    char * XSetICValues(ic, ...)
          XIC ic;

    char * XGetICValues(ic, ...)
          XIC ic;

  AARRGGUUMMEENNTTSS

    ic
        Specifies the input context.

    ...
        Specifies the variable length argument list to set or get XIC values.

  DDEESSCCRRIIPPTTIIOONN

    The XXSSeettIICCVVaalluueess function returns NULL if no error occurred; otherwise, it
    returns the name of the first argument that could not be set. An argument
    might not be set for any of the following reasons:

    *
        The argument is read-only (for example, XNFilterEvents).

    *
        The argument name is not recognized.

    *
        An implementation-dependent error occurs.

    Each value to be set must be an appropriate datum, matching the data type
    imposed by the semantics of the argument.

    The XXSSeettIICCVVaalluueess can generate BadAtom, BadColor, BadCursor, BadPixmap, and
    BadWindow errors.

    The XXGGeettIICCVVaalluueess function returns NULL if no error occurred; otherwise, it
    returns the name of the first argument that could not be obtained. An
    argument could not be obtained for any of the following reasons:

    *
        The argument name is not recognized.

    *
        The input method encountered an implementation-dependent error.

    Each IC attribute value argument (following a name) must point to a
    location where the IC value is to be stored. That is, if the IC value is
    of type T, the argument must be of type T*. If T itself is a pointer type,
    then XXGGeettIICCVVaalluueess allocates memory to store the actual data, and the
    client is responsible for freeing this data by calling XXFFrreeee with the
    returned pointer. The exception to this rule is for an IC value of type
    XNVaNestedList (for preedit and status attributes). In this case, the
    argument must also be of type XVaNestedList. Then, the rule of changing
    type T to T* and freeing the allocated data applies to each element of the
    nested list.

  DDIIAAGGNNOOSSTTIICCSS

    BadAtom
        A value for an Atom argument does not name a defined Atom.

    BadColor
        A value for a Colormap argument does not name a defined Colormap.

    BadCursor
        A value for a Cursor argument does not name a defined Cursor.

    BadPixmap
        A value for a Pixmap argument does not name a defined Pixmap.

    BadWindow
        A value for a Window argument does not name a defined Window.

  SSEEEE AALLSSOO

    _X_C_r_e_a_t_e_I_C(3X11R6)

    _X_O_p_e_n_I_M(3X11R6)

    _X_S_e_t_I_C_F_o_c_u_s(3X11R6)

    _X_m_b_R_e_s_e_t_I_C(3X11R6)

    Xlib - C Language X Interface

