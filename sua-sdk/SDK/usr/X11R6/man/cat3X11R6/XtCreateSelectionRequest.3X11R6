XtCreateSelectionRequest(3X11R6)         XtCreateSelectionRequest(3X11R6)

  XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt

  NNAAMMEE

    XtCreateSelectionRequest, XtSendSelectionRequest, XtCancelSelectionRequest
    - bundle multiple selection conversion requests into a single request
    using MULTIPLE target

  SSYYNNTTAAXX

    void XtCreateSelectionRequest(requestor, selection)
          Widget requestor;
          Atom selection;

    void XtSendSelectionRequest(requestor, selection, time)
          Widget requestor;
          Atom selection;
          Time time;

    void XtCancelSelectionRequest(requestor, selection)
          Widget requestor;
          Atom selection;

  AARRGGUUMMEENNTTSS

    requestor
        Specifies the widget making the request. Must be of class Core or a
        subclass thereof.

    selection
        Specifies the particular selection desired.

    time
        Specifies the timestamp to be used in making the request.

  DDEESSCCRRIIPPTTIIOONN

    When XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt is called, subsequent calls to
    XXttGGeettSSeelleeccttiioonnVVaalluuee and XXttGGeettSSeelleeccttiioonnVVaalluueeIInnccrreemmeennttaall with the requestor
    and selection as specified to XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt will be bundled
    into a single selection conversion request with multiple targets. The
    request is actually initiated by calling XXttSSeennddSSeelleeccttiioonnRReeqquueesstt.

    When XXttSSeennddSSeelleeccttiioonnRReeqquueesstt is called with a value of requestor and
    selection matching a previous call to XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt, a
    selection conversion request is actually sent to the selection owner. If a
    single target request is queued, that request is made. If multiple targets
    are queued they are bundled into a single request with the target MULTIPLE
    using the specified timestamp. As the conversions are made, the callbacks
    associated with each XXttGGeettSSeelleeccttiioonnVVaalluuee and
    XXttGGeettSSeelleeccttiioonnVVaalluueeIInnccrreemmeennttaall are invoked in turn.

    Multi-threaded applications should lock the application context before
    calling XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt and release the lock after calling
    XXttSSeennddSSeelleeccttiioonnRReeqquueesstt to ensure that the thread assembling the reqeuest
    is safe from interference by another thread assembling a different request
    naming the same widget and selection.

    When XXttCCaanncceellSSeelleeccttiioonnRReeqquueesstt is called, any requests queued since the
    last call to XXttCCrreeaatteeSSeelleeccttiioonnRReeqquueesstt are cleaned up. Subsequent calls to
    XXttGGeettSSeelleeccttiioonnVVaalluuee, XXttGGeettSSeelleeccttiioonnVVaalluueess, XXttGGeettSSeelleeccttiioonnVVaalluueeIInnccrreemmeennttaall,
    and XXttGGeettSSeelleeccttiioonnVVaalluueessIInnccrreemmeennttaall will not be defered.

  SSEEEE AALLSSOO

    X Toolkit Intrinsics - C Language Interface
    Xlib - C Language X Interface

