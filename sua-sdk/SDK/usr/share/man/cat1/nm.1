nm(1)                                                             nm(1)

  nnmm

  NNAAMMEE

    nm - list symbols from object files

  SSYYNNOOPPSSIISS

    nm [[-a||--debug-syms]] [[-g||--extern-only]]
       [[-B]] [[-C||--demangle[[=style]]]] [[-D||--dynamic]]
       [[-S||--print-size]] [[-s||--print-armap]]
       [[-A||-o||--print-file-name]]
       [[-n||-v||--numeric-sort]] [[-p||--no-sort]]
       [[-r||--reverse-sort]] [[--size-sort]] [[-u||--undefined-only]]
       [[-t radix||--radix=radix]] [[-P||--portability]]
       [[--target=bfdname]] [[-fformat||--format=format]]
       [[--defined-only]] [[-l||--line-numbers]] [[--no-demangle]]
       [[-V||--version]] [[-X 32_64]] [[--help]]  [[objfile......]]

  DDEESSCCRRIIPPTTIIOONN

    GNU nnmm(1) lists the symbols from object files objfile... If no object
    files are listed as arguments, nnmm(1) assumes the file aa..oouutt.

    For each symbol, nnmm(1) shows:

    *     The symbol value, in the radix selected by options (see below), or
          hexadecimal by default.
    *     The symbol type. At least the following types are used; others are,
          as well, depending on the object file format. If lowercase, the
          symbol is local; if uppercase, the symbol is global (external).

          AA
              The symbol's value is absolute, and will not be changed by
              further linking.

          BB
              The symbol is in the uninitialized data section (known as BSS).

          CC
              The symbol is common. Common symbols are uninitialized data.
              When linking, multiple common symbols may appear with the same
              name. If the symbol is defined anywhere, the common symbols are
              treated as undefined references.

          DD
              The symbol is in the initialized data section.

          GG
              The symbol is in an initialized data section for small objects.
              Some object file formats permit more efficient access to small
              data objects, such as a global int variable as opposed to a
              large global array.

          II
              The symbol is an indirect reference to another symbol. This is a
              GNU extension to the a.out object file format which is rarely
              used.

          NN
              The symbol is a debugging symbol.

          RR
              The symbol is in a read only data section.

          SS
              The symbol is in an uninitialized data section for small
              objects.

          TT
              The symbol is in the text (code) section.

          UU
              The symbol is undefined.

          VV
              The symbol is a weak object. When a weak defined symbol is
              linked with a normal defined symbol, the normal defined symbol
              is used with no error. When a weak undefined symbol is linked
              and the symbol is not defined, the value of the weak symbol
              becomes zero with no error.

          WW
              The symbol is a weak symbol that has not been specifically
              tagged as a weak object symbol. When a weak defined symbol is
              linked with a normal defined symbol, the normal defined symbol
              is used with no error. When a weak undefined symbol is linked
              and the symbol is not defined, the value of the weak symbol
              becomes zero with no error.

          --
              The symbol is a stabs symbol in an a.out object file. In this
              case, the next values printed are the stabs other field, the
              stabs desc field, and the stab type. Stabs symbols are used to
              hold debugging information.

          ??
              The symbol type is unknown, or object file format specific.
    *     The symbol name.

  OOPPTTIIOONNSS

    The long and short forms of options, shown here as alternatives, are
    equivalent.

    --AA
    --oo
    ----pprriinntt--ffiillee--nnaammee
        Precede each symbol by the name of the input file (or archive member)
        in which it was found, rather than identifying the input file once
        only, before all of its symbols.

    --aa
    ----ddeebbuugg--ssyymmss
        Display all symbols, even debugger-only symbols; normally these are
        not listed.

    --BB
        The same as ----ffoorrmmaatt==bbssdd (for compatibility with the MIPS nnmm(1)).
    --CC
    ----ddeemmaannggllee[==style]
        Decode (demangle) low-level symbol names into user-level names.
        Besides removing any initial underscore prepended by the system, this
        makes C++ function names readable. Different compilers have different
        mangling styles. The optional demangling style argument can be used to
        choose an appropriate demangling style for your compiler. See
        _cc_++_++_ff_ii_ll_tt(1) for more information on demangling.

    ----nnoo--ddeemmaannggllee
        Do not demangle low-level symbol names. This is the default.

    --DD
    ----ddyynnaammiicc
        Display the dynamic symbols rather than the normal symbols. This is
        only meaningful for dynamic objects, such as certain types of shared
        libraries.
    --ff ffoorrmmaatt
    ----ffoorrmmaatt==format
        Use the output format format, which can be bbssdd, ssyyssvv, or ppoossiixx. The
        default is bbssdd. Only the first character of format is significant; it
        can be either upper or lower case.

    --gg
    ----eexxtteerrnn--oonnllyy
        Display only external symbols.

    --ll
    ----lliinnee--nnuummbbeerrss
        For each symbol, use debugging information to try to find a filename
        and line number. For a defined symbol, look for the line number of the
        address of the symbol. For an undefined symbol, look for the line
        number of a relocation entry which refers to the symbol. If line
        number information can be found, print it after the other symbol
        information.

    --nn
    --vv
    ----nnuummeerriicc--ssoorrtt
        Sort symbols numerically by their addresses, rather than
        alphabetically by their names.

    --pp
    ----nnoo--ssoorrtt
        Do not bother to sort the symbols in any order; print them in the
        order encountered.

    --PP
    ----ppoorrttaabbiilliittyy
        Use the POSIX.2 standard output format instead of the default format.
        Equivalent to --ff ppoossiixx.

    --SS
    ----pprriinntt--ssiizzee
        Print size of defined symbols for the bbssdd output format.

    --ss
    ----pprriinntt--aarrmmaapp
        When listing symbols from archive members, include the index: a
        mapping (stored in the archive by aarr(1) or rraannlliibb(1)) of which modules
        contain definitions for which names.

    --rr
    ----rreevveerrssee--ssoorrtt
        Reverse the order of the sort (whether numeric or alphabetic); let the
        last come first.

    ----ssiizzee--ssoorrtt
        Sort symbols by size. The size is computed as the difference between
        the value of the symbol and the value of the symbol with the next
        higher value. The size of the symbol is printed, rather than the
        value.
    --tt rraaddiixx
    ----rraaddiixx==radix
        Use radix as the radix for printing the symbol values. It must be dd
        for decimal, oo for octal, or xx for hexadecimal.
    ----ttaarrggeett==bfdname
        Specify an object code format other than your system's default format.

    --uu
    ----uunnddeeffiinneedd--oonnllyy
        Display only undefined symbols (those external to each object file).

    ----ddeeffiinneedd--oonnllyy
        Display only defined symbols for each object file.

    --VV
    ----vveerrssiioonn
        Show the version number of nnmm(1) and exit.

    --XX
        This option is ignored for compatibility with the AIX version of
        nnmm(1). It takes one parameter which must be the string 3322__6644. The
        default mode of AIX nnmm(1) corresponds to --XX 3322, which is not supported
        by GNU nnmm(1).

    ----hheellpp
        Show a summary of the options to nnmm(1) and exit.

  SSEEEE AALLSSOO

    _a_r(1)

    _o_b_j_d_u_m_p(1)

  CCOOPPYYRRIIGGHHTT

    Copyright (c) 1991-2002 Free Software Foundation, Inc.

    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.1 or any
    later version published by the Free Software Foundation; with no Invariant
    Sections, with no Front-Cover Texts, and with no Back-Cover Texts. A copy
    of the license is included in the section entitled "GNU Free Documentation
    License".

