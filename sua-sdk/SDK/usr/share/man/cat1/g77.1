g77(1)                                                           g77(1)

  gg7777

  NNAAMMEE

    g77 - GNU project Fortran Compiler (v0.5.21)

  SSYYNNOOPPSSIISS

    g77 [[option||filename]] ...

    Important

    *     The information in this topic is an extract from the full
          documentation of the GNU Fortran compiler (version 0.5.21), and is
          limited to the meaning of some of the options.

    If you find a discrepancy between information in this man page and the
    software, please check the Info file, which is the authoritative
    documentation. (NNoottee:: The Info file is not available in Subsystem for UNIX-based Applications.)

    If we find that the things in this man page that are out of date cause
    significant confusion or complaints, we will stop distributing the man
    page. The alternative, updating the man page when we update the Info file,
    is impractical because the rest of the work of maintaining GNU Fortran
    leaves us no time for that. The GNU project regards man pages as obsolete
    and should not let them take time away from other things.

    For complete and current documentation, refer to the Info file gg7777(1) or
    the manual Using and Porting GNU Fortran (for version 0.5.21).

    If your system has the iinnffoo(1) command installed, the command

    info g77

    should work, unless gg7777(1) has not been properly installed. (NNoottee:: The
    iinnffoo(1) command is not available in Subsystem for UNIX-based Applications.)

  DDEESSCCRRIIPPTTIIOONN

    The C and F77 compilers are integrated; gg7777(1) is a program to call ggcccc(1)
    with options to recognize programs written in Fortran (ANSI FORTRAN 77,
    also called F77). The ggcccc(1) utility processes input files through one or
    more of four stages: preprocessing, compilation, assembly, and linking.
    This topic contains full descriptions for only F77-specific aspects of the
    compiler, though it also contains summaries of some general-purpose
    options. For an explanation of the compiler, see ggcccc(1).

    For complete documentation on GNU Fortran, see the Info file.

    F77 source files use the suffix ..ff or ..ffoorr. F77 files to be preprocessed
    by ccpppp(1) use the suffix ..FF or ..ffpppp. Ratfor source files use the suffix ..rr
    (although rraattffoorr itself is not supplied as part of gg7777(1)).

  OOPPTTIIOONNSS

    Many command-line options, including options to control details of
    optimization, warnings, and code generation, are common to both ggcccc(1) and
    gg7777(1). For full information on all options, see _g_c_c(1).

    Options must be separate: --ddrr is quite different from --dd --rr.

    Most --ff and --WW options have two contrary forms: --ffname and --ffnnoo--name (or --
    WWname and --WWnnoo--name). Only the non-default forms are shown here.

    --cc
        Compile or assemble the source files, but do not link. The compiler
        output is an object file corresponding to each source file.
    --DDmacro
        Define macro with the string 11 as its definition.
    --DDmacro==defn
        Define macro as defn.
    ----ddrriivveerr==command
        Specifies that command, rather than ggcccc(1), is to be invoked by gg7777(1)
        to do its job. Example: Within the ggcccc build directory, after building
        GNU Fortran (but without having to install it):
        ./g77 --driver=./xgcc -B./ foo.f

    --EE
        Stop after the preprocessing stage; do not run the compiler proper.
        The output is preprocessed source code, which is sent to the standard
        output.

    --gg
        Produce debugging information in the operating system's native format
        (for DBX or SDB or DWARF). The ggddbb utility can also work with this
        debugging information. On most systems that use DBX format, --gg enables
        use of extra debugging information that only ggddbb can use.
        Unlike most other Fortran compilers, with GNU Fortran you can use --
        gg with --OO. The shortcuts taken by optimized code may occasionally
        produce surprising results: some variables you declared may not exist
        at all; flow of control may briefly move where you did not expect it;
        some statements may not be executed because they compute constant
        results or their values were already at hand; and some statements may
        execute in different places because they were moved out of loops.
        Nevertheless, it proves possible to debug optimized output. This makes
        it reasonable to use the optimizer for programs that might have bugs.
    --IIdir
        Append directory dir to the list of directories searched for include
        files.
    --LLdir
        Add directory dir to the list of directories to be searched for --ll.
    --lllibrary
        Use the library named library when linking.

    --nnoossttddiinncc
        Do not search the standard system directories for header files. Only
        the directories you have specified with --II options (and the current
        directory, if appropriate) are searched.

    --OO
        Optimize. Optimizing compilation takes somewhat more time, and
        considerably more memory for a large function. See the ggcccc
        documentation for further optimization options. Loop unrolling, in
        particular, may be worth investigating for typical numerical Fortran
        programs.
    --oofile
        Place output in file file.

    --SS
        Stop after the stage of compilation proper; do not assemble. The
        output is an assembler code file for each non-assembler input file
        specified.
    --UUmacro
        Undefine macro.

    --vv
        Print (on standard error output) the commands executed to run the
        stages of compilation. Also print the version number of the compiler
        driver program and of the preprocessor and the compiler proper. The
        version numbers of gg7777 itself and the ggcccc distribution on which it is
        based are distinct. Use ----ddrriivveerr==ttrruuee to disable actual invocation of
        ggcccc(1) (since ttrruuee(1) is the name of a command that simply returns
        success status). The following command is the appropriate one to
        determine the gg7777 and ggcccc version numbers:
        g77 -v

    --WWaallll
        Issue warnings for conditions which pertain to usage that we recommend
        avoiding, and that we believe is easy to avoid, even in conjunction
        with macros.

  FFIILLEESS
    file..hh
        C header (preprocessor) file
    file..ff
        Fortran source file
    file..ffoorr
        Fortran source file
    file..FF
        Preprocessed Fortran source file
    file..ffpppp
        Preprocessed Fortran source file
    file..rr
        Ratfor source file (ratfor not included)
    file..ss
        Assembly language file
    file..oo
        Object file

    aa..oouutt
        Link edited output
    TMPDIR//cccc**
        temporary files
    LIBDIR//ccpppp
        Preprocessor
    LIBDIR//ff777711
        Compiler
    LIBDIR//lliibbff22cc..aa
        Fortran run-time library
    LIBDIR//lliibbggcccc..aa
        ggcccc subroutine library
    //uussrr//lliibb//ccrrtt[0011nn]]..oo
        Start-up routine

    //uussrr//lliibb//lliibbcc..aa
        Standard C library, see iinnttrroo(3)

    //uussrr//iinncclluuddee
        Standard directory for ##iinncclluuddee files
    LIBDIR//iinncclluuddee
        Standard ggcccc directory for ##iinncclluuddee files.

    LIBDIR is usually //uussrr//lliibb//mmaacchhiinnee/vveerrssiioonn.

    TMPDIR comes from the environment variable TMPDIR (default //ttmmpp if
    available, otherwise //ttmmpp).

  SSEEEE AALLSSOO

    _g_c_c(1)

    _c_p_p(1)

    _a_s(1)

    _l_d(1)

    _g_d_b(1)

    See the gg7777, ggcccc, aass, lldd, and ggddbb entries in iinnffoo(1). (The iinnffoo(1) command
    is not distributed with Subsystem for UNIX-based Applications.)

    Note that aaddbb(1), ddbbxx(1), and ssddbb(1) are not currently available on
    Interix systems.

    Using and Porting GNU Fortran (for version 0.5.21) James Craig Burley;
    Using and Porting GNU CC (for version 2.0) Richard M. Stallman; The C
    Preprocessor Richard M. Stallman; Debugging with GDB: the GNU Source-Level
    Debugger Richard M. Stallman and Roland H. Pesch; Using as: the GNU
    Assembler Dean Elsner, Jay Fenlason & friends; gld: the GNU linker Steve
    Chamberlain and Roland Pesch.

  CCOOPPYYIINNGG

    Copyright (c) 1991-1997 Free Software Foundation, Inc.

    Permission is granted to make and distribute verbatim copies of this
    manual provided the copyright notice and this permission notice are
    preserved on all copies.

    Permission is granted to copy and distribute modified versions of this
    manual under the conditions for verbatim copying, provided that the entire
    resulting derived work is distributed under the terms of a permission
    notice identical to this one.

    Permission is granted to copy and distribute translations of this manual
    into another language, under the above conditions for modified versions,
    except that this permission notice may be included in translations
    approved by the Free Software Foundation instead of in the original
    English.

  AAUUTTHHOORRSS

    See the GNU CC Manual for the contributors to GNU CC. See the GNU Fortran
    Manual for the contributors to GNU Fortran.

