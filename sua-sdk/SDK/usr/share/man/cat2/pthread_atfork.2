pthread_atfork(2)                                     pthread_atfork(2)

  pptthhrreeaadd__aattffoorrkk(())

  NNAAMMEE

    pthread_atfork() - set fork handlers

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_atfork(void (*prepare)(void), void (*parent)(void),
         void (*child)(void));

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__aattffoorrkk(2) function specifies the fork handlers that are to be
    called before and after a call to _ff_oo_rr_kk(2). The function specified by
    prepare is called before the processing done by ffoorrkk() actually begins.
    The function specified by parent is called after the ffoorrkk() processing
    completes in the parent process, while the function specified by child is
    called after the ffoorrkk() processing completes in the resulting child
    process. The fork handlers are called in the context of the process that
    called ffoorrkk(). Any or all of these three addresses can be set to NULL if
    the corresponding fork handler is not required.

    The fork handlers can be chained. The parent and child handlers are called
    in the order in which they were registered by subsequent calls to
    pptthhrreeaadd__aattffoorrkk(), while the pprreeppaarree handlers are called in the reverse
    order in which they were registered.

  RREETTUURRNN VVAALLUUEESS

    On success, the pptthhrreeaadd__aattffoorrkk() function returns 0; otherwise, it returns
    an error number.

  EERRRROORRSS

    The pptthhrreeaadd__aattttrr() can fail for the following reason:

    [ENOMEM]
        Not enough free memory to hold the fork handler addresses.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _a_t_e_x_i_t(3)

    _f_o_r_k(2)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__aattffoorrkk function is thread safe.

    The pptthhrreeaadd__aattffoorrkk function is not async-signal safe.

