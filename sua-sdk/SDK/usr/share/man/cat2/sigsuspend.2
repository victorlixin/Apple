sigsuspend(2)                                             sigsuspend(2)

  ssiiggssuussppeenndd(())

  NNAAMMEE

    sigsuspend() - wait for a signal

  SSYYNNOOPPSSIISS

    #include <signal.h>

    int sigsuspend(const sigset_t *sigmask)

  DDEESSCCRRIIPPTTIIOONN

    The _ss_ii_gg_ss_uu_ss_pp_ee_nn_dd(2) function replaces the current signal mask with the set
    pointed to by sigmask, and then waits for a signal to arrive; on return it
    returns the previous set of masked signals. The signal mask set is usually
    empty to indicate that all signals are to be unblocked for the duration of
    the call.

    In normal usage, a signal is blocked using _ss_ii_gg_pp_rr_oo_cc_mm_aa_ss_kk(2) to begin a
    critical section, variables modified on the occurrence of the signal are
    examined to determine that there is no work to be done, and the process
    pauses awaiting work by using _ss_ii_gg_ss_uu_ss_pp_ee_nn_dd(2) with the previous mask
    returned by _ss_ii_gg_pp_rr_oo_cc_mm_aa_ss_kk(2).

  RREETTUURRNN VVAALLUUEESS

    On success, the _ss_ii_gg_ss_uu_ss_pp_ee_nn_dd(2) call returns the previous set of masked
    signals, On failure, it returns -1 and sets errno.

  EERRRROORRSS

    If the _ss_ii_gg_ss_uu_ss_pp_ee_nn_dd(2) function terminates by being interrupted, it sets
    errno to this value:

    [EINTR]
        An interrupt signal was received.

  SSEEEE AALLSSOO

    _p_a_u_s_e(2)

    _s_i_g_p_r_o_c_m_a_s_k(2)

    _s_i_g_a_c_t_i_o_n(2)

  UUSSAAGGEE NNOOTTEESS

    The ssiiggssuussppeenndd function is thread safe.

    The ssiiggssuussppeenndd function is async-signal safe.

