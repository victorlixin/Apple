pthread_key_delete(2)                             pthread_key_delete(2)

  pptthhrreeaadd__kkeeyy__ddeelleettee(())

  NNAAMMEE

    pthread_key_delete() - delete data key

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_key_delete(pthread_key_t key);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__kkeeyy__ddeelleettee(2) function deletes a key previously created by the
    _pp_tt_hh_rr_ee_aa_dd____kk_ee_yy____cc_rr_ee_aa_tt_ee(2) function. The thread-specific data values associated
    with the key are not required to be null when this function is called. The
    application must free any memory or clean up any data structures related
    to the key or data associated with the key. The application can perform
    this cleanup either before or after calling pptthhrreeaadd__kkeeyy__ddeelleettee(). An
    application should not delete the key if any thread can attempt to use the
    key after it has been deleted.

    The pptthhrreeaadd__kkeeyy__ddeelleettee() function can be called within destructor
    functions, but pptthhrreeaadd__kkeeyy__ddeelleettee() does not call any destructor functions
    itself. After pptthhrreeaadd__kkeeyy__ddeelleettee() is called for a key, any destructor
    function associated with that key will not be called when when a thread
    with data associated with the key exits.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__kkeeyy__ddeelleettee() function can fail for the following reason:

    [EINVAL]
        The key argument does not identify a valid key.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___k_e_y___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__kkeeyy__ddeelleettee function is thread safe.

    The pptthhrreeaadd__kkeeyy__ddeelleettee function is not async-signal safe.

