pthread_once(2)                                         pthread_once(2)

  pptthhrreeaadd__oonnccee(())

  NNAAMMEE

    pthread_once() - execute routine only once in a process

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_once(pthread_once_t *once_control, void (*init_routine)
    (void));
    pthread_once_t once_control = PTHREAD_ONCE_INIT;

  DDEESSCCRRIIPPTTIIOONN

    The first time it is called by any thread in a process with the
    once_control argument set to a specific value, the pptthhrreeaadd__oonnccee(2)
    function executes, without arguments, the subroutine referenced by the
    init_routine argument. The once_control argument must be initialized by
    the static initializer macro PTHREAD_ONCE_INIT defined in <pthread.h>. On
    subsequent calls by any thread in the process using the same once_control
    value, pptthhrreeaadd__oonnccee() returns immediately without executing init_routine.
    If init_routine is executed, pptthhrreeaadd__oonnccee() returns only after
    init_routine returns.

    The pptthhrreeaadd__oonnccee() function is not a cancellation point. If init_routine
    is a cancellation point and is cancelled, the result is the same as though
    pptthhrreeaadd__oonnccee() had never been called.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__oonnccee() function can fail for the following reason:

    [EINVAL]
        The once_control or init_routine argument is invalid.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__oonnccee function is thread safe.

    The pptthhrreeaadd__oonnccee function is not async-signal safe.

