gethostbyname(2)                                       gethostbyname(2)

  ggeetthhoossttbbyynnaammee(())

  NNAAMMEE

    gethostbyname(), gethostbyaddr(), gethostent(), sethostent(),
    endhostent(), herror() - get network host entry (and h_errno variable)

  SSYYNNOOPPSSIISS

    #include <netdb.h>
    extern int h_errno;

    struct hostent *gethostbyname (const char *name)
    struct hostent *gethostbyaddr (const void *addr, int len, int type)
    struct hostent *gethostent (void)
    void sethostent (int stayopen)
    void endhostent (void)
    void herror (char *string)

  DDEESSCCRRIIPPTTIIOONN

    The _gg_ee_tt_hh_oo_ss_tt_bb_yy_nn_aa_mm_ee(2) and _gg_ee_tt_hh_oo_ss_tt_bb_yy_aa_dd_dd_rr(2) functions each return a pointer
    to an object with the following structure describing an Internet host
    referenced by name or by address, respectively.

    The _gg_ee_tt_hh_oo_ss_tt_bb_yy_nn_aa_mm_ee(2) function searches for information on a host named
    name, and returns a pointer to a ssttrruucctt hhoosstteenntt.

    The _gg_ee_tt_hh_oo_ss_tt_bb_yy_aa_dd_dd_rr(2) function searches for information about a host with
    the host address addr. The address is a string, in the dot-separated
    Internet Protocol (IP) format. The buffer specified by addr is len bytes
    in size. The type is the supported network type (always AF_INET in this
    implementation).

    The ssttrruucctt hhoosstteenntt structure contains the information obtained from the
    Winsock dynamic-link library (DLL) configuration on the local computer
    (regardless of how your Windows networking system is configured):

    struct hostent {
       char * h_name;       /* official name of host */
       char ** h_aliases;   /* alias list */
       int h_addrtype;      /* host address type */
       int h_length;        /* length of address */
       char ** h_addr_list; /* list of addresses from name server */
    };

    For backwards compatibility, the address is also defined as:

    #define   h_addr  h_addr_list[0]

    The members of this structure are:

    h_name
        Official name of the host. Argument supplied for _gg_ee_tt_hh_oo_ss_tt_bb_yy_nn_aa_mm_ee(2).

    h_aliases
        A zero terminated array of alternate names for the host.

    h_addrtype
        The type of address being returned; currently always AF_INET.

    h_length
        The length, in bytes, of the address.

    h_addr_list
        A zero terminated array of network addresses for the host. Host
        addresses are returned in network byte order.

    h_addr
        The first address in h_addr_list; this is for backward compatibility.

    The calls _gg_ee_tt_hh_oo_ss_tt_ee_nn_tt(2), _ss_ee_tt_hh_oo_ss_tt_ee_nn_tt(2), and _ee_nn_dd_hh_oo_ss_tt_ee_nn_tt(2) search the hosts
    file (%%WWIINNDDIIRR%%//ssyysstteemm3322//ddrriivveerrss//eettcc//hhoossttss) instead of the name server. The
    _gg_ee_tt_hh_oo_ss_tt_ee_nn_tt(2) function reads the next line of the hosts file, opening the
    file if necessary.

    The _ss_ee_tt_hh_oo_ss_tt_ee_nn_tt(2) function opens or rewinds the hosts file, or does both.
    If the stayopen argument is non-zero, the file will not be closed after
    each call to _gg_ee_tt_hh_oo_ss_tt_bb_yy_nn_aa_mm_ee(2) or _gg_ee_tt_hh_oo_ss_tt_bb_yy_aa_dd_dd_rr(2).

    The _ee_nn_dd_hh_oo_ss_tt_ee_nn_tt(2) function closes the file.

  RREETTUURRNN VVAALLUUEESS

    Error return status from _gg_ee_tt_hh_oo_ss_tt_bb_yy_nn_aa_mm_ee(2) and _gg_ee_tt_hh_oo_ss_tt_bb_yy_aa_dd_dd_rr(2) is
    indicated by return of a null pointer. The external integer h_errno can
    then be checked to determine whether this is a temporary failure or an
    invalid or unknown host. The routine _hh_ee_rr_rr_oo_rr(3) can be used to print an
    error message describing the failure. If its argument string is non-NULL,
    string is printed, followed by a colon and a space. The error message is
    printed with a trailing newline.

    The variable h_errno can have the following values:

    HOST_NOT_FOUND
        No such host is known.

    TRY_AGAIN
        This is usually a temporary error and means that the local server did
        not receive a response from an authoritative server. A retry at some
        later time might succeed.

    NO_RECOVERY
        Some unexpected server failure was encountered. This is a
        nonrecoverable error.

    NO_DATA
        The requested name is valid but does not have an IP address; this is
        not a temporary error. This means that the name is known to the name
        server but there is no address associated with this name. Another type
        of request to the name server using this domain name will result in an
        answer; for example, a mail-forwarder can be registered for this
        domain.

  NNOOTTEESS

    The sockets mechanism in Interix is built around the Microsoft Winsock
    DLL. Configuring the network information for sockets depends upon your
    Winsock configuration; see the appropriate system documentation.

    These functions use static data storage; if the data is needed for future
    use, it should be copied before any subsequent calls overwrite it.
    Currently the functions only understand the Internet address format.

  SSEEEE AALLSSOO

    _h_o_s_t_s(5)

    _h_o_s_t_n_a_m_e(1)

  UUSSAAGGEE NNOOTTEESS

    None of these functions are thread safe.

    None of these functions are async-signal safe.

