pthread_attr_setstack(2)                       pthread_attr_setstack(2)

  pptthhrreeaadd__aattttrr__ggeettssttaacckk(())

  NNAAMMEE

    pthread_attr_getstack(), pthread_attr_setstack() - get or set the thread
    stack attribute

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_attr_getstack(const pthread_attr_t *attr, void **stackaddr,
    size_t *stacksize);
    int pthread_attr_setstack(pthread_attr_t *attr, void *stackaddr, size_t
    stacksize);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__aattttrr__sseettssttaacckk(2) function sets the stack-address and stack-
    size attributes of the thread attributes object referenced by attr using
    the values of the stackaddr and stacksize arguments.

    The stackaddr argument specifies the lowest addressable byte of the stack
    area of the thread to be created using the attr structure, and the
    stacksize argument specifies the size of the stack area in bytes.

    After the attributes have been set in the thread attributes object
    referenced by attr, the _pp_tt_hh_rr_ee_aa_dd____cc_rr_ee_aa_tt_ee(2) function can be called to create
    a new thread with the specified attributes. This function does not affect
    the current running thread.

    The pptthhrreeaadd__aattttrr__ggeettssttaacckk(2) function retrieves the stack-address and
    stack-size attributes of the thread attributes object referenced by attr,
    storing the values in the locations referenced by the stackaddr and
    stacksize arguments, respectively.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, they return an error
    number.

  EERRRROORRSS

    The pptthhrreeaadd__aattttrr__sseettssttaacckk() function can fail for the following reasons:

    [EINVAL]
        The size of the specified stack is out of bounds, or the value of
        stackaddr or stackaddr+stacksize is not properly aligned for use as a
        stack.

    [EACCES]
        The thread does not have write access to the stack pages defined by
        stackaddr and stacksize.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___a_t_t_r___i_n_i_t(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k_a_d_d_r(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k_s_i_z_e(2)

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

