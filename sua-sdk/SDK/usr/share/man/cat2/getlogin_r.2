getlogin_r(2)                                             getlogin_r(2)

  ggeettllooggiinn(())

  NNAAMMEE

    getlogin(), getlogin_r() - get login name

  SSYYNNOOPPSSIISS

    #include <unistd.h>

    char * getlogin(void)

    int getlogin_r(char *name, size_t namesize)

  DDEESSCCRRIIPPTTIIOONN

    The ggeettllooggiinn(2) routine returns the login name of the user associated with
    the current process. The name is normally associated with a login shell at
    the time a session is created, and is inherited by all processes descended
    from the login shell.

    The reentrant ggeettllooggiinn__rr(2) routine puts the name associated by the login
    activity with the controlling terminal of the current process in the
    character array identified by name. The array is namesize characters long
    and should have space for the name and the terminating null character. The
    maximum size of the login name is {LOGIN_NAME_MAX}.

    If ggeettllooggiinn__rr(2) is successful, upon return the name argument points to
    the name the user used at login, even if there are several login names
    with the same user ID.

    Note that for both functions, the login name is returned in the format

    domain+logname

    While all Interix calls recognize the + character as a separator in a
    login name, Win32 programs may not. If you will be passing the returned
    string to a Win32 program, you may need to change the + character to a
    backslash (\ ).

  RREETTUURRNN VVAALLUUEESS

    If a call to ggeettllooggiinn(2) succeeds, it returns a pointer to a null-
    terminated string in a static buffer. If the name has not been set, it
    returns NULL.

    On success, ggeettllooggiinn__rr(2) returns zero; otherwise, it returns an error
    number to indicate the error.

  EERRRROORRSS

    The ggeettllooggiinn(2) and ggeettllooggiinn__rr(2) functions may fail if:

    [EMFILE]
        {OPEN_MAX} file descriptors are currently open in the calling process.

    [ENFILE]
        The maximum allowable number of files is currently open in the system.

    [ENXIO]
        The calling process has no controlling terminal.

    The getlogin_r() function may fail if:

    [ERANGE]
        The value of namesize is smaller than the length of the string to be
        returned including the terminating null character.

  SSEEEE AALLSSOO

    _g_e_t_p_w_n_a_m(2)

    _g_e_t_p_w_u_i_d(2)

  UUSSAAGGEE NNOOTTEESS

    The ggeettllooggiinn__rr function is thread safe. The ggeettllooggiinn function is not
    thread safe.

    None of these functions are async-signal safe.

