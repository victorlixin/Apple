utime(2)                                                       utime(2)

  uuttiimmee(())

  NNAAMMEE

    utime(), wcs_utime() - set file times

  SSYYNNOOPPSSIISS

    #include <sys/types.h>
    #include <utime.h>

    int utime (const char *file, const struct utimbuf *timep)
    int wcs_utime (const wchar_t *file, const struct utimbuf *timep)

  DDEESSCCRRIIPPTTIIOONN

    The uuttiimmee(2) and wwccss__uuttiimmee(2) functions are identical, except that
    wwccss__uuttiimmee(2) accepts wide characters in the file argument.

    The uuttiimmee(2) or wwccss__uuttiimmee(2) function sets the access and modification
    times of the named file from the members of the timep argument.

    If the times are specified (the timep argument is non-NULL) the caller
    must be the owner of the file.

    If the times are not specified (the timep argument is NULL) the caller
    must be the owner of the file and have permission to write the file. In
    this case, the file times are set to the current time (now).

    The ttiimmeebbuuff structure timep is defined in <<uuttiimmee..hh>> and contains the
    following members:
    time_t     actime      Access time

    time_t     modtime     Modification time

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, 0 is returned. Otherwise, -1 is returned,
    errno is set to indicate the error, and the file times are not affected.

  EERRRROORRSS

    The uuttiimmee(2) or wwccss__uuttiimmee(2) function may fail and set errno for any of
    these errors:

    [EACCES]
        The effective user ID of the process doesn't own the file and write
        access is denied, or search permission is denied on some directory in
        the file pathname.

    [EINVAL]
        The file is on a device that does not allow the operation.

    [ENAMETOOLONG]
        The file was longer than {PATHMAX} characters, or a component of file
        exceeded {NAMEMAX} characters.

    [ENOENT]
        The file doesn't exist or is an empty string.

    [ENOTDIR]
        Some component of the pathname prefix of file is not a directory.

    [EPERM]
        The times argument is non-NULL, and the effective user ID of the
        process is not the owner of the file, nor does it have the appropriate
        privileges.

    [EROFS]
        The file is on a read-only file system.

  SSEEEE AALLSSOO

    _s_t_a_t(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    All of these functions are async-signal safe.

