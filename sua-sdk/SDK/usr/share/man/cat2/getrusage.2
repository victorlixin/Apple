getrusage(2)                                               getrusage(2)

  ggeettrruussaaggee(())

  NNAAMMEE

    getrusage() - get information about use of resources

  SSYYNNOOPPSSIISS

    #include <sys/resource.h>

    int getrusage (int who, struct rusage *r_usage)

  DDEESSCCRRIIPPTTIIOONN

    The _gg_ee_tt_rr_uu_ss_aa_gg_ee(2) call reports on the use of resources by the current
    process or its child processes, if they are terminated or waited-for. The
    who argument determines which processes the _gg_ee_tt_rr_uu_ss_aa_gg_ee(2) call reports on:

    RUSAGE_SELF
        Report on the resources used by the calling process.

    RUSAGE_CHILDREN
        Report on the resources used by any children processes that have been
        terminated or that are waited-for. If a child process is not being
        waited for, perhaps because the parent has SA_NOCLDWAIT set, or has
        set SIGCHLD to SIG_IGN, then that child process's resource information
        is not included.

    The argument r_usage points to an object to contain the resource usage
    information. The object is of the type ssttrruucctt rruussaaggee (defined in <<ssyyss//
    rreessoouurrccee..hh>>).

  RREETTUURRNN VVAALLUUEE

    After successful completion, the _gg_ee_tt_rr_uu_ss_aa_gg_ee(2) call returns 0; after a
    failure, it returns -1 and sets errno to indicate the error.

  EERRRROORRSS

    The _gg_ee_tt_rr_uu_ss_aa_gg_ee(2) call can fail for the following reasons:

    [EINVAL]
        The who argument is not valid.

  SSEEEE AALLSSOO

    _s_i_g_a_c_t_i_o_n(2)

    _t_i_m_e(2)

    _t_i_m_e_s(2)

    _w_a_i_t(2)

    _e_x_i_t(3)

  UUSSAAGGEE NNOOTTEESS

    The ggeettrruussaaggee function is thread safe.

    The ggeettrruussaaggee function is not async-signal safe.

