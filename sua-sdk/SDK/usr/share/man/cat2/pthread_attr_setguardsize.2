pthread_attr_setguardsize(2)               pthread_attr_setguardsize(2)

  pptthhrreeaadd__aattttrr__ggeettgguuaarrddssiizzee(())

  NNAAMMEE

    pthread_attr_getguardsize(), pthread_attr_setguardsize() - get or set the
    thread stack guard size attribute

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_attr_getguardsize(const pthread_attr_t *attr, size_t
    *guardsize);
    int pthread_attr_setguardsize(pthread_attr_t *attr, size_t guardsize);

  IIMMLLEEMMEENNTTAATTIIOONN IISSSSUUEESS IINN TTHHIISS RREELLEEAASSEE

    This function is not implemented in this release. This will be corrected
    in a future release.

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__aattttrr__sseettgguuaarrddssiizzee(2) function sets the stack guard size
    attribute in the thread attributes object referenced by attr using the
    value of the guardsize argument. The stack guard size attribute specifies
    the size in bytes of the guard area of the stack of the thread created
    using the attr thread attributes object. The guard area is additional
    memory allocated at the overflow end of the stack's area to prevent the
    stack's pointer from running off the stack into unallocated memory. An
    error results if the application overflows into the guard area.

    After the attributes have been set in the thread attributes object
    referenced by attr, the _pp_tt_hh_rr_ee_aa_dd____cc_rr_ee_aa_tt_ee(2) function can be called to create
    a new thread with the specified attributes. This function does not affect
    the current running thread.

    The pptthhrreeaadd__aattttrr__ggeettgguuaarrddssiizzee(2) function retrieves the stack guard size
    attribute in the attr object, storing the value in the location referenced
    by the guardsize argument.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, they return an error
    number.

  EERRRROORRSS

    Both functions can fail for the following reason:

    [EINVAL]
        The guardsize or attr parameter is invalid.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___a_t_t_r___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k_a_d_d_r()

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

