msgctl(2)                                                     msgctl(2)

  mmssggccttll(())

  NNAAMMEE

    msgctl() - control message operations

  SSYYNNOOPPSSIISS

    #include <sys/msg.h>

    int msgctl(int msqid, int cmd, struct msqid_ds *buf)

  DDEESSCCRRIIPPTTIIOONN

    The _mm_ss_gg_cc_tt_ll(2) function provides a way to control message queue operations.
    The arguments are:

    msqid
        An identifier indicating a particular message queue, returned by
        _mm_ss_gg_gg_ee_tt(2). The queue has a data structure associated with it; the
        visible elements of the data structure can be stored in a structure of
        type mmssqqiidd__ddss (see the description of buf).

    cmd
        The command to be carried out; _mm_ss_gg_cc_tt_ll(2) supports three commands
        (defined in <<ssyyss//mmssgg..hh>>):

        IPC_STAT
            Store the current data structure information in buf.

        IPC_SET
            Set the values of the message queue's data structure to those
            specified in buf. Only the uid, gid, and mode members of
            mmssggiidd__ddss..mmssgg__ppeerrmm can be modified. The process must have the
            appropriate privileges or an effective user ID equal to the value
            of mmssgg__ppeerrmm..ccuuiidd or mmssgg__ppeerrmm..uuiidd in the data structure associated
            with the queue.
            The maximum size of a queue is limited only be the ability of the
            system to allocate contiguous memory. If you decrease the size of
            a queue with this call, the change in size does not take effect
            until the queue contents are small enough to fit in the new size.
            During the time that the queue is larger than requested, _mm_ss_gg_ss_nn_dd(2)
            calls will block or fail because the queue is full (or rather,
            overfull).

        IPC_RMID
            Remove msqid and the associated data structure from the system.
            The process must have the appropriate privileges or an effective
            user ID equal to the value of mmssgg__ppeerrmm..ccuuiidd or mmssgg__ppeerrmm..uuiidd in the
            data structure associated with the queue.

    buf
        A pointer to a data structure of type mmssqqiidd__ddss which contains
        information about the message queue. It is defined in <<ssyyss//mmssgg..hh>>;
        _mm_ss_gg_cc_tt_ll(2) only allows you to alter the following members:
        struct ipc_perm     msg_perm       operation permission structure

        msglen_t            msg_qbytes     max. # of bytes allowed on queue

    See _mm_ss_gg_gg_ee_tt(2) for a description of all of the visible members of mmssqqiidd__ddss
    and their default values. The type mmssgglleenn__tt is ttyyppeeddeeffed in <<ssyyss//mmssgg..hh>>.
    The iippcc__ppeerrmm structure is defined in <<ssyyss//iippcc..hh>>, which is automatically
    included when you include <<ssyyss//mmssgg..hh>>.

  RREETTUURRNN VVAALLUUEE

    The _mm_ss_gg_cc_tt_ll(2) call returns 0 on success; on failure, it returns -1 and
    sets errno to indicate the error.

  EERRRROORRSS

    The _mm_ss_gg_cc_tt_ll(2) function can fail for these reasons:

    [EACCES]
        The cmd is IPC_STAT but the calling process doesn't have read
        permission.

    [EINVAL]
        Either msqid or cmd isn't valid.

    [ENOSPC]
        Increasing the message queue would exceed system resources. The
        message queue will not be damaged if this error is returned.

    [EPERM]
        If the cmd is IPC_RMID or IPC_SET, the process' effective user ID
        (which is the same as the user ID) is not equal to the value of
        mmssgg__ppeerrmm..ccuuiidd or mmssgg__ppeerrmm..uuiidd in the data structure for the specified
        msqid.

  SSEEEE AALLSSOO

    _m_s_g_g_e_t(2)

    _m_s_g_r_c_v(2)

    _m_s_g_s_n_d(2)

  UUSSAAGGEE NNOOTTEESS

    The mmssggccttll function is thread safe.

    The mmssggccttll function is not async-signal safe.

