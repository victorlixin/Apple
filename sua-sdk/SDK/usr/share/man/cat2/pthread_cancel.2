pthread_cancel(2)                                     pthread_cancel(2)

  pptthhrreeaadd__ccaanncceell(())

  NNAAMMEE

    pthread_cancel() - request cancellation of a thread's execution

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_cancel(pthread_t thread);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__ccaanncceell(2) function requests that the execution of the thread
    identified by the thread argument be terminated. When the cancellation
    occurs depends on the thread's state and type. When the cancellation takes
    place, the thread's cancellation cleanup handlers are called, followed by
    the thread-specific data-destructor functions. When the last data-
    destructor function returns, the thread is cancelled.

    The cancellation process runs asynchronously with respect to the process
    that called pptthhrreeaadd__ccaanncceell().

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__ccaanncceell() function can fail for the following reason:

    [ESRCH]
        The thread argument does not identify an existing thread.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___c_l_e_a_n_u_p___p_o_p(2)

    _p_t_h_r_e_a_d___c_o_n_d___t_i_m_e_d_w_a_i_t(2)

    _p_t_h_r_e_a_d___e_x_i_t(2)

    _p_t_h_r_e_a_d___j_o_i_n(2)

    _p_t_h_r_e_a_d___s_e_t_c_a_n_c_e_l_s_t_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__ccaanncceell function is thread safe.

    The pptthhrreeaadd__ccaanncceell function is not async-signal safe.

