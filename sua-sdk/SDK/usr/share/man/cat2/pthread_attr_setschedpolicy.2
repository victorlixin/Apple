pthread_attr_setschedpolicy(2)           pthread_attr_setschedpolicy(2)

  pptthhrreeaadd__aattttrr__ggeettsscchheeddppoolliiccyy(())

  NNAAMMEE

    pthread_attr_getschedpolicy(), pthread_attr_setschedpolicy() - get or set
    the thread scheduling policy attribute

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_attr_getschedpolicy(const pthread_attr_t *attr, int *policy);
    int pthread_attr_setschedpolicy(pthread_attr_t *attr, int policy);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__aattttrr__sseettsscchheeddppoolliiccyy(2) function sets the scheduling policy
    attribute of the thread attributes object referenced by attr using the
    value of the policy argument, which can be set to any of the following
    values:

    *     SCHED_FIFO: Run to completion
    *     SCHED_RR: Round-robin
    *     SCHED_OTHER: Use scheduling values set by
          _pp_tt_hh_rr_ee_aa_dd____aa_tt_tt_rr____ss_ee_tt_ss_cc_hh_ee_dd_pp_aa_rr_aa_mm(2)

    Threads that are executing with the SCHED_FIFO or SCHED_RR scheduling
    policy and that are waiting on a mutex acquire the mutex in priority order
    when the mutex is unlocked.

    After the attributes have been set in the thread attributes object
    referenced by attr, the _pp_tt_hh_rr_ee_aa_dd____cc_rr_ee_aa_tt_ee(2) function can be called to create
    a new thread with the specified attributes. This function does not affect
    the current running thread.

    The pptthhrreeaadd__aattttrr__ggeettsscchheeddppaarraamm(2) function retrieves the scheduling policy
    attribute in the thread attributes object referenced by attr, storing the
    value in the location referenced by the policy argument.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, they return an error
    number.

  EERRRROORRSS

    The pptthhrreeaadd__aattttrr__sseettsscchheeddppoolliiccyy(2) function can fail for the following
    reasons:

    [EINVAL]
        The policy argument is invalid.

    [ENOTSUP]
        An attempt was made to set the scheduling policy attribute to an
        unsupported value.

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___a_t_t_r___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_i_n_h_e_r_i_t_s_c_h_e_d(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_c_h_e_d_p_a_r_a_m(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_c_o_p_e(2)

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

