sem_post(2)                                                 sem_post(2)

  sseemm__ppoosstt(())

  NNAAMMEE

    sem_post() - unlock a semaphore

  SSYYNNOOPPSSIISS

    #include <semaphore.h>

    int sem_post(sem_t *sem);

  DDEESSCCRRIIPPTTIIOONN

    The sseemm__ppoosstt(2) function unlocks the semaphore referenced by the sem
    argument. If the value of the semaphore resulting from the operation is
    positive, then no threads were blocked waiting for the semaphore to become
    unblocked, and so the value of the semaphore was incremented. If, as a
    result of this operation, the semaphore value is zero, then one of the
    threads waiting for the semaphore is allowed to run successfully from its
    call to the _ss_ee_mm____ww_aa_ii_tt(2) function.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, -1 is returned and errno is
    set to an error code to indicate the error.

  EERRRROORRSS

    The sseemm__ppoosstt() function can fail for the following reason:

    [EINVAL]
        The sem argument does not refer to a valid semaphore.

  SSEEEE AALLSSOO

    _s_e_m_c_t_l(2)

    _s_e_m_g_e_t(2)

    _s_e_m_o_p(2)

    _s_e_m___t_i_m_e_d_w_a_i_t(2)

    _s_e_m___t_r_y_w_a_i_t(2)

    _s_e_m___w_a_i_t(2)

  UUSSAAGGEE NNOOTTEESS

    The sseemm__ppoosstt function is thread safe.

    The sseemm__ppoosstt function is async-signal safe.

