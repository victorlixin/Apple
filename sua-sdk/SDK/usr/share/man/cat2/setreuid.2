setreuid(2)                                                 setreuid(2)

  sseettrreeuuiidd(())

  NNAAMMEE

    setreuid() - set real and effective user ID's

  SSYYNNOOPPSSIISS

    #include <unistd.h>

    int setreuid (uid_t ruid, uid_t euid)

  DDEESSCCRRIIPPTTIIOONN

    The real and effective user IDs of the current process are set according
    to the arguments. If ruid or euid is -1, the current uid is filled in by
    the system. Unprivileged users may change the real user ID to the
    effective user ID and vice-versa; only the superuser may make other
    changes.

    The _ss_ee_tt_rr_ee_uu_ii_dd(2) function has been used to swap the real and effective user
    IDs in set-user-ID programs to temporarily relinquish the set-user-ID
    value. This purpose is now better served by the use of the _ss_ee_tt_ee_uu_ii_dd(2)
    function (see _ss_ee_tt_uu_ii_dd(2)).

    When setting the real and effective user IDs to the same value, the
    standard _ss_ee_tt_uu_ii_dd(2) function is preferred.

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and errno is set to indicate the error.

  EERRRROORRSS

    The _ss_ee_tt_rr_ee_uu_ii_dd(2) call can fail for the following reasons:

    [EPERM]
        The current process is not the superuser and a change other than
        changing the effective user-id to the real user-id was specified.

  NNOOTTEESS

    The appropriate privileges are granted to the following users: The SYSTEM
    account, the Administrator account of the principal domain, and the
    Administrator account of the local domain.

    The local Administrator account is restricted to setting the UID to local
    accounts.

  SSEEEE AALLSSOO

    _g_e_t_u_i_d(2)

    _s_e_t_e_u_i_d(2)

    _s_e_t_u_i_d(2)

  UUSSAAGGEE NNOOTTEESS

    The sseettrreeuuiidd function is thread safe.

    The sseettrreeuuiidd function is not async-signal safe.

