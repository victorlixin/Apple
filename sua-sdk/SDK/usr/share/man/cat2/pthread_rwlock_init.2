pthread_rwlock_init(2)                           pthread_rwlock_init(2)

  pptthhrreeaadd__rrwwlloocckk__ddeessttrrooyy(())

  NNAAMMEE

    pthread_rwlock_destroy(), pthread_rwlock_init() - initialize or destroy a
    read-write lock object

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_rwlock_destroy(pthread_rwlock_t *lock);
    int pthread_rwlock_init(pthread_rwlock_t *lock,
         const pthread_rwlockattr_t *attr);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__rrwwlloocckk__iinniitt(2) function initializes the read-write lock object
    referenced by the lock argument using the attributes specified by the
    read=-write lock attributes object referenced by the attr argument or, if
    attr is null, using default attributes. Once initialized, the read-write
    lock referenced by lock can be used multiple times without having to be
    reinitialized.

    The pptthhrreeaadd__rrwwlloocckk__ddeessttrrooyy(2) function destroys the read-write lock object
    referenced by the lock argument. A read-write lock object should not be
    destroyed if any thread holds the lock.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__rrwwlloocckk__ddeessttrrooyy() function can fail for the following reasons:

    [EBUSY]
        The specified read-write lock object is in use.

    [EINVAL]
        The lock argument does not refer to a valid read-write lock object.

    The pptthhrreeaadd__rrwwlloocckk__iinniitt() function can fail for the following reasons:

    [EAGAIN]
        The system does not have sufficient resources, other than memory, to
        initialize the read-write lock object.

    [EBUSY]
        An attempt was made to reinitialize an existing read-write lock
        object.

    [EINVAL]
        The lock argument does not refer to a valid read-write lock object.

    [ENOMEM]
        Not enough free memory is available to initialize the read-write lock
        object.

    [EPERM]
        The caller does not have the permissions required to perform the
        operation.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___r_w_l_o_c_k___r_d_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___t_i_m_e_d_r_d_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___t_i_m_e_d_w_r_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___t_r_y_r_d_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___t_r_y_w_r_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___u_n_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k___w_r_l_o_c_k()

    _p_t_h_r_e_a_d___r_w_l_o_c_k_a_t_t_r___d_e_s_t_r_o_y(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

