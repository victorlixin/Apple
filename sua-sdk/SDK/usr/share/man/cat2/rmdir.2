rmdir(2)                                                       rmdir(2)

  rrmmddiirr(())

  NNAAMMEE

    rmdir(), wcs_rmdir() - remove a directory

  SSYYNNOOPPSSIISS

    #include <unistd.h>

    int rmdir (const char *path)
    int wcs_rmdir (const wchar_t *path)

  DDEESSCCRRIIPPTTIIOONN

    The rrmmddiirr(2) and wwccss__rrmmddiirr(2) functions are identical, except that
    wwccss__rrmmddiirr(2) accepts wide characters in the path argument.

    The rrmmddiirr(2) or wwccss__rrmmddiirr(2) function removes a directory whose name is
    given by path. The directory must not have any entries other than dot (..)
    and dot-dot (....).

    The rrmmddiirr(2) or wwccss__rrmmddiirr(2) function will fail if path specifies the root
    directory.

  RREETTUURRNN VVAALLUUEESS

    A 0 is returned if the remove succeeds; otherwise a -1 is returned and an
    error code is stored in the global location errno.

  EERRRROORRSS

    The named directory is removed unless:

    [EACCES]
        Search permission is denied for a component of the path prefix.

    [EACCES]
        Write permission is denied on the directory containing the link to be
        removed.

    [EBUSY]
        The directory named by path was either the root directory or it was
        the working directory of a process.

    [EBUSY]
        The directory to be removed is the mount point for a mounted file
        system.

    [EINVAL]
        The pathname contains a character with the high-order bit set.

    [EIO]
        An I/O error occurred while deleting the directory entry or
        deallocating the file serial number.

    [EFAULT]
        Path points outside the process's allocated address space.

    [ELOOP]
        Too many symbolic links were encountered in translating the pathname.

    [ENAMETOOLONG]
        A component of a pathname exceeded {NAME_MAX} characters, or an entire
        pathname exceeded {PATH_MAX} characters.

    [ENOENT]
        The named directory does not exist.

    [ENOTDIR]
        A component of the path is not a directory.

    [ENOTEMPTY]
        The named directory contains files other than .. and .... in it.

    [EPERM]
        The directory containing the directory to be removed is marked sticky,
        and neither the containing directory nor the directory to be removed
        are owned by the effective user ID.

    [EROFS]
        The directory entry to be removed resides on a read-only file system.

  SSEEEE AALLSSOO

    _m_k_d_i_r(2)

    _u_n_l_i_n_k(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    All of these functions are async-signal safe.

