fstatvfs(2)                                                 fstatvfs(2)

  ssttaattvvffss(())

  NNAAMMEE

    fstatvfs(), statvfs(), wcs_statvfs() - get information about file system

  SSYYNNOOPPSSIISS

    #include <sys/statvfs.h>

    int fstatvfs(int fildes, struct statvfs *buf)
    int statvfs(const char *path, struct statvfs *buf)
    int wcs_statvfs(const wchar_t *path, struct wstatvfs *buf)

  DDEESSCCRRIIPPTTIIOONN

    The ssttaattvvffss(2) and wwccss__ssttaattvvffss(2) functions are identical, except that
    wwccss__ssttaattvvffss(2) accepts wide characters in the path argument and in the
    structure referenced by the buf argument.

    These three functions return information about the file system by filling
    the ssttaattvvffss structure referenced by buf. The ffssttaattvvffss(2) function returns
    information about the file referenced by the file descriptor fildes; the
    ssttaattvvffss(2) or wwccss__ssttaattvvffss(2) function returns information about the file
    named by path.

    The calling process does not need read, write, or execute permission on
    the file. For ssttaattvvffss(2) or wwccss__ssttaattvvffss(2), the calling process must be
    able to search all of the directories in the file's absolute path name, or
    an [EACCES] error will result.

    The ssttaattvvffss structure contains the following members:
    TTyyppee              MMeemmbbeerr

    unsigned long     f_bsize

    unsigned long     f_frsize

    unsigned long     f_blocks

    unsigned long     f_bfree

    unsigned long     f_bavail

    unsigned long     f_files

    unsigned long     f_ffree

    unsigned long     f_favail

    unsigned long     f_fsid

    unsigned long     f_flag

    unsigned long     f_namemax

    unsigned long     f_type

    unsigned long     f_iosize

    char              f_mntonname[MNAMELEN+1]

    char              f_mntfromname[MNAMELEN+1]

    The wwssttaattvvffss structure is identical to the ssttaavvffss structure except for the
    data type of the following two members:
    TTyyppee        MMeemmbbeerr

    wchar_t     f_mntonname[MNAMELEN+1]

    wchar_t     f_mntfromname[MNAMELEN+1]

    The members represent:

    ff__bbssiizzee
        The block size on the file system.

    ff__ffrrssiizzee
        Fundamental block size on the file system.

    ff__bblloocckkss
        Total number of blocks on the file system in units of ff__ffrrssiizzee.

    ff__bbffrreeee
        Total number of free blocks.

    ff__bbaavvaaiill
        Total number of free blocks available to a non-privileged process.

    ff__ffiilleess
        Total number of file serial numbers on the file system.

    ff__ffffrreeee
        Total number of free file serial numbers on the file system.

    ff__ffaavvaaiill
        Total number of file serial numbers available to a non-privileged
        process.

    ff__ffssiidd
        ID of the file system.

    ff__ffllaagg
        A bit mask of values describing the file system; defined values are:

        ST_RDONLY
            A read-only file system.

        ST_NOSUID
            The file system does not support setuid/setgid semantics.

    ff__nnaammeemmaaxx
        The maximum length of a file name on the file system.

    ff__ttyyppee
        The type of the file system, which is one of the following:

        ST_FSTYPE_CDFS
            ISO 9660 CD-ROM drive.

        ST_FSTYPE_CDROM
            ISO 9660 CD-ROM drive.

        ST_FSTYPE_HPFS
            IBM OS/2 High Performance File System.

        ST_FSTYPE_ISO9660
            ISO 9660 CD-ROM drive.

        ST_FSTYPE_NTFS
            NTFS file system.

        ST_FSTYPE_OFS
            OFS (Microsoft Windows Object File System).

        ST_FSTYPE_SAMBA
            Samba SMB file system.

        ST_FSTYPE_NFS
            Network file system (NFS)

        ST_FSTYPE_UNKNOWN
            Unknown file system type.

    ff__iioossiizzee
        Optimal transfer block size.

    ff__mmnnttoonnnnaammee
        The mountpoint for the file system. This is normally a path name
        corresponding to a drive letter, such as //ddeevv//ffss//CC or //ddeevv//ffss//FF.

    ff__mmnnttffrroommnnaammee
        The mounted file system.

  RREETTUURRNN VVAALLUUEE

    On success, each function returns 0. Otherwise, it returns -1 and sets
    errno to indicate the error.

  EERRRROORRSS

    All three functions will fail if:

    [EINVAL]
        The device holding the file system does not support the operation.

    [EIO]
        An input/output (I/O) error occurred while reading from or writing to
        the file system.

    [EINTR]
        A signal was caught while the function was executing.

    In addition, ffssttaattvvffss(2) will fail if:

    [EBADF]
        The descriptor fildes is invalid.

    The ssttaattvvffss(2) or wwccss__ssttaattvvffss(2) function will fail if:

    [EACCES]
        The calling process did not have search permission on a directory in
        the file's path name.

    [ENAMETOOLONG]
        A component of the file's path name exceeded {NAME_MAX} characters, or
        the entire path name exceeded {PATH_MAX} characters.

    [ENOENT]
        The file does not exist.

    [ENOTDIR]
        Some component of the path prefix is not a directory.

  SSEEEE AALLSSOO

    _s_t_a_t(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

