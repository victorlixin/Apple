getpdomain(2)                                             getpdomain(2)

  ggeettppddoommaaiinn(())

  NNAAMMEE

    getpdomain() - retrieve name of principal domain

  SSYYNNOOPPSSIISS

    #include <interix/interix.h>

    int getpdomain (char * buf, int bufsize)

  DDEESSCCRRIIPPTTIIOONN

    The _gg_ee_tt_pp_dd_oo_mm_aa_ii_nn(2) call retrieves the name of the machine's primary or
    principal domain. The principal domain is used to create short forms for
    user and group names.

    A user's full login name consists of a domain name plus a user name. Any
    user names presented without a domain name are assumed to belong to the
    principal domain. For example, if the principal domain is SERVICES, the
    user SERVICES+dana is displayed as dana. On input, the name dana is taken
    as synonymous with SERVICES+dana.

    A user named dana in a different domain is still displayed in the
    canonical form, such as DEV+dana. If your principal domain is SERVICES and
    you need to refer to the user DEV+dana, the canonical name still works.

    The name of the primary domain is typically taken from the value of the
    PPrriinncciippaallDDoommaaiinn registry entry, which is located at
    HHKKEEYY__LLOOCCAALL__MMAACCHHIINNEE\\SSOOFFTTWWAARREE\\MMiiccrroossoofftt\\
    SSUUAA\\PPrriinncciippaallDDoommaaiinn. A standalone computer, one without a
    primary domain controller, will not have this registry entry set, and the
    _gg_ee_tt_pp_dd_oo_mm_aa_ii_nn(2) call returns the name of the computer.

    Caution

    *     Incorrectly editing the registry may severely damage your system.
          Before making changes to the registry, you should back up any valued
          data on the computer.

  RREETTUURRNN VVAALLUUEE

    The call can return -1, 0, or a value greater than 0.
    *     It returns -1 on failure, and sets errno to indicate the error.
    *     It returns 0 on success, and buf contains the principal domain name.
    *     It returns >0 if the buffer is not large enough to contain the
          domain name; the value returned is the length of the Principal
          Domain string in bytes, including the terminating \0 byte.

  EERRRROORRSS

    The _gg_ee_tt_pp_dd_oo_mm_aa_ii_nn(2) call can fail for the following reasons:

    [EINVAL]
        The buf is NULL.

    [ENOMEM]
        There is not enough workspace for the call.

  SSEEEE AALLSSOO

    _p_d_o_m_a_i_n(1)

  UUSSAAGGEE NNOOTTEESS

    The ggeettppddoommaaiinn function is thread safe.

    The ggeettppddoommaaiinn function is not async-signal safe.

