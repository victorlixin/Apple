pthread_rwlockattr_destroy(2)             pthread_rwlockattr_destroy(2)

  pptthhrreeaadd__rrwwlloocckkaattttrr__ddeessttrrooyy(())

  NNAAMMEE

    pthread_rwlockattr_destroy(), pthread_rwlockattr_init() - initialize or
    destroy a read-write lock attributes object

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_rwlockattr_destroy(pthread_rwlockattr_t *attr);
    int pthread_rwlockattr_init(pthread_rwlockattr_t *attr);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__rrwwlloocckkaattttrr__iinniitt(2) function initializes the read-write lock
    attributes object referenced by the attr argument with default values.
    This object can be used in a call to _pp_tt_hh_rr_ee_aa_dd____rr_ww_ll_oo_cc_kk____ii_nn_ii_tt(2) to set the
    attributes of the read-write lock object when it is initialized.

    The pptthhrreeaadd__rrwwlloocckkaattttrr__ddeessttrrooyy(2) function destroys the read-write lock
    attributes object referenced by the attr argument.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__rrwwlloocckkaattttrr__ddeessttrrooyy() function can fail for the following
    reason:

    [EINVAL]
        The attr argument is invalid.

    The pptthhrreeaadd__rrwwlloocckkaattttrr__iinniitt() function can fail for the following reason:

    [ENOMEM]
        Not enough free memory exists to initialize the read-write lock
        attributes object.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___r_w_l_o_c_k___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___r_w_l_o_c_k_a_t_t_r___g_e_t_p_s_h_a_r_e_d(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

