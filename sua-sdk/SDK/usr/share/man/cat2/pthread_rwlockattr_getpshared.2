pthread_rwlockattr_getpshared(2)         pthread_rwlockattr_getpshared(2)

  pptthhrreeaadd__rrwwlloocckkaattttrr__ggeettppsshhaarreedd(())

  NNAAMMEE

    pthread_rwlockattr_getpshared(), pthread_rwlockattr_setpshared() - get or
    set the process-shared attribute in a read-write lock attributes object

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *attr,
         int *pshared);
    int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *attr,
         int pshared);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__rrwwlloocckkaattttrr__sseettppsshhaarreedd(2) function sets the process-shared
    attribute in the read-write lock attributes object referenced by the attr
    argument to the value specified in the pshared argument. When the process-
    shared attribute is set to PTHREAD_PROCESS_SHARED, the read-write lock can
    be acted upon by any thread that can access the memory where the read-
    write lock object is stored, even if the read-write lock object is
    allocated in memory shared by multiple processes. When the process-shared
    attribute is set to PTHREAD_PROCESS_PRIVATE (the default), the read-write
    lock can be acted upon only by threads that have been created in the same
    process as the thread that initialized the read-write lock object.

    The pptthhrreeaadd__rrwwlloocckkaattttrr__ggeettppsshhaarreedd(2) function retrieves the process-shared
    attribute in the read-write lock attributes object referenced by attr,
    storing the value in the location referenced by the pshared argument.

  IIMMPPLLEEMMEENNTTAATTIIOONN IISSSSUUEESS

    In this version of Interix, this function supports only the
    PTHREAD_PROCESS_PRIVATE process-shared attribute.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, an error code is returned.

  EERRRROORRSS

    Both functions can fail for the following reasons:

    [EINVAL]
        The attr argument is invalid, or the pshared argument is out of range.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___r_w_l_o_c_k___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___r_w_l_o_c_k_a_t_t_r___d_e_s_t_r_o_y(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

