endprotoent(2)                                           endprotoent(2)

  ggeettpprroottoobbyynnuummbbeerr(())

  NNAAMMEE

    getprotobynumber(), getprotobyname(), getprotoent(), setprotoent(),
    endprotoent() - get protocol entry

  SSYYNNOOPPSSIISS

    #include <netdb.h>

    struct protoent * getprotobyname (const char *name)
    struct protoent * getprotobynumber (int proto)
    struct protoent * getprotoent (void)
    void setprotoent (int stayopen)
    void endprotoent (void)

  DDEESSCCRRIIPPTTIIOONN

    The _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_aa_mm_ee(2) and _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_uu_mm_bb_ee_rr(2) functions each return a
    pointer to an object with the following structure containing the
    information from a network protocol database.

    struct protoent {
       char * p_name;       /* official name of protocol */
       char ** p_aliases;   /* alias list */
       int p_proto;         /* protocol number */
    };

    The members of this structure are:

    p_name
        The official name of the protocol.

    p_aliases
        A zero terminated list of alternate names for the protocol.

    p_proto
        The protocol number.

    The _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_aa_mm_ee(2) function and _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_uu_mm_bb_ee_rr(2) sequentially search
    from the beginning of the file until a matching protocol name or protocol
    number is found, or until EOF is encountered.

    The _gg_ee_tt_pp_rr_oo_tt_oo_ee_nn_tt(2), _ss_ee_tt_pp_rr_oo_tt_oo_ee_nn_tt(2), and _ee_nn_dd_pp_rr_oo_tt_oo_ee_nn_tt(2) functions also deal
    with the network database, but on an entry-by-entry basis. The
    _gg_ee_tt_pp_rr_oo_tt_oo_ee_nn_tt(2) call reads the next line of the file, opening the file if
    necessary. The _ss_ee_tt_pp_rr_oo_tt_oo_ee_nn_tt(2) call opens and rewinds the file. If the
    stayopen flag is non-zero, the network database stays open after each call
    to _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_aa_mm_ee(2) or _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_uu_mm_bb_ee_rr(2). (The default action is to
    close the database after these calls.) The _ee_nn_dd_pp_rr_oo_tt_oo_ee_nn_tt(2) call closes the
    file.

  RREETTUURRNN VVAALLUUEESS

    The functions _gg_ee_tt_pp_rr_oo_tt_oo_ee_nn_tt(2), _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_aa_mm_ee(2), and _gg_ee_tt_pp_rr_oo_tt_oo_bb_yy_nn_uu_mm_bb_ee_rr(2)
    return pointers to pprroottooeenntt structures.

    All of the function return NULL on failure.

  NNOOTTEESS

    These functions use a static data space; if the data is needed for future
    use, it should be copied before any subsequent calls overwrite it. Only
    the Internet protocols are currently available.

    The Subsystem for UNIX-based Applications sockets implementation is built around the Microsoft Winsock
    DLL; to configure the protocols appropriately, see the documentation for
    configuring your Windows network.

  SSEEEE AALLSSOO

    _p_r_o_t_o_c_o_l_s(5)

  UUSSAAGGEE NNOOTTEESS

    None of these functions are thread safe.

    None of these functions are async-signal safe.

