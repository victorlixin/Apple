shmget(2)                                                     shmget(2)

  sshhmmggeett(())

  NNAAMMEE

    shmget() - get shared memory segment

  SSYYNNOOPPSSIISS

    #include <sys/shm.h>

    int shmget(key_t key, size_t size, int shmflg)

  DDEESSCCRRIIPPTTIIOONN

    The _ss_hh_mm_gg_ee_tt(2) function creates a shared memory identifier based upon the
    argument key. The function creates an identifier, data structure, and
    shared memory segment if:
    *     the value of key is IPC_PRIVATE; or
    *     key doesn't already have a shared memory identifier associated with
          it, and the value of shmflg is non-zero.

    The new shared memory segment is at least size bytes large. The permission
    mode (the low-order nine bits of the member shm_perm.mode) are set to the
    low-order nine bits of shmflg.

    If there is already a shared memory segment associated with key, the
    function returns the identifier for that shared memory segment if the
    permissions on that shared memory segment allow the calling process to
    make use of it. If the permissions do not allow it, the function fails.
    See the errors [EACCES] and [EEXIST].

    The members of the data structure associated with the shared memory
    identifier (described in <<ssyyss//sshhmm..hh>>) are initialized as:
    shm_atime                  Zero

    shm_ctime                  Current time

    shm_dtime                  Zero

    shm_lpid                   Zero

    shm_nattch                 Zero

    shm_perm.cgid              Effective group ID of calling process

    shm_perm.cuid              Effective user ID of calling process

    shm_perm.gid               Effective group ID of calling process

    shm_perm.uid               Effective user ID of calling process

    Low-order nine bits of     Low-order nine bits of shflg
    shm_perm.mode

    shm_segsz                  Value of size

    The header file <<ssyyss//sshhmm..hh>> includes <<ssyyss//iippcc..hh>>.

  RREETTUURRNN VVAALLUUEE

    On success, the _ss_hh_mm_gg_ee_tt(2) function returns a shared memory identifier (a
    non-negative integer).

    On failure, _ss_hh_mm_gg_ee_tt(2) returns -1 and sets errno

  EERRRROORRSS

    The _ss_hh_mm_gg_ee_tt(2) function can fail for the following reasons:

    [EACCES]
        A shared memory identifier already exists for key but the permissions
        specified by the low-order nine bits of shmflg wouldn't be granted.

    [EEXIST]
        A shared memory identifier exists for key but the value
        (shmflg&IPC_CREAT)&&(shmflg&IPC_EXCL)
        is non-zero.

    [EINVAL]
        The value of size is invalid (outside system-imposed bounds), or a
        shared memory identifier already exists for key but the segment's size
        is less than size, and size is not zero.

    [ENOENT]
        Although shmflg is 0, no shared memory identifier exists for key.

    [ENOMEM]
        There is not enough physical memory available to to create the
        identifier and the memory segment.

    [ENOSPC]
        Creating the shared memory identifier would exceed the system-wide
        maximum.

    [ENOSYS]
        the funtion is not implemented.

  SSEEEE AALLSSOO

    _s_h_m_a_t(2)

    _s_h_m_c_t_l(2)

    _s_h_m_d_t(2)

  UUSSAAGGEE NNOOTTEESS

    The sshhmmggeett function is thread safe.

    The sshhmmggeett function is not async-signal safe.

