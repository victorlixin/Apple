pthread_spin_trylock(2)                         pthread_spin_trylock(2)

  pptthhrreeaadd__ssppiinn__lloocckk(())

  NNAAMMEE

    pthread_spin_lock(), pthread_spin_trylock() - lock a spin lock

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_spin_lock(pthread_spinlock_t *lock);
    int pthread_spin_trylock(pthread_spinlock_t *lock);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__ssppiinn__lloocckk(2) function waits until the lock referenced by the
    lock argument is available and then locks the spin lock and returns. Until
    the spin lock becomes available, the calling thread is blocked ("spins").

    The pptthhrreeaadd__ssppiinn__ttrryylloocckk(2) function locks the spin lock referenced by the
    lock argument and returns if the spin lock is available. If the spin lock
    is not available, pptthhrreeaadd__ssppiinn__ttrryylloocckk immediately returns an error.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, an error code is returned.

  EERRRROORRSS

    Both functions can fail for the following reason:

    [EINVAL]
        The lock argument does not refer to a valid lock object.

    The pptthhrreeaadd__ssppiinn__lloocckk() function can fail for the following reason:

    [EDEADLK]
        The calling thread already owns the spin lock.

    The pptthhrreeaadd__ssppiinn__ttrryylloocckk() function can fail for the following reasons:

    [EBUSY]
        The spin lock is already locked.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___s_p_i_n___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___s_p_i_n___u_n_l_o_c_k(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

