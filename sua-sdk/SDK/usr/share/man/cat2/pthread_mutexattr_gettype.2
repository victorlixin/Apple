pthread_mutexattr_gettype(2)               pthread_mutexattr_gettype(2)

  pptthhrreeaadd__mmuutteexxaattttrr__ggeettttyyppee(())

  NNAAMMEE

    pthread_mutexattr_gettype(), pthread_mutexattr_settype() - get or set the
    type attribute in a mutex attributes object

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_mutexattr_gettype(const pthread_mutexattr_t *attr, int *kind);
    int pthread_mutexattr_settype(pthread_mutexattr_t *attr, int kind);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__mmuutteexxaattttrr__sseettttyyppee(2) function sets the type attribute in the
    mutex attribute object referenced by the attr argument using the value of
    the kind argument.

    When the mutex is created with the type attribute set to
    PTHREAD_MUTEX_NORMAL, functions that attempt to lock the mutex do not
    attempt to detect a deadlock condition caused by an attempt to lock an
    already locked mutex. If a thread attempts to unlock a thread that is not
    unlocked or that it did not lock, the results will be unpredictable.

    Error checking is provided if the type attribute is set to
    PTHREAD_MUTEX_ERRORCHECK, and functions that attempt to lock the mutex
    will return an error if an attempt is made to lock a mutex that is already
    locked. An error occurs if a thread attempts to unlock a thread that is
    not unlocked or that it has not locked.

    When the type attribute is set to PTHREAD_MUTEX_RECURSIVE, the mutex
    maintains a lock count. The first time a thread locks a mutex, the lock
    count is set to 1 (one). Each time a thread locks the mutex, the lock
    count is incremented by one, and each time a thread unlocks the mutex, the
    lock count is decremented by one. When the lock count reaches zero, the
    mutex becomes available to other threads for use. An error occurs if a
    thread attempts to unlock a thread that is not unlocked or that it has not
    locked.

    If the type attribute is set to PTHREAD_MUTEX_DEFAULT, attempting to lock
    a mutex that is already locked will produce unexpected results.

    The pptthhrreeaadd__mmuutteexxaattttrr__ggeettttyyppee(2) function retrieves the mutex type
    attribute from the mutex attributes object referenced by the attr argument
    and stores the value in the location referenced by the kind argument.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__mmuutteexxaattttrr__sseettttyyppee() function can fail for the following
    reason:

    [EINVAL]
        The value specified by type is invalid.

    Both functions can fail for the following reason:

    [EINVAL]
        The attr argument does not refer to a valid mutex attributes object.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___c_o_n_d___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

    _p_t_h_r_e_a_d___m_u_t_e_x___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___m_u_t_e_x_a_t_t_r___d_e_s_t_r_o_y(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

