pthread_mutexattr_getpshared(2)          pthread_mutexattr_getpshared(2)

  pptthhrreeaadd__mmuutteexxaattttrr__ggeettppsshhaarreedd(())

  NNAAMMEE

    pthread_mutexattr_getpshared(), pthread_mutexattr_setpshared() - get or
    set the process-shared attribute in a mutex attributes object

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_mutexattr_getpshared(const pthread_mutexattr_t *attr,
         int *pshared);
    int pthread_mutexattr_setpshared(pthread_mutexattr_t *attr,
         int pshared);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__mmuutteexxaattttrr__sseettppsshhaarreedd(2) function sets the process-shared
    attribute in the mutex attributes object referenced by the attr argument
    to the value specified in the pshared argument. When the process-shared
    attribute is set to PTHREAD_PROCESS_SHARED, the mutex can be acted upon by
    any thread that can access the memory where the mutex is stored, even if
    the mutex is allocated in memory shared by multiple processes. When the
    process-shared attribute is set to PTHREAD_PROCESS_PRIVATE (the default),
    the mutex can be acted upon only by threads that have been created in the
    same process as the thread that initialized the mutex.

    The pptthhrreeaadd__mmuutteexxaattttrr__ggeettppsshhaarreedd(2) function retrieves the process-shared
    attribute in the mutex attributes object referenced by attr, storing the
    value in the location referenced by the pshared argument.

  IIMMPPLLEEMMEENNTTAATTIIOONN IISSSSUUEESS

    In this version of Interix, this function supports only the
    PTHREAD_PROCESS_PRIVATE process-shared attribute.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, an error code is returned.

  EERRRROORRSS

    Both functions can fail for the following reasons:

    [EINVAL]
        The attr argument is invalid, or the pshared argument is out of range.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___c_o_n_d___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

    _p_t_h_r_e_a_d___m_u_t_e_x___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___m_u_t_e_x_a_t_t_r___d_e_s_t_r_o_y(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

