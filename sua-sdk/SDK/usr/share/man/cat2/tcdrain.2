tcdrain(2)                                                   tcdrain(2)

  ttccsseennddbbrreeaakk(())

  NNAAMMEE

    tcsendbreak(), tcdrain(), tcflow(), tcflush() - line control functions

  SSYYNNOOPPSSIISS

    #include <termios.h>

    int tcdrain (int fd)
    int tcflow (int fd, int action)
    int tcflush (int fd, int queue_selector)
    int tcsendbreak (int fd, int len)

  DDEESSCCRRIIPPTTIIOONN

    These functions control the terminal line, but do not directly affect the
    terminal attributes (for those, see _tt_cc_ss_ee_tt_aa_tt_tt_rr(2)).

    The _tt_cc_dd_rr_aa_ii_nn(2) function waits until all output written to the terminal
    referenced by fd has been transmitted to the terminal.

    The _tt_cc_ff_ll_oo_ww(2) function suspends transmission of data to or the reception
    of data from the terminal referenced by fd depending on the value of
    action. The value of action must be one of the following:

    TCOOFF
        Suspend output.

    TCOON
        Restart suspended output.

    TCIOFF
        Transmit a STOP character, which is intended to cause the terminal to
        stop transmitting data to the system.

    TCION
        Transmit a START character, which is intended to cause the terminal to
        start transmitting data to the system.

    The _tt_cc_ff_ll_uu_ss_hh(2) function discards any data written to the terminal
    referenced by fd which has not been transmitted to the terminal, or any
    data received from the terminal but not yet read, depending on the value
    of queue_selector. The value of queue_selector must be one of the
    following:

    TCIFLUSH
        Flush data received but not read.

    TCOFLUSH
        Flush data written but not transmitted.

    TCIOFLUSH
        Flush both data received but not read and data written but not
        transmitted.

    The _tt_cc_ss_ee_nn_dd_bb_rr_ee_aa_kk(2) function transmits a continuous stream of zero-valued
    bits for four-tenths of a second to the terminal referenced by fd.

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion, all of these functions return a value of zero.
    If an error occurs, all of these functions return a value of -1 and set
    errno

  EERRRROORRSS

    These functions can fail for the following reasons:

    [EBADF]
        The fd argument is not a valid file descriptor.

    [EINVAL]
        The action or queue_selector argument is not a proper value.

    [ENOTTY]
        The file associated with fd is not a terminal.

    [EINTR]
        A signal interrupted the _tt_cc_dd_rr_aa_ii_nn(2) function.

  SSEEEE AALLSSOO

    _t_c_s_e_t_a_t_t_r(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    All of these functions are async-signal safe.

