pthread_kill(2)                                         pthread_kill(2)

  pptthhrreeaadd__kkiillll(())

  NNAAMMEE

    pthread_kill() - send a signal to a thread

  SSYYNNOOPPSSIISS

    #include <signal.h>

    int pthread_kill(pthread_t thread, int sig);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__kkiillll(2) function requests that the signal specified by the sig
    argument be sent to the thread specified by the thread argument. As with
    the _kk_ii_ll_ll(2) function, if 0 is specified as the signal, error checking is
    performed but no signal is sent.

    The pptthhrreeaadd__kkiillll() function gives an application the ability to send a
    signal to a thread in the calling process. One thread can use this, for
    example, to affect broadcast delivery of a signal to a set of threads.

    Note that pptthhrreeaadd__kkiillll() only causes the signal to be handled in the
    context of the given thread, but the action signalled, such as termination
    or stopping, affects the process as a whole.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__kkiillll() function can fail for the following reasons:

    [ESRCH]
        The thread argument does not identify an existing thread.

    [EINVAL]
        The value of sig is an invalid or unsupported signal number.

    This function does not return [EINTR].

  SSEEEE AALLSSOO

    _k_i_l_l(2)

    _p_t_h_r_e_a_d___s_e_l_f(2)

    _r_a_i_s_e(3)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__kkiillll function is thread safe.

    The pptthhrreeaadd__kkiillll function is not async-signal safe.

