pthread_create(2)                                     pthread_create(2)

  pptthhrreeaadd__ccrreeaattee(())

  NNAAMMEE

    pthread_create() - create a thread

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
         void *(*start_routine) (void *), void *arg);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__ccrreeaattee(2) function creates a new thread, applying the
    attributes specified by the attr argument or default attributes if attr is
    null. After the thread is created, the ID of the thread is stored in the
    location referenced by the thread argument.

    When the thread is created, the function referenced by the start_routine
    argument is executed with arg as its sole argument. If start_routine
    returns, the effect is the same as though the _pp_tt_hh_rr_ee_aa_dd____ee_xx_ii_tt(2) function
    were called with the return value of start_routine as the exit status.

    The attributes specified by attr are applied only when the thread is
    created; changing attr after the thread has been created does not affect
    the thread's attributes.

    When the thread is initialized, it inherits its floating-point environment
    and signal mask from the creating thread, and the set of signals pending
    for the new thread is empty.

  RREETTUURRNN VVAALLUUEESS

    On success, the function returns 0; otherwise, an error code is returned.

  EERRRROORRSS

    The pptthhrreeaadd__ccrreeaattee() function can fail for the following reasons:

    [EAGAIN]
        The system did not have enough resources free to create another
        thread, or the new thread would exceed the maximum number allowed.

    [EINVAL]
        The attr argument is invalid.

    [EPERM]
        The caller does not have the permission required to set the required
        scheduling policy or scheduling parameters.

    This function does not return [EINTR].

  NNOOTTEESS

     pptthhrreeaadd__ccrreeaattee() cannot be used after  ffoorrkk() in a child process.
     This would result in a heap corruption in the fork child.

  SSEEEE AALLSSOO

    _f_o_r_k(2)

    _p_t_h_r_e_a_d___d_e_t_a_c_h(2)

    _p_t_h_r_e_a_d___e_x_i_t(2)

    _p_t_h_r_e_a_d___j_o_i_n(2)

  UUSSAAGGEE NNOOTTEESS

    The pptthhrreeaadd__ccrreeaattee function is thread safe.

    The pptthhrreeaadd__ccrreeaattee function is not async-signal safe.

