pthread_attr_setdetachstate(2)           pthread_attr_setdetachstate(2)

  pptthhrreeaadd__aattttrr__ggeettddeettaacchhssttaattee(())

  NNAAMMEE

    pthread_attr_getdetachstate(), pthread_attr_setdetachstate() - get or set
    the thread detach-state attribute

  SSYYNNOOPPSSIISS

    #include <pthread.h>

    int pthread_attr_getdetachstate(const pthread_attr_t *attr, int
    *detachstate)
    int pthread_attr_setdetachstate(pthread_attr_t *attr, int detachstate);

  DDEESSCCRRIIPPTTIIOONN

    The pptthhrreeaadd__aattttrr__sseettddeettaacchhssttaattee(2) function sets the detach-state
    attribute in the thread attributes object referenced by attr using the
    value of the detachstate argument. If detachstate is set to
    PTHREAD_CREATE_DETACHED, then any thread created using the attr thread
    attributes object is created in a detached state. If detachstate is set to
    PTHREAD_CREATE_JOINABLE (the default), then the thread is created in a
    joinable state.

    After the attributes have been set in the thread attributes object
    referenced by attr, the _pp_tt_hh_rr_ee_aa_dd____cc_rr_ee_aa_tt_ee(2) function can be called to create
    a new thread with the specified attributes. This function does not affect
    the current running thread.

    The pptthhrreeaadd__aattttrr__ggeettddeettaacchhssttaattee(2) function retrieves the detach-state
    attribute in the aattttrr thread attributes object, storing the value in the
    location referenced by the detachstate argument.

  RREETTUURRNN VVAALLUUEESS

    On success, both functions return 0; otherwise, they return an error
    number.

  EERRRROORRSS

    The pptthhrreeaadd__aattttrr__sseettddeettaacchhssttaattee() function can fail for the following
    reason:

    [EINVAL]
        The value of the detachstate argument was invalid.

    Neither function returns [EINTR].

  SSEEEE AALLSSOO

    _p_t_h_r_e_a_d___a_t_t_r___d_e_s_t_r_o_y(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k_a_d_d_r(2)

    _p_t_h_r_e_a_d___a_t_t_r___g_e_t_s_t_a_c_k_s_i_z_e(2)

    _p_t_h_r_e_a_d___c_r_e_a_t_e(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

