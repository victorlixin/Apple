sigwait(2)                                                   sigwait(2)

  ssiiggwwaaiitt(())

  NNAAMMEE

    sigwait() - wait for a pending signal

  SSYYNNOOPPSSIISS

    #include <signal.h>

    int sigwait(const sigset_t *set, int *sig)

  DDEESSCCRRIIPPTTIIOONN

    The ssiiggwwaaiitt(2) function selects a pending signal in the signal set
    referenced by the set argument, clears the signal from the set, and stores
    the number of the signal in the location referenced by the sig argument
    before returning. If set does not contain a pending signal, then
    ssiiggwwaaiitt(2) suspends the calling thread or process until at least one
    pending signal is added to the set.

    If multiple threads are suspended by sigwait(2) waiting for the same
    signal, ssiiggwwaaiitt(2) returns the number of the signal to only one thread.

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, the ssiiggwwaaiitt(2) function returns 0 and stores
    the signal number of the pending signal that it cleared from the signal
    set in sig. Otherwise, an error number shall be returned to indicate the error.

  EERRRROORRSS

    The ssiiggwwaaiitt(2) function can fail for the following reason:

    [EINTR]
        The wait was interrupted by an unblocked caught signal.

    [EINVAL]
        The signal set referenced by set contains an invalid or illegal signal
        number.

  SSEEEE AALLSSOO

    _p_a_u_s_e(2)

    _p_t_h_r_e_a_d___s_i_g_m_a_s_k(2)

    _s_i_g_a_c_t_i_o_n(2)

    _s_i_g_n_a_l(2)

    _s_i_g_p_e_n_d_i_n_g(2)

    _s_i_g_p_r_o_c_m_a_s_k(2)

    _s_i_g_s_u_s_p_e_n_d(2)

  UUSSAAGGEE NNOOTTEESS

    The ssiiggwwaaiitt function is thread safe.

    The ssiiggwwaaiitt function is not async-signal safe.

