fputwc(3)                                                     fputwc(3)

  ppuuttwwcc(())

  NNAAMMEE

    fputwc(), putwc(), putwchar() - output a wide-character code to a stream

  SSYYNNOOPPSSIISS

    #include <stdio.h>
    #include <wchar.h>

    wint_t fputwc (wchar_t wc, FILE *stream)
    wint_t putwc (wchar_t wc, FILE *stream)
    wint_t putwchar (int wc)

  DDEESSCCRRIIPPTTIIOONN

    The _ff_pp_uu_tt_ww_cc(3) function writes the wide-character wccode to the output
    stream pointed to by stream.

    The _pp_uu_tt_ww_cc(3) function acts essentially identically to _ff_pp_uu_tt_ww_cc(3), but is a
    macro that expands in-line. It may evaluate stream more than once, so
    arguments given to _pp_uu_tt_ww_cc(3) should not be expressions with potential side
    effects.

    The _pp_uu_tt_ww_cc_hh_aa_rr(3) function is identical to _pp_uu_tt_ww_cc(3) with an output stream of
    stdout.

  RREETTUURRNN VVAALLUUEESS

    The functions, _ff_pp_uu_tt_ww_cc(3), _pp_uu_tt_ww_cc(3) and _pp_uu_tt_ww_cc_hh_aa_rr(3) return the wide-
    character code written. If an error occurs, the value WEOF is returned.

  EERRRROORRSS

    These functions can set errno to the following values:

    [EAGAIN]
        The O_NONBLOCK flag is set for the file descriptor underlying stream
        and the process would be delayed in the write operation.

    [EBADF]
        The file descriptor underlying stream is not a valid file descriptor
        open for writing.

    [EFBIG]
        An attempt was made to write to a file that exceeds the maximum file
        size or the process' file size limit.

    [EFBIG]
        The file is a regular file and an attempt was made to write at or
        beyond the offset maximum associated with the corresponding stream.

    [EINTR]
        The write operation was terminated due to the receipt of a signal, and
        no data was transferred.

    [EIO]
        A physical I/O error has occurred, or the process is a member of a
        background process group attempting to write to its controlling
        terminal, TOSTOP is set, the process is neither ignoring nor blocking
        SIGTTOU and the process group of the process is orphaned. This error
        may also be returned under implementation-dependent conditions.

    [ENOSPC]
        There was no free space remaining on the device containing the file.

    [EPIPE]
        An attempt is made to write to a pipe or FIFO that is not open for
        reading by any process. A SIGPIPE signal will also be sent to the
        thread.

    These functions may fail if:

    [ENOMEM]
        Insufficient storage space is available.

    [ENXIO]
        A request was made of a non-existent device, or the request was
        outside the capabilities of the device.

    [EILSEQ]
        The wide-character code wc does not correspond to a valid character.

  SSEEEE AALLSSOO

    _f_e_o_f(3)

    _f_e_r_r_o_r(3)

    _f_o_p_e_n(3)

    _g_e_t_w_c(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

