curs_termcap(3)                                         curs_termcap(3)

  ccuurrss__tteerrmmccaapp(())

  NNAAMMEE

    tgetent(), tgetflag(), tgetnum(), tgetstr(), tgoto(), tputs() - direct
    curses interface to the terminfo/termcap capability database

  SSYYNNOOPPSSIISS

    #include <curses.h>
    #include <term.h>

    int tgetent(const char *bp, char *name);
    int tgetflag(const char *id);
    int tgetnum(const char *id);
    char *tgetssttrr(const char *id, char **area);
    char *tgoto(const char *cap, int col, int row);
    int tputs(const char *str, int affcnt, int (*putc)(int));

  DDEESSCCRRIIPPTTIIOONN

    These routines are included as a conversion aid for programs that use the
    tteerrmmccaapp library. Their parameters are the same and the routines are
    emulated using the tteerrmmiinnffoo database. Thus, they can only be used to query
    the capabilities of entries for which a terminfo entry has been compiled.

    The _tt_gg_ee_tt_ee_nn_tt(3) routine loads the entry for name. It returns 1 on success,
    0 if there is no such entry, and -1 if the terminfo database could not be
    found. The emulation ignores the buffer pointer bp.

    The _tt_gg_ee_tt_ff_ll_aa_gg(3) routine gets the boolean entry for id.

    The _tt_gg_ee_tt_nn_uu_mm(3) routine gets the numeric entry for id.

    The _tt_gg_ee_tt_ss_tt_rr(3) routine returns the string entry for id. Use _tt_pp_uu_tt_ss(3) to
    output the returned string.

    The _tt_gg_oo_tt_oo(3) routine instantiates the parameters into the given
    capability. The output from this routine is to be passed to _tt_pp_uu_tt_ss(3).

    The _tt_pp_uu_tt_ss(3) routine is described on the _c_u_r_s___t_e_r_m_i_n_f_o manual page. It can
    retrieve capabilities by either termcap or terminfo name.

  RREETTUURRNN VVAALLUUEE

    Except where explicitly noted, routines that return an integer return ERR
    upon failure and OK (SVr4 only specifies "an integer value other than
    ERR") upon successful completion.

    Routines that return pointers return NULL on error.

  BBUUGGSS

    If you call _tt_gg_ee_tt_ss_tt_rr(3) to fetch ccaa or any other parameterized string, be
    aware that it will be returned in terminfo notation, not the older and
    not-quite-compatible termcap notation. This won't cause problems if all
    you do with it is call _tt_gg_oo_tt_oo(3) or _tt_pp_aa_rr_mm(3), which both expand terminfo-
    style.

    Because terminfo conventions for representing padding in string
    capabilities differ from termcap's, tputs("50"); will put out a literal
    "50" rather than busy-waiting for 50 milliseconds. Cope with it.

  PPOORRTTAABBIILLIITTYY

    The XSI Curses standard, Issue 4 describes these functions. However, they
    are marked TO BE WITHDRAWN and may be removed in future versions.

    Neither the XSI Curses standard nor the SVr4 man pages documented the
    return values of _tt_gg_ee_tt_ee_nn_tt(3) correctly, though all three were in fact
    returned ever since SVr1.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s

    _c_u_r_s___t_e_r_m_i_n_f_o

    _p_u_t_c()

