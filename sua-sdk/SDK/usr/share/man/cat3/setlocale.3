setlocale(3)                                               setlocale(3)

  sseettllooccaallee(())

  NNAAMMEE

    setlocale() - set or query the program's locale

  SSYYNNOOPPSSIISS

    #include <locale.h>

    char * setlocale(int category, const char *locale)

  DDEESSCCRRIIPPTTIIOONN

    The _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) function changes or queries the program's locale. The
    category is used to specify part of the locale. It can have any one of
    these values (defined in <<llooccaallee..hh>>):
    LC_ALL          The entire locale

    LC_COLLATE      Character collating sequence

    LC_CTYPE        Character handling and multibyte functions

    LC_MESSAGES     Message catalogs, see _cc_aa_tt_oo_pp_ee_nn(3) function.

    LC_MONETARY     Monetary formatting information

    LC_NUMERIC      Decimal point character in I/O and string conversions

    LC_TIME         Time formatting -- see ssttrrffttiimmee()

    The locale argument is a string naming a particular locale. All POSIX-
    conforming systems support the locales "C" and "POSIX". The Subsystem for UNIX-based Applications
    subsystem supports the C and POSIX locales (which are identical),
    ja_JP.EUC-JP and ja_JP.eucJP locales (which are identical), and win-
    ja_JP.windows-932 and ja_JP.SJIS locales (which are identical).

    To query the current locale, use a null pointer as the locale;
    _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) returns the name of the current locale for that category.

    The return value may be overwritten by a subsequent call to _ss_ee_tt_ll_oo_cc_aa_ll_ee(3),
    so your program shouldn't modify it.

  RREETTUURRNN VVAALLUUEE

    On success, the _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) function returns a string that corresponds to
    the locale specified by locale. If the function fails, it returns NULL.

  NNOOTTEESS

    Use _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) function with care in multithreaded applications. To set
    the locale in a multithreaded application, be sure to call _ss_ee_tt_ll_oo_cc_aa_ll_ee(3)
    before calling any locale-sensitive functions. You can safely use
    _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) to query the current locale at any time, however.

  SSEEEE AALLSSOO

    _i_s_a_l_n_u_m(3)

    _i_s_a_l_p_h_a(3)

    _i_s_c_n_t_r_l(3)

    _i_s_g_r_a_p_h(3)

    _i_s_l_o_w_e_r(3)

    _i_s_p_r_i_n_t(3)

    _i_s_p_u_n_c_t(3)

    _i_s_s_p_a_c_e(3)

    _i_s_u_p_p_e_r(3)

    _l_o_c_a_l_e_c_o_n_v(3)

    _n_l___l_a_n_g_i_n_f_o(3)

    _s_t_r_c_o_l_l(3)

    _s_t_r_f_t_i_m_e(3)

    _s_t_r_x_f_r_m(3)

  UUSSAAGGEE NNOOTTEESS

    The sseettllooccaallee function is not thread safe.

    The sseettllooccaallee function is not async-signal safe.

