l64a(3)                                                         l64a(3)

  aa6644ll(())

  NNAAMMEE

    a64l(), l64a() - convert between a 32-bit integer and radix-64 ASCII

  SSYYNNOOPPSSIISS

    #include <stdlib.h>

    long a64l (const char *s)
    char l64a (long value)

  DDEESSCCRRIIPPTTIIOONN

    The _aa_66_44_ll(3) and _ll_66_44_aa(3) calls convert numbers between 32-bit integer
    format and the radix-64 ASCII notation. In radix-64, a 32-bit integer can
    be represented by up to six characters, and each character represents a
    digit. (On Subsystem for UNIX-based Applications, a lloonngg is 32 bits; on systems where a lloonngg is more
    than 32 bits, these calls only deal with the low order 32 bits of the
    number.) call.

    The s argument to _aa_66_44_ll(3) is an ASCII string, where the first digit is the
    least significant. The characters represent digits as follows:
    CChhaarraacctteerr((ss))     DDiiggiittss

    .                0

    /                1

    0-9              2-11

    A-Z              12-37

    a-z              38-63

    If s is longer than six characters, _aa_66_44_ll(3) only uses the first six; if
    the first six characters contain a NUL character, only the characters
    before the NUL are used.

    The _ll_66_44_aa(3) function takes a long argument and returns a pointer to the
    corresponding radix-64 representation.

  RREETTUURRNN VVAALLUUEESS

    The _aa_66_44_ll(3) call returns a lloonngg value. If s is an empty string, _aa_66_44_ll(3)
    returns 0L. If s is NULL, _aa_66_44_ll(3) returns -1L and sets errno to indicate
    the error.

    The _ll_66_44_aa(3) call returns a pointer to a static buffer that contains the
    radix-64 representation. If value is 0L, _ll_66_44_aa(3) returns an empty string.
    If value is negative, _ll_66_44_aa(3) returns NULL and sets errno to indicate the
    error.

  EERRRROORRSS

    The _aa_66_44_ll(3) and _ll_66_44_aa(3) calls can fail for the following reasons:

    [EINVAL]
        The string s was a NULL pointer, or the value of value was negative.

  SSEEEE AALLSSOO

    _s_t_r_t_o_u_l(3)

  UUSSAAGGEE NNOOTTEESS

    The aa6644ll function is thread safe. The ll6644aa function is not thread safe.

    None of these functions are async-signal safe.

