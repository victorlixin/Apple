tzset(3)                                                       tzset(3)

  ttzzsseett(())

  NNAAMMEE

    tzset() - set time-zone and daylight-savings-time variables

  SSYYNNOOPPSSIISS

    #include <time.h>
    extern char *tzname[];
    extern long int timezone;
    extern int daylight;

    void tzset (void)

  DDEESSCCRRIIPPTTIIOONN

    The _tt_zz_ss_ee_tt(3) function uses the value of the TZ environment variable to set
    the time conversion information used by the library routines _ll_oo_cc_aa_ll_tt_ii_mm_ee(3),
    _cc_tt_ii_mm_ee(3), _ss_tt_rr_ff_tt_ii_mm_ee(3), and _mm_kk_tt_ii_mm_ee(3). It also sets the external variables
    tzname, timezone, and daylight:

    extern char *tzname[2] = { "std","dst"};
    extern long int timezone;
    extern int daylight;

    where std and dst have the same meaning as in the TZ specification (see
    below).

    The timezone variable contains the difference (in seconds) between
    Universal Coordinated Time (UTC) and local time. The daylight variable is
    non-zero when daylight savings time is in effect.

    The value of TZ has the following syntax:

    std offset [[dst [[offset]][[, rule]]]]

    Where:
    std and dst
        Three or more bytes that designate the standard (std) or summer (dst)
        time zone. Only std is required; if dst is missing, then summer time
        does not apply in this locale. Upper and lowercase letters are
        explicitly allowed. Any characters except a leading colon (:), digits,
        comma (,), minus (-), plus (+), and ASCII NUL are allowed.

    offset
        Indicates the value one must add to the local time to arrive at
        Coordinated Universal Time. The offset has the form:
        hh[[:mm[[:ss]]]]
        The minutes mm and seconds ss are optional. The hour hh is required
        and may be a single digit. The offset following std is required. If no
        offset follows dst summer time is assumed to be one hour ahead of
        standard time. One or more digits may be used; the value is always
        interpreted as a decimal number. The hour must be between zero and 24,
        and the minutes (and seconds) if present between zero and 59. If
        preceded by a (-) the time zone shall be east of the Prime Meridian;
        otherwise it shall be west (which may be indicated by an optional
        preceding (+).)

    rule
        Indicates when to change to and back from summer time. The rule has
        the form:
        date/time, date/time
        where the first date describes when the change from standard to summer
        time occurs and the second date describes when the change back
        happens. Each time field describes when, in current local time, the
        change to the other time is made.
        The format of date is one of the following:
        JJn
            The Julian day n (1 <= n <= 365). Leap days are not counted; that
            is, in all years -- including leap years -- February 28 is day 59
            and March 1 is day 60. It is impossible to explicitly refer to the
            occasional February 29.

        n
            The zero-based Julian day (0 <= n <= 365 ) . Leap days are
            counted, and it is possible to refer to February 29.
        MMm.n.d
            The d day (0 <= d <= 6) of week n of month m of the year (1 <= n
            <= 5), (1 <= m <= 12), where week 5 means the last d day in month
            m which may occur in either the fourth or the fifth week). Week 1
            is the first week in which the d day occurs. Day zero is Sunday.
            The time has the same format as offset except that no leading sign
            (-) or (+) is allowed. The default, if time is not given, is 02:
            00:00.

    For compatibility with System V Release 3.1, a semicolon (;;) can be used
    to separate the rule from the rest of the specification.

    If the TZ variable is absent from the environment, it defaults to the
    local Windows system's timezone settings.

  SSEEEE AALLSSOO

    _d_a_t_e(1)

    _g_e_t_t_i_m_e_o_f_d_a_y(3)

    _c_t_i_m_e(3)

    _g_e_t_e_n_v(3)

    _t_i_m_e(2)

  UUSSAAGGEE NNOOTTEESS

    The ttzzsseett function is thread safe.

    The ttzzsseett function is not async-signal safe.

