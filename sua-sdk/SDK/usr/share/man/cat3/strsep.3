strsep(3)                                                     strsep(3)

  ssttrrsseepp(())

  NNAAMMEE

    strsep() - separate strings

  SSYYNNOOPPSSIISS

    #include <string.h>
    char * strsep (char **stringp, char *delim)

  DDEESSCCRRIIPPTTIIOONN

    The _ss_tt_rr_ss_ee_pp(3) function locates, in the string referenced by *stringp the
    first occurrence of any character in the string delim (or the terminating
    \0 character) and replaces it with a \0. The location of the next
    character after the delimiter character (or NULL, if the end of the string
    was reached) is stored in *stringp The original value of *stringp is
    returned.

    An "empty" field, i.e. one caused by two adjacent delimiter characters,
    can be detected by comparing the location referenced by the pointer
    returned in *stringp to \0.

    If *stringp is initially NULL, _ss_tt_rr_ss_ee_pp(3) returns NULL.

  EEXXAAMMPPLLEESS

    The following uses _ss_tt_rr_ss_ee_pp(3) to parse a string, containing tokens
    delimited by white space, into an argument vector:

    char **ap, *argv[10], *inputstring;
    for (ap = argv; (*ap = strsep(&inputstring, " \t")) != NULL;)
         if (**ap != '\0')
              ++ap;

  NNOOTTEESS

    The _ss_tt_rr_ss_ee_pp(3) function is intended as a replacement for the _ss_tt_rr_tt_oo_kk(3)
    function. While the _ss_tt_rr_tt_oo_kk(3) function should be preferred for portability
    reasons (it conforms to ISO> C) it is unable to handle empty fields, i.e.
    detect fields delimited by two adjacent delimiter characters, or to be
    used for more than a single string at a time. The _ss_tt_rr_ss_ee_pp(3) function first
    appeared in 4.4BSD.

  SSEEEE AALLSSOO

    _s_t_r_t_o_k(3)

  UUSSAAGGEE NNOOTTEESS

    The ssttrrsseepp function is thread safe.

    The ssttrrsseepp function is not async-signal safe.

