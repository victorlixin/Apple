getrpcent(3)                                               getrpcent(3)

  ggeettrrppcceenntt(())

  NNAAMMEE

    getrpcent(), getrpcbyname(), getrpcbynumber() - get RPC entry

  SSYYNNOOPPSSIISS

    #include <netdb.h>

    struct rpcent *getrpcent(void)
    struct rpcent *getrpcbyname(char *name)
    struct rpcent *getrpcbynumber(int number)
    setrpcent (int stayopen)
    endrpcent (void)

  DDEESSCCRRIIPPTTIIOONN

    _gg_ee_tt_rr_pp_cc_ee_nn_tt(3), _gg_ee_tt_rr_pp_cc_bb_yy_nn_aa_mm_ee(3), and _gg_ee_tt_rr_pp_cc_bb_yy_nn_uu_mm_bb_ee_rr(3) each return a pointer
    to an object with the following structure containing the broken-out fields
    of a line in the rpc program number data base, //eettcc//rrppcc.

    struct    rpcent {
         char *r_name;  /* name of server for this rpc program */
         char **r_aliases;   /* alias list */
         long r_number; /* rpc program number */
    };

    The members of this structure are:

    rr__nnaammee
        The name of the server for this rpc program.

    rr__aalliiaasseess
        A zero terminated list of alternate names for the rpc program.

    rr__nnuummbbeerr
        The rpc program number for this service.

    _gg_ee_tt_rr_pp_cc_ee_nn_tt(3) reads the next line of the file, opening the file if
    necessary.

    _ss_ee_tt_rr_pp_cc_ee_nn_tt(3) opens and rewinds the file. If the stayopen flag is non-zero,
    the net data base will not be closed after each call to _gg_ee_tt_rr_pp_cc_ee_nn_tt(3)
    (either directly, or indirectly through one of the other getrpc calls).

    _ee_nn_dd_rr_pp_cc_ee_nn_tt(3) closes the file.

    _gg_ee_tt_rr_pp_cc_bb_yy_nn_aa_mm_ee(3) and _gg_ee_tt_rr_pp_cc_bb_yy_nn_uu_mm_bb_ee_rr(3) sequentially search from the
    beginning of the file until a matching rpc program name or program number
    is found, or until end-of-file is encountered.

  RREETTUURRNN VVAALLUUEESS

    A NULL pointer is returned on EOF or error.

  BBUUGGSS

    All information is contained in a static area so it must be copied if it
    is to be saved.

  FFIILLEESS

    //eettcc//rrppcc

  SSEEEE AALLSSOO

    _r_p_c(5)

    _r_p_c_i_n_f_o(1)

  UUSSAAGGEE NNOOTTEESS

    None of these functions are thread safe.

    None of these functions are async-signal safe.

