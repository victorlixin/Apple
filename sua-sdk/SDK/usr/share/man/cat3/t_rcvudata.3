t_rcvudata(3)                                             t_rcvudata(3)

  tt__rrccvvuuddaattaa(())

  NNAAMMEE

    t_rcvudata - receive a data unit

  SSYYNNOOPPSSIISS

    #include <xti.h>

    int t_rcvudata(
        int fd,
        struct t_unitdata *unitdata,
        int *flags)

  DDEESSCCRRIIPPTTIIOONN

    The tt__rrccvvuuddaattaa(3) function is used in connectionless-mode to receive a
    data unit from another transport user.

    PPaarraammeetteerrss     BBeeffoorree ccaallll      AAfftteerr ccaallll

    fd             x                /

    unitdata->     addr.maxlen      x

    unitdata->     addr.len         /

    unitdata->     addr.buf         ?

    unitdata->     opt.maxlen       x

    unitdata->     opt.len          /

    unitdata->     opt.buf          ?

    unitdata->     udata.maxlen     x

    unitdata->     udata.len        /

    unitdata->     udata.buf        ?

    flags          /                x

    The argument fd identifies the local transport endpoint through which data
    will be received, unitdata holds information associated with the received
    data unit, and flags is set on return to indicate that the complete data
    unit was not received. The argument unitdata points to a t_unitdata
    structure containing the following members:

    struct netbuf addr;
    struct netbuf opt;
    struct netbuf udata;

    The maxlen field of addr, opt and udata must be set before calling this
    function to indicate the maximum size of the buffer for each. If the
    maxlen field of addr or opt is set to zero, no information is returned in
    the buf field of this parameter.

    On return from this call, addr specifies the protocol address of the
    sending user, opt identifies options that were associated with this data
    unit, and udata specifies the user data that was received.

    By default, tt__rrccvvuuddaattaa(3) operates in synchronous mode and will wait for a
    data unit to arrive if none is currently available. However, if O_NONBLOCK
    is set (through _tt____oo_pp_ee_nn(3) or _ff_cc_nn_tt_ll(2)), tt__rrccvvuuddaattaa(3) will execute in
    asynchronous mode and will fail if no data units are available.

    If the buffer defined in the udata field of unitdata is not large enough
    to hold the current data unit, the buffer will be filled and T_MORE will
    be set in flags on return to indicate that another tt__rrccvvuuddaattaa(3) should be
    called to retrieve the rest of the data unit. Subsequent calls to
    tt__rrccvvuuddaattaa(3) will return zero for the length of the address and options
    until the full data unit has been received.

    If the call is interrupted, tt__rrccvvuuddaattaa(3) will return [EINTR] and no
    datagrams will have been removed from the endpoint.

  VVAALLIIDD SSTTAATTEESS

    T_IDLE

  EERRRROORRSS

    On failure, t_errno is set to one of the following:

    [TBADF]
        The specified file descriptor does not refer to a transport endpoint.

    [TBUFOVFLW]
        The number of bytes allocated for the incoming protocol address or
        options (maxlen) is greater than 0 but not sufficient to store the
        information. The unit data information to be returned in unitdata will
        be discarded.

    [TLOOK]
        An asynchronous event has occurred on this transport endpoint and
        requires immediate attention.

    [TNODATA]
        O_NONBLOCK was set, but no data units are currently available from the
        transport provider.

    [TNOTSUPPORT]
        This function is not supported by the underlying transport provider.

    [TOUTSTATE]
        The communications endpoint referenced by fd is not in one of the
        states in which a call to this function is valid.

    [TPROTO]
        This error indicates that a communication problem has been detected
        between XTI and the transport provider for which there is no other
        suitable XTI error (t_errno).

    [TSYSERR]
        A system error has occurred during execution of this function.

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and t_errno is set to indicate an error.

  SSEEEE AALLSSOO

    _ff_cc_nn_tt_ll(2)

    _tt____aa_ll_ll_oo_cc(3)

    _tt____oo_pp_ee_nn(3)

    _tt____rr_cc_vv_uu_dd_ee_rr_rr(3)

    _tt____ss_nn_dd_uu_dd_aa_tt_aa(3)

  UUSSAAGGEE NNOOTTEESS

    The tt__rrccvvuuddaattaa function is not thread safe.

    The tt__rrccvvuuddaattaa function is not async-signal safe.

