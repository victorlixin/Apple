slk_attron(3)                                             slk_attron(3)

  ccuurrss__ssllkk(())

  NNAAMMEE

    slk_init(), slk_set(), slk_refresh(), slk_noutrefresh(), slk_label(),
    slk_clear(), slk_restore(), slk_touch(), slk_attron(), slk_attrset(),
    slk_attroff() - curses soft label routines

  SSYYNNOOPPSSIISS

    #include <curses.h>

    int slk_init(int fmt);
    int slk_set(int labnum, const char *label, int fmt);
    int slk_refresh(void);
    int slk_noutrefresh(void);
    char *slk_label(int labnum);
    int slk_clear(void);
    int slk_restore(void);
    int slk_touch(void);
    int slk_attron(attr_t attrs);
    int slk_attrset(attr_t attrs);
    int slk_attroff(attr_t attrs);

  DDEESSCCRRIIPPTTIIOONN

    The slk functions manipulate the set of soft function-key labels that
    exist on many terminals. For those terminals that do not have soft labels,
    ccuurrsseess takes over the bottom line of stdscr reducing the size of stdscr
    and the variable LINES ccuurrsseess standardizes on eight labels of up to eight
    characters each.

    The _ss_ll_kk____ii_nn_ii_tt(3) routine must be called before _ii_nn_ii_tt_ss_cc_rr(3) or _nn_ee_ww_tt_ee_rr_mm(3) is
    called. If _ii_nn_ii_tt_ss_cc_rr(3) eventually uses a line from stdscr to emulate the
    soft labels, then fmt determines how the labels are arranged on the
    screen. Setting fmt to 0 indicates a 3-2-3 arrangement of the labels; 1
    indicates a 4-4 arrangement.

    The _ss_ll_kk____ss_ee_tt(3) routine requires labnum to be a label number, from 1 to 8;
    label must be the string to be put on the label, up to eight characters in
    length. A null string or a null pointer sets up a blank label. fmt is
    either 0, 1, or 2, indicating whether the label is to be left-justified,
    centered, or right-justified, respectively, within the label.

    The _ss_ll_kk____rr_ee_ff_rr_ee_ss_hh(3) and _ss_ll_kk____nn_oo_uu_tt_rr_ee_ff_rr_ee_ss_hh(3) routines correspond to the
    _ww_rr_ee_ff_rr_ee_ss_hh(3) and _ww_nn_oo_uu_tt_rr_ee_ff_rr_ee_ss_hh(3) routines.

    The _ss_ll_kk____ll_aa_bb_ee_ll(3) routine returns the current label for label number
    labnum, with leading and trailing blanks stripped.

    The _ss_ll_kk____cc_ll_ee_aa_rr(3) routine clears the soft labels from the screen.

    The _ss_ll_kk____rr_ee_ss_tt_oo_rr_ee(3) routine restores the soft labels to the screen after a
    _ss_ll_kk____cc_ll_ee_aa_rr(3) has been performed.

    The _ss_ll_kk____tt_oo_uu_cc_hh(3) routine forces all the soft labels to be output the next
    time a _ss_ll_kk____nn_oo_uu_tt_rr_ee_ff_rr_ee_ss_hh(3) is performed.

    The _ss_ll_kk____aa_tt_tt_rr_oo_nn(3), _ss_ll_kk____aa_tt_tt_rr_ss_ee_tt(3) and _ss_ll_kk____aa_tt_tt_rr_oo_ff_ff(3) routines correspond
    to _aa_tt_tt_rr_oo_nn(3), _aa_tt_tt_rr_ss_ee_tt(3), and _aa_tt_tt_rr_oo_ff_ff(3). They have an effect only if soft
    labels are simulated on the bottom line of the screen. The default
    highlight for soft keys is A_STANDOUT (as in System V curses, which does
    not document this fact).

  RREETTUURRNN VVAALLUUEE

    These routines return ERR upon failure and OK (SVr4 specifies only "an
    integer value other than ERR") upon successful completion.

    _ss_ll_kk____ll_aa_bb_ee_ll(3) returns NULL on error.

  NNOOTTEESS

    Most applications would use _ss_ll_kk____nn_oo_uu_tt_rr_ee_ff_rr_ee_ss_hh(3) because a _ww_rr_ee_ff_rr_ee_ss_hh(3) is
    likely to follow soon.

  PPOORRTTAABBIILLIITTYY

    The XSI Curses standard, Issue 4, describes these functions. It changes
    the argument type of the attribute-manipulation functions _ss_ll_kk____aa_tt_tt_rr_oo_nn(3),
    _ss_ll_kk____aa_tt_tt_rr_oo_ff_ff(3), _ss_ll_kk____aa_tt_tt_rr_ss_ee_tt(3) to be aattttrr__tt, and adds ccoonnsstt qualifiers.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

    _c_u_r_s___a_t_t_r(3)

    _c_u_r_s___i_n_i_t_s_c_r(3)

    _c_u_r_s___r_e_f_r_e_s_h(3)

