fclose(3)                                                     fclose(3)

  ffcclloossee(())

  NNAAMMEE

    fclose() - close a stream

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    int fclose (FILE *stream)

  DDEESSCCRRIIPPTTIIOONN

    The _ff_cc_ll_oo_ss_ee(3) function dissociates the named stream from its underlying
    file or set of functions. If the stream was being used for output, any
    buffered data is written first, using _ff_ff_ll_uu_ss_hh(3).

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion 0 is returned. Otherwise, EOF is returned and
    the global variable errno is set to indicate the error. In either case no
    further access to the stream is possible.

  EERRRROORRSS

    [EAGAIN]
        The O_NONBLOCK flag is set for the file and the process would be
        delayed in the flush (write) operation.

    [EBADF]
        The argument stream is not an open stream.

    [EFBIG]
        Flushing output would result in a file that exceeds the maximum file
        size.

    [EINTR}
        A signal interrupted the close operation.

    [EIO]
        The process is a member of a background process group attempting to
        write to its controlling terminal, TOSTOP is set, the process is
        neither ignoring nor blocking SIGTTOU and the process group of the
        process is orphaned. This error may also be returned under
        implementation-dependent conditions.

    [ENOSPC]
        There is no space on the device to write pending output.

    [EPIPE]
        stream is actually a pipe (or FIFO) that is not open for reading by
        any process.

  SSEEEE AALLSSOO

    _c_l_o_s_e(2)

    _f_f_l_u_s_h(3)

    _f_o_p_e_n(3)

    _s_e_t_b_u_f(3)

  UUSSAAGGEE NNOOTTEESS

    The ffcclloossee function is thread safe.

    The ffcclloossee function is not async-signal safe.

