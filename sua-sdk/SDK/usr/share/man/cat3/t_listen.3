t_listen(3)                                                 t_listen(3)

  tt__lliisstteenn(())

  NNAAMMEE

    t_listen - listen for a connection indication

  SSYYNNOOPPSSIISS

    #include <xti.h>

    int t_listen(
        int fd,
        struct t_call *call)

  DDEESSCCRRIIPPTTIIOONN

    The tt__lliisstteenn(3) function listens for a connection indication from a
    calling transport user. The fd argument identifies the local transport
    endpoint where connection indications arrive, and on return, call contains
    information describing the connection indication.

    BBeeffoorree ccaallll     PPaarraammeetteerrss       AAfftteerr ccaallll

    fd              x                /

    call->          addr.maxlen      x

    call->          addr.len         /

    call->          addr.buf         ?

    call->          opt.maxlen       x

    call->          opt.len          /

    call->          opt.buf          ?

    call->          udata.maxlen     x

    call->          udata.len        /

    call->          udata.buf        ?

    call->          sequence         /

    The parameter call points to a t_call structure which contains the
    following members:

    struct netbuf addr;
    struct netbuf opt;
    struct netbuf udata;
    int sequence;

    In call, addr returns the protocol address of the calling transport user.
    This address is in a format usable in future calls to _tt____cc_oo_nn_nn_ee_cc_tt(3). Note,
    however that _tt____cc_oo_nn_nn_ee_cc_tt(3) may fail for other reasons, for example
    [TADDRBUSY]. opt returns options associated with the connection
    indication, udata returns any user data sent by the caller on the
    connection request, and sequence is a number that uniquely identifies the
    returned connection indication. The value of sequence enables the user to
    listen for multiple connection indications before responding to any of
    them.

    Since this function returns values for the addr, opt and udata fields of
    call, the maxlen field of each must be set before issuing the tt__lliisstteenn(3)
    to indicate the maximum size of the buffer for each. If the maxlen field
    of call->addr, call->opt, or call->udata is set to zero, no information is
    returned for this parameter.

    By default, tt__lliisstteenn(3) executes in synchronous mode and waits for a
    connection indication to arrive before returning to the user. However, if
    O_NONBLOCK is set through _tt____oo_pp_ee_nn(3) or ffccnnttll(), tt__lliisstteenn(3) executes
    asynchronously, reducing to a poll for existing connection indications. If
    none are available, it returns -1 and sets t_errno to [TNODATA].

  VVAALLIIDD SSTTAATTEESS

    T_IDLE, T_INCON

  EERRRROORRSS

    On failure, t_errno is set to one of the following:

    [TBADF]
        The specified file descriptor does not refer to a transport endpoint.

    [TBADQLEN]
        The argument qlen of the endpoint referenced by fd is zero.

    [TBUFOVFLW]
        The number of bytes allocated for an incoming argument (maxlen) is
        greater than 0 but not sufficient to store the value of that argument.
        The provider's state, as seen by the user, changes to T_INCON, and the
        connection indication information to be returned in call is discarded.
        The value of sequence returned can be used to do a _tt____ss_nn_dd_dd_ii_ss(3).

    [TLOOK]
        An asynchronous event has occurred on this transport endpoint and
        requires immediate attention.

    [TNODATA]
        O_NONBLOCK was set, but no connection indications had been queued.

    [TNOTSUPPORT]
        This function is not supported by the underlying transport provider.

    [TOUTSTATE]
        The communications endpoint referenced by fd is not in one of the
        states in which a call to this function is valid.

    [TPROTO]
        This error indicates that a communication problem has been detected
        between XTI and the transport provider for which there is no other
        suitable XTI error (t_errno).

    [TQFULL]
        The maximum number of outstanding connection indications has been
        reached for the endpoint referenced by fd. Note that a subsequent call
        to tt__lliisstteenn(3) may block until another incoming connection indication
        is available. This can only occur if at least one of the outstanding
        connection indications becomes no longer outstanding, for example
        through a call to _tt____aa_cc_cc_ee_pp_tt(3).

    [TSYSERR]
        A system error has occurred during execution of this function.

  CCAAVVEEAATTSS

    Some transport providers do not differentiate between a connection
    indication and the connection itself. If this is the case, a successful
    return of tt__lliisstteenn(3) indicates an existing connection.

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and t_errno is set to indicate an error.

  SSEEEE AALLSSOO

    _ff_cc_nn_tt_ll(2)

    _tt____aa_cc_cc_ee_pp_tt(3)

    _tt____aa_ll_ll_oo_cc(3)

    _tt____bb_ii_nn_dd(3)

    _tt____cc_oo_nn_nn_ee_cc_tt(3)

    _tt____oo_pp_ee_nn(3)

    _tt____oo_pp_tt_mm_gg_mm_tt(3)

    _tt____rr_cc_vv_cc_oo_nn_nn_ee_cc_tt(3)

  UUSSAAGGEE NNOOTTEESS

    The tt__lliisstteenn function is not thread safe.

    The tt__lliisstteenn function is not async-signal safe.

