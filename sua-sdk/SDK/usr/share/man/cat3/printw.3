printw(3)                                                     printw(3)

  ccuurrss__pprriinnttww(())

  NNAAMMEE

    printw(), wprintw(), mvprintw(), mvwprintw(), vwprintw() - print formatted
    output in curses windows

  SSYYNNOOPPSSIISS

    #include <curses.h>

    int printw(char *fmt [, arg] ...);
    int wprintw(WINDOW *win, char *fmt [, arg] ...);
    int mvprintw(int y, int x, char *fmt [, arg] ...);
    int mvwprintw(WINDOW *win, int y, int x,
          char *fmt [, arg] ...);

    #include <stdarg.h>
    int vwprintw(WINDOW *win, char *fmt, varglist);
    int vw_printw(WINDOW *win, char *fmt, varglist);

  DDEESSCCRRIIPPTTIIOONN

    The _pp_rr_ii_nn_tt_ww(3), _ww_pp_rr_ii_nn_tt_ww(3), _mm_vv_pp_rr_ii_nn_tt_ww(3) and _mm_vv_ww_pp_rr_ii_nn_tt_ww(3) routines are
    analogous to _pp_rr_ii_nn_tt_ff(3). In effect, the string that would be output by
    _pp_rr_ii_nn_tt_ff(3) is output instead as though _ww_aa_dd_dd_ss_tt_rr(3) were used on the given
    window.

    The _vv_ww_pp_rr_ii_nn_tt_ww(3) routine is analogous to _vv_pp_rr_ii_nn_tt_ff(3) and performs a
    _ww_pp_rr_ii_nn_tt_ww(3) using a variable argument list. The third argument is a
    vvaa__lliisstt, a pointer to a list of arguments, as defined in <<ssttddaarrgg..hh>>. The
    _vv_ww____pp_rr_ii_nn_tt_ww(3) routine is a ##ddeeffiinnee for _vv_ww_pp_rr_ii_nn_tt_ww(3). _vv_ww____pp_rr_ii_nn_tt_ww(3) is planned
    for the XSI Curses standard. Traditionally, _vv_ww_pp_rr_ii_nn_tt_ww(3) made use of
    <<vvaarraarrggss..hh>> and _vv_ww____pp_rr_ii_nn_tt_ww(3) made use of <<ssttddaarrgg..hh>>, but both of the
    routines in this package use <<ssttddaarrgg..hh>>.

  RREETTUURRNN VVAALLUUEE

    Routines that return an integer return ERR upon failure and OK (SVr4 only
    specifies an integer value other than ERR) upon successful completion.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

    _p_r_i_n_t_f(3)

    _v_p_r_i_n_t_f(3)

