flockfile(3)                                               flockfile(3)

  fflloocckkffiillee(())

  NNAAMMEE

    flockfile(), ftrylockfile(), funlockfile() - lock stdio (FILE *) objects

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    void flockfile(FILE *file);
    int ftrylockfile(FILE *file);
    void funlockfile(FILE *file);

  DDEESSCCRRIIPPTTIIOONN

    These functions are used to lock stdio (FFIILLEE **) objects at the application
    level. Threads can use these functions to identify a sequence of I/
    O statements that are to be executed as a unit. These functions
    effectively maintain a lock count for the stdio stream referenced by the
    file argument.

    The fflloocckkffiillee(3) function acquires ownership for a thread of the stdio
    stream referenced by file. If the lock count of the stream is zero, then
    the calling thread takes ownership of the stream and the lock count is
    incremented. If the lock count of the stream is greater than one and the
    calling thread owns the stream, then the lock count is incremented. If the
    lock count of the stream is greater than one and the calling thread does
    not own the stream, then the calling thread is blocked until the lock
    count reaches zero, at which time the calling thread receives ownership of
    the stream and the lock count is incremented.

    The ffttrryylloocckkffiillee(3) is identical to fflloocckkffiillee(), except that the function
    immediately returns (the calling thread is not blocked) if the lock count
    of the stream referenced by file is greater than zero and the stream is
    not owned by the calling thread.

    The ffuunnlloocckkffiillee(3) function decrements the lock count for the stream
    referenced by file. This function should be called once for each
    successful call to fflloocckkffiillee() or ffttrryylloocckkffiillee().

  RREETTUURRNN VVAALLUUEESS

    No return values are defined for fflloocckkffiillee() and ffuunnlloocckkffiillee().

    The ffttrryylloocckkffiillee() function returns zero to indicate success. Any other
    return value indicates that the lock could not be acquired.

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

