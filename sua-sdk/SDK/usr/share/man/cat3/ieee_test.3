ieee_test(3)                                               ieee_test(3)

  iieeeeee__tteesstt(())

  NNAAMMEE

    logb(), scalb(), significand() - IEEE test functions

  SSYYNNOOPPSSIISS

    #include <math.h>

    double logb (double x)

    double scalb (double x, double n)

    double significand (double x)

  DDEESSCCRRIIPPTTIIOONN

    These functions allow users to test conformance to the IEEE 754 standard.

    _ll_oo_gg_bb(3) returns the exponent n of the argument x, n is a signed integer
    converted to double-precision floating-point. Specifically, it's the
    integral part of logr |x|, where r is the radix of the machine's floating
    point arithmetic. llooggbb(+-Infinity) = +Infinity; llooggbb(0) = -Infinity with a
    division by zero exception.

    The ssccaallbb(x,n) function returns xx(r**n), where r is the radix of the
    machine's floating point arithmetic. (For r=2, this is identical to
    _ll_dd_ee_xx_pp(3).) The value is computed by exponent manipulation without first
    computing r**n.

    _ss_ii_gg_nn_ii_ff_ii_cc_aa_nn_dd(3) returns sig, where the argument x := sig*2**n with 1 <= sig
    < 2. The ssiiggnniiffiiccaanndd() value are not defined when x is 0, +-Infinity, or
    NaN.

  RREETTUURRNN VVAALLUUEESS

    The llooggbb() function returns the exponent of x. If x is zero, it returns -
    HUGE_VAL and sets errno. If x is +-Infinity, it returns Infinity. If x is
    NaN, it returns NaN and sets errno.

    The _ss_cc_aa_ll_bb(3) function returns the value xx(r**n) where r is the radix of
    the machine's floating point arithmetic.

  EERRRROORRSS

    The _ll_oo_gg_bb(3) function can fail for the following reasons:

    [EDOM]
        Either the x argument is zero, or it is NaN.

    The _ss_cc_aa_ll_bb(3) function can fail for the following reasons:

    [EDOM]
        Either x or n is NaN.

    [ERANGE]
        The correct value will overflow or underflow.

  NNOOTTEESS

    Note that the function _ll_dd_ee_xx_pp(3) is slightly more portable than _ss_cc_aa_ll_bb(3),
    and that _ff_rr_ee_xx_pp(3) does the same jobs as _ss_cc_aa_ll_bb(3) and _ss_ii_gg_nn_ii_ff_ii_cc_aa_nn_dd(3), in a
    slightly more portable manner. Both _ll_dd_ee_xx_pp(3) and _ff_rr_ee_xx_pp(3) use the radix as
    base for the exponent, rather than 2.

  SSEEEE AALLSSOO

    _f_r_e_x_p(3)

    _i_e_e_e(3)

    _l_d_e_x_p(3)

    _m_a_t_h(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

