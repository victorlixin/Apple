winchstr(3)                                                 winchstr(3)

  ccuurrss__iinncchhssttrr(())

  NNAAMMEE

    inchstr(), inchnstr(), winchstr(), winchnstr(), mvinchstr(), mvinchnstr(),
    mvwinchstr(), mvwinchnstr() - get a string of characters (and attributes)
    from a curses window

  SSYYNNOOPPSSIISS

    #include <curses.h>

    int incchhssttrr(chtype *chstr);
    int inchnstr(chtype *chstr, int n);
    int wincchhssttrr(WINDOW *win, chtype *chstr);
    int winchnstr(WINDOW *win, chtype *chstr, int n);
    int mvincchhssttrr(int y, int x, chtype *chstr);
    int mvinchnstr(int y, int x, chtype *chstr, int n);
    int mvwincchhssttrr(WINDOW *win, int y, int x, chtype *chstr);
    int mvwinchnstr(WINDOW *win, int y, int x, chtype *chstr, int n);

  DDEESSCCRRIIPPTTIIOONN

    These routines return a NULL-terminated array of cchhttyyppee quantities,
    starting at the current cursor position in the named window and ending at
    the right margin of the window. The four functions with n as the last
    argument, return a leading substring at most n characters long (exclusive
    of the trailing (chtype)0). Constants defined in <<ccuurrsseess..hh>> can be used
    with the && (logical AND) operator to extract the character or the
    attribute alone from any position in the chstr (see _c_u_r_s___i_n_c_h(3).

  RREETTUURRNN VVAALLUUEE

    All routines return the integer ERR upon failure and an integer value
    other than ERR upon successful completion (the number of characters
    retrieved, exclusive of the trailing 0).

  NNOOTTEESS

    Note that all routines except _ww_ii_nn_cc_hh_nn_ss_tt_rr(3) may be macros. SVr4 does not
    document whether the result string is 0-terminated; it does not document
    whether a length limit argument includes any trailing 0; and it does not
    document the meaning of the return value.

  PPOORRTTAABBIILLIITTYY

    These functions are described in the XSI Curses standard, Issue 4. It is
    no more specific than the SVr4 documentation on the trailing 0. It does
    specify that the successful return of the functions is OK.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

    _c_u_r_s___i_n_c_h(3)

