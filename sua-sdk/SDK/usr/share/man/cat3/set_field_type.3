set_field_type(3)                                     set_field_type(3)

  ffoorrmm__ffiieelldd__vvaalliiddaattiioonn(())

  NNAAMMEE

    set_field_type(), field_type(), field_arg() - data type validation for
    fields

  SSYYNNOOPPSSIISS

    #include <form.h>

    int set_field_type(FIELD *field, FIELDTYPE *type, ...);
    FIELDTYPE *field_type(FIELD *field);
    char *field_arg(FIELD *field);

  DDEESSCCRRIIPPTTIIOONN

    The function _ss_ee_tt____ff_ii_ee_ll_dd____tt_yy_pp_ee(3) declares a data type for a given form
    field. This is the type checked by validation functions. The types are as
    follows:

    TYPE_ALNUM
        Alphanumeric data. Requires a third argument, a minimum field width.

    TYPE_ALPHA
        Character data. Requires a third argument, a minimum field width.

    TYPE_ENUM
        Accept one of a specified set of strings. Requires a third (char **)
        argument pointing to a string list; a fourth flag argument to enable
        case-sensitivity; and a fifth flag argument specifying whether a
        partial match must be a unique one (if this flag is off, a prefix
        matches the first of any set of more than one list elements with that
        prefix).

    TYPE_INTEGER
        Integer data, parseable to an integer by _a_t_o_i(3). Requires a third
        integer precision argument that sets zero-padding, a fourth argument
        constraining minimum value, and a fifth constraining maximum value.

    TYPE_NUMERIC
        Numeric data (may have a decimal-point part). Requires following
        arguments as for TYPE_INTEGER data.

    TYPE_REGEXP
        Regular expression data. Requires a regular expression third argument;
        the data is valid if the regular expression matches it. Regular
        expressions are in the format of _r_e_g_c_o_m_p(3) and _r_e_g_e_x_e_c(3)

    It is possible to set up new programmer-defined field types. See the
    _ff_oo_rr_mm____ff_ii_ee_ll_dd_tt_yy_pp_ee(3) manual page.

  RREETTUURRNN VVAALLUUEE

    The functions _ff_ii_ee_ll_dd____tt_yy_pp_ee(3) and _ff_ii_ee_ll_dd____aa_rr_gg(3) return NULL on error. The
    function _ss_ee_tt____ff_ii_ee_ll_dd____tt_yy_pp_ee(3) returns one of the following:

    E_OK
        The routine succeeded.

    E_SYSTEM_ERROR
        System error occurred (see errno

  SSEEEE AALLSSOO

    _a_t_o_i(3)

    _c_u_r_s_e_s(3)

    _f_o_r_m_s(3)

    _f_o_r_m___f_i_e_l_d_t_y_p_e(3)

    _r_e_g_c_o_m_p(3)

    _r_e_g_e_x_e_c(3)

  NNOOTTEESS

    The header file <<ffoorrmm..hh>> automatically includes the header file
    <<ccuurrsseess..hh>>.

  PPOORRTTAABBIILLIITTYY

    These routines emulate the System V forms library. They were not supported
    on Version 7 or BSD versions.

