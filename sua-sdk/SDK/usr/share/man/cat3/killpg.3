killpg(3)                                                     killpg(3)

  kkiillllppgg(())

  NNAAMMEE

    killpg() - send signal to a process group

  SSYYNNOOPPSSIISS

    #include <sys/types.h>
    #include <signal.h>

    int killpg (pid_t pgrp, int signum)

  DDEESSCCRRIIPPTTIIOONN

    _KK_ii_ll_ll_pp_gg(3) sends the signal signum to the process group pgrp. See
    _ss_ii_gg_aa_cc_tt_ii_oo_nn(2) for a list of signals. If pgrp is 0, _kk_ii_ll_ll_pp_gg(3) sends the
    signal to the sending process's process group.

    The _kk_ii_ll_ll_pp_gg(3) call is successful if the sending process has permission to
    send signum to any process in the process group list. To be successful,
    the sending process must have the same user ID as the process group
    member. As a single special case the continue signal SIGCONT may be sent
    to any process that is a descendant of the current process.

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and the global variable errno is set to indicate the
    error.

  EERRRROORRSS

    _KK_ii_ll_ll_pp_gg(3) will fail and no signal will be sent if:

    [EINVAL]
        Signum is not a valid signal number.

    [ESRCH]
        No process can be found in the process group specified by pgrp.

    [ESRCH]
        The process group was given as 0 but the sending process does not have
        a process group.

    [EPERM]
        The sending process does not have the appropriate privileges and one
        or more of the target processes has an effective user ID different
        from that of the sending process.

  SSEEEE AALLSSOO

    _k_i_l_l(2)

    _g_e_t_p_g_r_p(2)

    _s_i_g_a_c_t_i_o_n(2)

    _s_i_g_n_a_l(2)

  UUSSAAGGEE NNOOTTEESS

    The kkiillllppgg function is thread safe.

    The kkiillllppgg function is not async-signal safe.

