drem(3)                                                         drem(3)

  iieeeeee(())

  NNAAMMEE

    copysign(), drem(), copysignf(), finite(), finitef(), ilogb(),
    nextafter(), remainder(), scalbn() scalbnf() - functions for IEEE
    arithmetic

  SSYYNNOOPPSSIISS

    #include <math.h>

    double copysign (double x, double y)
    double drem (dobule x, double y)
    float copysignf (float x, float y)
    int finite (double x)
    int finitef (float x)
    int ilogb (double x)

    double nextafter (double x, double y)

    double remainder (double x, double y)

    double scalbn (double x, int n)
    float scalbnf (float x, int n)

  DDEESSCCRRIIPPTTIIOONN

    _cc_oo_pp_yy_ss_ii_gg_nn(3) and _cc_oo_pp_yy_ss_ii_gg_nn_ff(3) return x with its sign changed to y's.

    The _dd_rr_ee_mm(3) function returns the remainder r := x - n*y where n is the
    integer nearest the exact value of x/y; moreover if |n-x/y| = 1/2 then n
    is even. Consequently the remainder is computed exactly and |r| lt;= |y|/
    2. But ddrreemm(x,0) is exceptional; see RETURN VALUE below.

    _ff_ii_nn_ii_tt_ee(3) and _ff_ii_nn_ii_tt_ee_ff(3) return the value 1 just when -Infinity < x <
    +Infinity; otherwise a zero is returned (when |x| = Infinity or x is NaN.

    _ii_ll_oo_gg_bb(3) returns x's exponent n, in integer format. iillooggbb(+-f) returns
    INT_MAX and iillooggbb(0) returns -INT_MIN.

    _nn_ee_xx_tt_aa_ff_tt_ee_rr(3) returns the next machine representable number from x in
    direction y. The _nn_ee_xx_tt_aa_ff_tt_ee_rr(3) function sets errno on error, so to check
    for errors, set errno to 0 before calling _nn_ee_xx_tt_aa_ff_tt_ee_rr(3) and check its value
    after the call.

    _rr_ee_mm_aa_ii_nn_dd_ee_rr(3) returns the remainder r := x - n*y where n is the integer
    nearest the exact value of x/y; moreover if |n| - |x/y| = 1/2 then n is
    even. Consequently the remainder is computed exactly and |r| < |y|/2. But
    rreemmaaiinnddeerr(x,0) and rreemmaaiinnddeerr(Infinity,0) are invalid operations that
    produce a NaN.

    _ss_cc_aa_ll_bb_nn(3) and _ss_cc_aa_ll_bb_nn_ff(3) return x*(2**n) computed by exponent
    manipulation.

  RREETTUURRNN VVAALLUUEE

    The _cc_oo_pp_yy_ss_ii_gg_nn(3) and _cc_oo_pp_yy_ss_ii_gg_nn_ff(3) function return the value of x with the
    same sign as y.

    ddrreemm(x,0) and ddrreemm(Infinity,y) are invalid operations that produce a NaN.

    The _ff_ii_nn_ii_tt_ee(3) and _ff_ii_nn_ii_tt_ee_ff(3) functions return 1 if the argument x is
    neither +-Infinity. Otherwise it returns 0.

    The _ii_ll_oo_gg_bb(3) function returns x's exponent n, in integer format.

    The _nn_ee_xx_tt_aa_ff_tt_ee_rr(3) function returns the next representable double-precision
    floating point number after x in the direction of y.

    The _ss_cc_aa_ll_bb_nn(3) and _ss_cc_aa_ll_bb_nn_ff(3) functions return the value of x*(2**n)
    without calculating 2**n first.

  EERRRROORRSS

    The _nn_ee_xx_tt_aa_ff_tt_ee_rr(3) function can fail for the following reasons:

    [EDOM]
        One of the arguments is NaN.

    [ERANGE]
        The correct value would overflow.

    The _rr_ee_mm_aa_ii_nn_dd_ee_rr(3) function can fail for the following reasons:

    [EDOM]
        The x argument is 0 or the y argument is +-Infinity, or either x or y
        is NaN.

  SSEEEE AALLSSOO

    _m_a_t_h(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

