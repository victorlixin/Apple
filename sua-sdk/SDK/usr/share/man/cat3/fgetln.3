fgetln(3)                                                     fgetln(3)

  ffggeettllnn(())

  NNAAMMEE

    fgetln() - get a line from a stream

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    char * fgetln (FILE *stream, size_t *len)

  DDEESSCCRRIIPPTTIIOONN

    The _ff_gg_ee_tt_ll_nn(3) function returns a pointer to the next line from the stream
    referenced by stream. This line is not a C string because it does not end
    with a terminating NUL character. The memory location pointed to by len
    contains the length of the line, including the final newline. (Note,
    however, that if the line is the last in a file that does not end in a
    newline, the returned text will not contain a newline.)

  RREETTUURRNN VVAALLUUEESS

    The _ff_gg_ee_tt_ll_nn(3) call returns a pointer after completing successfully; this
    pointer becomes invalid after the next I/O operation on stream (whether
    the operation is successful or not) or as soon as the stream is closed.
    Otherwise, the function returns NULL.

    The _ff_gg_ee_tt_ll_nn(3) function does not distinguish between end-of-file and error;
    use the routines _ff_ee_oo_ff(3) and _ff_ee_rr_rr_oo_rr(3) to determine which occurred. If an
    error occurs, the global veriable errno is set to indicate the error. The
    end-of-file condition is remembered (even on a terminal), and all
    subsequent attempts to read will return NULL until the condition is
    cleared with _cc_ll_ee_aa_rr_ee_rr_rr(3).

    You may modify the text to which the returned pointer points, provided
    that you make no changes beyond the returned size. (There is one
    exception: if the last line of the file does not end in a newline,
    _ff_gg_ee_tt_ll_nn(3) guarantees one byte past the returned size, for code which needs
    to nul-terminate the string.) Any changes are lost as soon as the pointer
    becomes invalid.

  EERRRROORRSS

    [EBADF]
        The argument stream is not a stream open for reading.
        The _ff_gg_ee_tt_ll_nn(3) function may also fail and set errno for any of the
        errors specified for the routines _ff_ff_ll_uu_ss_hh(3), _mm_aa_ll_ll_oo_cc(3), _rr_ee_aa_dd(2),
        _ss_tt_aa_tt(2), or _rr_ee_aa_ll_ll_oo_cc(3).

  SSEEEE AALLSSOO

    _f_e_r_r_o_r(3)

    _f_g_e_t_s(3)

    _f_o_p_e_n(3)

    _p_u_t_c(3)

  UUSSAAGGEE NNOOTTEESS

    The ffggeettllnn function is not thread safe.

    The ffggeettllnn function is not async-signal safe.

