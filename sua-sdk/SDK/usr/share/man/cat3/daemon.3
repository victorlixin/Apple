daemon(3)                                                     daemon(3)

  ddaaeemmoonn(())

  NNAAMMEE

    daemon() - run in the background

  SSYYNNOOPPSSIISS

    #include <stdlib.h>

    int daemon (int nochdir, int noclose)

  DDEESSCCRRIIPPTTIIOONN

    The _dd_aa_ee_mm_oo_nn(3) call is an interface to allow a program to become a system
    daemon. The function causes the calling program to _ff_oo_rr_kk(2); the parent
    exits and the child then performs a _ss_ee_tt_ss_ii_dd(2). This disassociates the
    process from its current process group, session, and controlling terminal.
    On successful completion of this call, the process is the session leader
    of a group in which it is the only member, and the session has no
    controlling terminal.

    If nochdir is zero, the process changes its current working directory to
    the installed root of Subsystem for UNIX-based Applications. Otherwise the current working directory is
    unchanged.

    If noclose is zero, the process redirects standard input, standard output,
    and standard error to //ddeevv//nnuullll. Otherwise the standard file handles
    remain directed at the terminal that was previously the controlling
    terminal.

  RREETTUURRNN VVAALLUUEESS

    The ddaaeemmoonn(3) function returns 0 on success; on failure, it returns -1 and
    sets the global variable errno.

  EERRRROORRSS

    The _dd_aa_ee_mm_oo_nn(3) function can fail for the following reasons:

    [EAGAIN]
        The system-imposed limit on the total number of processes under
        execution would be exceeded. This limit is configuration-dependent.

    [EAGAIN]
        The system-imposed limit on the total number of processes under
        execution by a single user would be exceeded.

    [EPERM]
        The calling process is already a process group leader, or the process
        group ID of a process other than the calling process matches the
        process ID of the calling process.

  SSEEEE AALLSSOO

    _f_o_r_k(2)

    _s_e_t_s_i_d(2)

  UUSSAAGGEE NNOOTTEESS

    The ddaaeemmoonn function is thread safe.

    The ddaaeemmoonn function is not async-signal safe.

