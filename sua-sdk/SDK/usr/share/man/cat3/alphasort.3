alphasort(3)                                               alphasort(3)

  ssccaannddiirr(())

  NNAAMMEE

    scandir(), alphasort() - enumerate directory contents

  SSYYNNOOPPSSIISS

    #include <sys/types.h>
    #include <dirent.h>

    int scandir(const char *dirname, struct dirent ***namelist,
        int (*select)(struct dirent *),
        int (*compar)(const void *, const void *));

    int alphasort(const void *d1, const void *d2);

  DDEESSCCRRIIPPTTIIOONN

    The ssccaannddiirr(3) function uses _mm_aa_ll_ll_oo_cc(3)to allocate memory for an array,
    fills that array with pointers to directory entries in the directory
    identified by dirname, and then returns the number of entries in the
    array. The namelist argument contains a pointer to the resulting array.

    The ssccaannddiirr() function calls the user-supplied subroutine referenced by
    the select argument to determine which entries are to be included in the
    array. The ssccaaddiirr() function passes to the select routine a pointer to a
    directory entry, and expects the select function to return a nonzero value
    if the directory entry is to be included in the array. If the select
    argument is null, all directory entries are included.

    The compar argument points to a user-supplied subroutine that is passed to
    _qq_ss_oo_rr_tt(3) to sort the completed array. If this pointer is null,the array is
    not sorted.

    The aallpphhaassoorrtt() function is a routine which can be used for the compar
    argument to sort the array alphabetically.

    The memory allocated for the array can be deallocated with _ff_rr_ee_ee(3), by
    freeing each pointer in the array and then the array itself.

  RREETTUURRNN VVAALLUUEESS

    The ssccaannddiirr() function returns 0 on success, or -1 if the specified
    directory canot be opened for reading or if sufficient memory to hold the
    data structures cannot be allocated.

  SSEEEE AALLSSOO

    _m_a_l_l_o_c(3)

    _q_s_o_r_t(3)

  UUSSAAGGEE NNOOTTEESS

    The ssccaannddiirr function is thread safe. The aallpphhaassoorrtt function is not thread
    safe.

    None of these functions are async-signal safe.

