scr_restore(3)                                           scr_restore(3)

  ccuurrss__ssccrr__dduummpp(())

  NNAAMMEE

    scr_dump(), scr_restore(), scr_init(), scr_set() - read or write a curses
    screen from or to a file

  SSYYNNOOPPSSIISS

    #include <curses.h>

    int scr_dump(const char *filename);
    int scr_restore(const char *filename);
    int scr_init(const char *filename);
    int scr_set(const char *filename);

  DDEESSCCRRIIPPTTIIOONN

    The _ss_cc_rr____dd_uu_mm_pp(3) routine dumps the current contents of the virtual screen
    to the file filename.

    The _ss_cc_rr____rr_ee_ss_tt_oo_rr_ee(3) routine sets the virtual screen to the contents of
    filename, which must have been written using _ss_cc_rr____dd_uu_mm_pp(3). The next call to
    _dd_oo_uu_pp_dd_aa_tt_ee(3) restores the screen to the way it looked in the dump file.

    The _ss_cc_rr____ii_nn_ii_tt(3) routine reads in the contents of filename and uses them to
    initialize the ccuurrsseess data structures about what the terminal currently
    has on its screen. If the data is determined to be valid, ccuurrsseess bases its
    next update of the screen on this information rather than clearing the
    screen and starting from scratch. _ss_cc_rr____ii_nn_ii_tt(3) is used after _ii_nn_ii_tt_ss_cc_rr(3) or
    a _ss_yy_ss_tt_ee_mm(3) call to share the screen with another process which has done a
    _ss_cc_rr____dd_uu_mm_pp(3) after its _ee_nn_dd_ww_ii_nn(3) call. The data is declared invalid if the
    terminfo capabilities rrmmccuupp and nnrrrrmmcc exist; also if the terminal has been
    written to since the preceding _ss_cc_rr____dd_uu_mm_pp(3) call.

    The _ss_cc_rr____ss_ee_tt(3) routine is a combination of _ss_cc_rr____rr_ee_ss_tt_oo_rr_ee(3) and _ss_cc_rr____ii_nn_ii_tt(3).
    It tells the program that the information in filenameis what is currently
    on the screen, and also what the program wants on the screen. This can be
    thought of as a screen inheritance function.

    To read (write) a window from (to) a file, use the _gg_ee_tt_ww_ii_nn(3) and _pp_uu_tt_ww_ii_nn(3)
    routines (see the _c_u_r_s___u_t_i_l(3) reference page).

  RREETTUURRNN VVAALLUUEE

    All routines return the integer ERR upon failure and OK upon success.

  NNOOTTEESS

    _SS_cc_rr____ii_nn_ii_tt(3), _ss_cc_rr____ss_ee_tt(3), and _ss_cc_rr____rr_ee_ss_tt_oo_rr_ee(3) may be macros.

  PPOORRTTAABBIILLIITTYY

    The XSI Curses standard, Issue 4, describes these functions (adding the
    ccoonnsstt qualifiers).

    The SVr4 docs merely say under _ss_cc_rr____ii_nn_ii_tt(3) that the dump data is also
    considered invalid "if the time-stamp of the tty is old" but don't define
    "old".

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

    _c_u_r_s___i_n_i_t_s_c_r(3)

    _c_u_r_s___r_e_f_r_e_s_h(3)

    _c_u_r_s___u_t_i_l(3)

    _s_y_s_t_e_m(3)

