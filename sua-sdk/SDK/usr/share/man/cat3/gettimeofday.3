gettimeofday(3)                                         gettimeofday(3)

  ggeettttiimmeeooffddaayy(())

  NNAAMMEE

    gettimeofday() - get date and time

  SSYYNNOOPPSSIISS

    #include <sys/time.h>

    int gettimeofday (struct timeval *tp, void *tzp)

  DDEESSCCRRIIPPTTIIOONN

    The system's notion of the current Greenwich time and the current time
    zone is obtained with the _gg_ee_tt_tt_ii_mm_ee_oo_ff_dd_aa_yy(3) call. The time is expressed in
    seconds and microseconds since midnight (0 hour), January 1, 1970. The
    resolution of the system clock is hardware dependent, and the time may be
    updated continuously or in ticks. If tp or tzp is NULL, the associated
    time information will not be returned.

    The ttiimmeevvaall structure is defined in <<ssyyss//ttiimmee..hh>> as:

    struct timeval {
         long tv_sec;        /* seconds since Jan. 1, 1970 */
         long tv_usec;  /* and microseconds */
    };

    The tzp argument is no longer supported; any value passed in is ignored.

  RREETTUURRNN VVAALLUUEE

    The function returns 0 on success. On failure, they return -1 and set the
    global variable errno to indicate the error.

  EERRRROORRSS

    The following error codes may be set in errno:

    [EFAULT]
        An argument address referenced invalid memory.

    [EPERM]
        A user without appropriate privileges attempted to set the time.

  NNOOTTEESS

    The tzp argument used to be a ssttrruucctt ttiimmeezzoonnee:

    struct timezone {
         int  tz_minuteswest; /* of Greenwich */
         int  tz_dsttime;    /* type of dst correction to apply */
    };

    If non-zero, the ttzz__ddssttttiimmee indicated that Daylight Savings time applied
    locally during the appropriate time of the year.

  SSEEEE AALLSSOO

    _d_a_t_e(1)

    _c_t_i_m_e(3)

  UUSSAAGGEE NNOOTTEESS

    The ggeettttiimmeeooffddaayy function is thread safe.

    The ggeettttiimmeeooffddaayy function is not async-signal safe.

