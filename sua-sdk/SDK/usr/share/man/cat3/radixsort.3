radixsort(3)                                               radixsort(3)

  rraaddiixxssoorrtt(())

  NNAAMMEE

    radixsort() - radix sort

  SSYYNNOOPPSSIISS

    #include <limits.h>
    #include <stdlib.h>

    int radixsort (u_char **base, int nmemb, u_char *table,
                  u_int endbyte)
    int sradixsort (u_char **base, int nmemb, u_char *table,
                   u_int endbyte)

  DDEESSCCRRIIPPTTIIOONN

    The _rr_aa_dd_ii_xx_ss_oo_rr_tt(3) and _ss_rr_aa_dd_ii_xx_ss_oo_rr_tt(3) functions are implementations of radix
    sort.

    These functions sort an array of pointers to byte strings, the initial
    member of which is referenced by base. The byte strings may contain any
    values; the end of each string is denoted by the user-specified value
    endbyte.

    Applications may specify a sort order by providing the table argument. If
    table is not NULL, it must reference an array of {UCHAR_MAX}+1 bytes which
    contains the sort weight of each possible byte value. The end-of-string
    byte must have a sort weight of 0 or 255 (for sorting in reverse order).
    More than one byte may have the same sort weight. The table argument is
    useful for applications that would sort different characters equally, for
    example, providing a table with the same weights for A-Z as for a-z will
    result in a case-insensitive sort. If table is NULL, the contents of the
    array are sorted in ascending order according to the ASCII order of the
    byte strings they reference and endbyte has a sorting weight of 0.

    The _ss_rr_aa_dd_ii_xx_ss_oo_rr_tt(3) function is stable, that is, if two elements compare as
    equal, their order in the sorted array is unchanged. The _ss_rr_aa_dd_ii_xx_ss_oo_rr_tt(3)
    function uses additional memory sufficient to hold nmemb pointers.

    The _rr_aa_dd_ii_xx_ss_oo_rr_tt(3) function is not stable, but uses no additional memory.

    These functions are variants of most-significant-byte radix sorting; in
    particular, see D.E. Knuth's Algorithm R and section 5.2.5, exercise 10.
    They take linear time relative to the number of bytes in the strings.

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion 0 is returned. Otherwise, -1 is returned and
    the global variable errno is set to indicate the error.

  EERRRROORRSS

    [EINVAL]
        The value of the endbyte element of table is not 0 or 255.

    Additionally, the _ss_rr_aa_dd_ii_xx_ss_oo_rr_tt(3) function may fail and set errno for any of
    the errors specified for the library routine _mm_aa_ll_ll_oo_cc(3).

  SSEEEE AALLSSOO

    _s_o_r_t(1)

    _q_s_o_r_t(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

