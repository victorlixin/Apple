putw(3)                                                         putw(3)

  ggeettww(())

  NNAAMMEE

    getw(), putw() - get word from or put word on a stream

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    int getw (FILE *stream)
    int putw (int w, FILE *stream)

  DDEESSCCRRIIPPTTIIOONN

    The ggeettww(3) function returns the next word (integer) from the input
    referenced by the stream argument. The getw(3) function increments the
    associated file pointer, if defined, to point to the next word.

    The ppuuttww(3) function writes the word (integer) identified by the w
    argument to the output stream referenced by the stream argument at the
    position of the file pointer, if defined.

    The size of a word is the size of an integer and varies from computer to
    computer. The ggeettww(3) and ppuuttww(3) functions neither assume nor cause
    special alignment in the file.

  RREETTUURRNN VVAALLUUEESS

    If successful, ggeettww(3) returns the next word from the stream. If the
    stream is at end-of-file or a read error occurs, ggeettww(3) returns EOF.
    Since EOF is a valid integer value, you must use _ff_ee_oo_ff(3) and _ff_ee_rr_rr_oo_rr(3) to
    distinguish between end-of-file and error. If an error occurs, the global
    variable errno is set to indicate the error.

    If successful, ppuuttww(3) returns 0; otherwise, it returns nonzero.

  EERRRROORRSS

    The ggeettww(3) function can fail for the following reason:

    [EOVERFLOW]
        The file specified by stream is a regular file and an attempt was made
        to read at or beyond the offset maximum associated with the
        corresponding stream.

    The ppuuttww(3) function can fail for the following reason:

    [EFBIG]
        Either the stream is unbuffered or the stream's buffer needs to be
        flushed, the file specified by stream is a regular file, and an
        attempt was made to write at or beyond the offset maximum associated
        with the corresponding stream.

  NNOOTTEE

    Because of possible differences in word length and byte ordering, files
    written using ppuuttww(3) are implementation dependent and may not be read
    using ggeettww(3) on a computer with a different processor architecture.

  SSEEEE AALLSSOO

    _f_e_r_r_o_r(3)

    _f_r_e_a_d(3)

    _f_o_p_e_n(3)

    _g_e_t_c(3)

    _p_u_t_c(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

