waddchstr(3)                                               waddchstr(3)

  ccuurrss__aaddddcchhssttrr(())

  NNAAMMEE

    addchstr(), addchnstr(), waddchstr(), waddchnstr(), mvaddchstr(),
    mvaddchnstr(), mvwaddchstr(), mvwaddchnstr() - add a string of characters
    (and attributes) to a curses window

  SSYYNNOOPPSSIISS

    #include <curses.h>

    int addchstr(const chtype *chstr);
    int addchnstr(const chtype *chstr, int n);
    int waddchstr(WINDOW *win, const chtype *chstr);
    int waddchnstr(WINDOW *win, const chtype *chstr, int n);
    int mvaddchstr(int y, int x, const chtype *chstr);
    int mvaddchnstr(int y, int x, const chtype *chstr, int n);
    int mvwaddchstr(WINDOW *win, int y, int x, const chtype *chstr);
    int mvwaddchnstr(WINDOW *win, int y, int x, const chtype *chstr,
                     int n);

  DDEESSCCRRIIPPTTIIOONN

    These routines copy chstr into the window image structure at and after the
    current cursor position. The four routines with n as the last argument
    copy at most n elements, but no more than will fit on the line. If n=-
    1 then the whole string is copied, to the maximum number of characters
    that will fit on the line.

    The window cursor is not advanced, and these routines work faster than
    _ww_aa_dd_dd_nn_ss_tt_rr(3). On the other hand, they don't perform any kind of checking
    (such as for the newline, backspace, or carriage return characters), they
    don't advance the current cursor position, they don't expand other control
    characters to ^-escapes, and they truncate the string if it crosses the
    right margin, rather then wrapping it around to the new line.

  RREETTUURRNN VVAALLUUEESS

    All routines return the integer ERR upon failure and OK on success (the
    SVr4 manuals specify only "an integer value other than ERR") upon
    successful completion, unless otherwise noted in the preceding routine
    descriptions.

  NNOOTTEESS

    All routines except _ww_aa_dd_dd_cc_hh_nn_ss_tt_rr(3) may be macros.

  PPOORRTTAABBIILLIITTYY

    All these entry points are described in the XSI Curses standard, Issue 4.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

