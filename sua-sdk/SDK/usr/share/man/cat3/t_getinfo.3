t_getinfo(3)                                               t_getinfo(3)

  tt__ggeettiinnffoo(())

  NNAAMMEE

    t_getinfo - get protocol-specific service information

  SSYYNNOOPPSSIISS

    #include <xti.h>

    int t_getinfo(
        int fd,
        struct t_info *info)

  DDEESSCCRRIIPPTTIIOONN

    This function returns the current characteristics of the underlying
    transport protocol and/or transport connection associated with file
    descriptor fd. The info pointer is used to return the same information
    returned by _tt____oo_pp_ee_nn(3), although not necessarily precisely the same values.
    This function enables a transport user to access this information during
    any phase of communication.

    PPaarraammeetteerrss     BBeeffoorree ccaallll     AAfftteerr ccaallll

    fd             x               /

    info->         addr            /

    info->         options         /

    info->         tsdu            /

    info->         etsdu           /

    info->         connect         /

    info->         discon          /

    info->         servtype        /

    info->         flags           /

    This argument points to a t_info structure which contains the following
    members:

    t_scalar_t addr;     /*max size in octets of the transport protocol
    address*/
    t_scalar_t options;  /*max number of bytes of protocol-specific options
    */
    t_scalar_t tsdu;     /*max size in octets of a transport service data unit
    */
    t_scalar_t etsdu;    /*max size in octets of an expedited transport
    service*/
                         /*data unit (ETSDU)
    */
    t_scalar_t connect;  /*max number of octets allowed on connection
    */
                         /*establishment functions
    */
    t_scalar_t discon;   /*max number of octets of data allowed on t_snddis()
    */
                         /*and t_rcvdis() functions
    */
    t_scalar_t servtype; /*service type supported by the transport provider
    */
    t_scalar_t flags;    /*other info about the transport provider
    */

    The values of the fields have the following meanings:

    addr
        A value greater than zero indicates the maximum size of a transport
        protocol address and a value of T_INVALID (-2) specifies that the
        transport provider does not provide user access to transport protocol
        addresses.

    options
        A value greater than zero indicates the maximum number of bytes of
        protocol-specific options supported by the provider, and a value of
        T_INVALID (-2) specifies that the transport provider does not support
        user-settable options.

    tsdu
        A value greater than zero specifies the maximum size in octets of a
        transport service data unit (TSDU); a value of T_NULL (zero) specifies
        that the transport provider does not support the concept of TSDU,
        although it does support the sending of a datastream with no logical
        boundaries preserved across a connection; a value of T_INFINITE (-1)
        specifies that there is no limit on the size in octets of a TSDU; and
        a value of T_INVALID (-2) specifies that the transfer of normal data
        is not supported by the transport provider.

    etsdu
        A value greater than zero specifies the maximum size in octets of an
        expedited transport service data unit (ETSDU); a value of T_NULL
        (zero) specifies that the transport provider does not support the
        concept of ETSDU, although it does support the sending of an expedited
        data stream with no logical boundaries preserved across a connection;
        a value of T_INFINITE (-1) specifies that there is no limit on the
        size (in octets) of an ETSDU; and a value of T_INVALID (-2) specifies
        that the transfer of expedited data is not supported by the transport
        provider. Note that the semantics of expedited data may be quite
        different for different transport providers (see and ).

    connect
        A value greater than zero specifies the maximum number of octets that
        may be associated with connection establishment functions and a value
        of T_INVALID (-2) specifies that the transport provider does not allow
        data to be sent with connection establishment functions.

    discon
        If the T_ORDRELDATA bit in flags is clear, a value greater than zero
        specifies the maximum number of octets that may be associated with the
        _tt____ss_nn_dd_dd_ii_ss(3) and _tt____rr_cc_vv_dd_ii_ss(3) functions, and a value of T_INVALID (-2)
        specifies that the transport provider does not allow data to be sent
        with the abortive release functions. If the T_ORDRELDATA bit is set in
        flags, a value greater than zero specifies the maximum number of
        octets that may be associated with the _tt____ss_nn_dd_dd_ii_ss(3) and _tt____rr_cc_vv_dd_ii_ss(3)
        functions.

    servtype
        This field specifies the service type supported by the transport
        provider, as described below.

    flags
        This is a bit field used to specify other information about the
        communications provider. If the T_ORDRELDATA bit is set, the
        communications provider supports sending user data with an orderly
        release. If the T_SENDZERO bit is set in flags, this indicates that
        the underlying transport provider supports the sending of zero-length
        TSDUs. See for a discussion of the separate issue of zero-length
        fragments within a TSDU.

    If a transport user is concerned with protocol independence, the above
    sizes may be accessed to determine how large the buffers must be to hold
    each piece of information. Alternatively, the _tt____aa_ll_ll_oo_cc(3) function may be
    used to allocate these buffers. An error will result if a transport user
    exceeds the allowed data size on any function. The value of each field may
    change as a result of protocol option negotiation during connection
    establishment (the _tt____oo_pp_tt_mm_gg_mm_tt(3) call has no effect on the values returned
    by tt__ggeettiinnffoo()). These values will only change from the values presented
    to _tt____oo_pp_ee_nn(3) after the endpoint enters the T_DATAXFER state.

    The servtype field of info specifies one of the following values on
    return:

    T_COTS
        The transport provider supports a connection-mode service but does not
        support the optional orderly release facility.

    T_COTS_ORD
        The transport provider supports a connection-mode service with the
        optional orderly release facility.

    T_CLTS
        The transport provider supports a connectionless-mode service. For
        this service type, _tt____oo_pp_ee_nn(3) will return T_INVALID (-2) for etsdu,
        connect and discon.

  VVAALLIIDD SSTTAATTEESS

    ALL - apart from T_UNINIT

  EERRRROORRSS

    On failure, t_errno is set to one of the following:

    [TBADF]
        The specified file descriptor does not refer to a transport endpoint.

    [TPROTO]
        This error indicates that a communication problem has been detected
        between XTI and the transport provider for which there is no other
        suitable XTI error (t_errno).

    [TSYSERR]
        A system error has occurred during execution of this function.

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and t_errno is set to indicate an error.

  SSEEEE AALLSSOO

    _tt____aa_ll_ll_oo_cc(3)

    _tt____oo_pp_ee_nn(3)

  UUSSAAGGEE NNOOTTEESS

    The tt__ggeettiinnffoo function is not thread safe.

    The tt__ggeettiinnffoo function is not async-signal safe.

