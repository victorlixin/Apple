wcs_remove(3)                                             wcs_remove(3)

  rreemmoovvee(())

  NNAAMMEE

    remove(), wcs_remove() - remove file from a directory

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    int remove (const char *path)
    int wcs_remove (const wchar_t *path)

  DDEESSCCRRIIPPTTIIOONN

    The rreemmoovvee(2) and wwccss__rreemmoovvee(3) functions are identical, except that
    wwccss__rreemmoovvee(3) accepts wide characters in the path argument.

    The rreemmoovvee(2) and wwccss__rreemmoovvee(3) functions remove the link named by path
    from its directory and decrement the link count of the file which was
    referenced by the link. If that decrement reduces the link count of the
    file to zero, and no process has the file open, then all resources
    associated with the file are reclaimed. If one or more process have the
    file open when the last link is removed, the link is removed, but the
    removal of the file is delayed until all references to it have been
    closed.

    If path does not name a directory, rreemmoovvee(2) or wwccss__rreemmoovvee(3) is
    equivalent to _uu_nn_ll_ii_nn_kk(2).

    If path names a directory, rreemmoovvee(2) or wwccss__rreemmoovvee(3) is equivalent to
    _rr_mm_dd_ii_rr(2) .

  RREETTUURRNN VVAALLUUEESS

    Upon successful completion, a value of 0 is returned. Otherwise, a value
    of -1 is returned and errno is set to indicate the error.

  EERRRROORRSS

    The rreemmoovvee(2) or wwccss__rreemmoovvee(3) call succeeds unless:

    [EACCES]
        Search permission is denied for a component of the path prefix.

    [EACCES]
        Write permission is denied on the directory containing the link to be
        removed.

    [EBUSY]
        The entry to be removed is the mount point for a mounted file system.

    [EINVAL]
        The file is on a device that doesn't support the operation.

    [ENAMETOOLONG]
        A component of a pathname exceeded {NAME_MAX} characters, or an entire
        pathname exceeded {PATH_MAX} characters.

    [ENOENT]
        The named file does not exist.

    [EPERM]
        The named file is a directory.

    [EIO]
        An I/O error occurred while deleting the directory entry or
        deallocating the file serial number.

    [EROFS]
        The named file resides on a read-only file system.

  SSEEEE AALLSSOO

    _c_l_o_s_e(2)

    _l_i_n_k(2)

    _u_n_l_i_n_k(2)

    _r_m_d_i_r(2)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

