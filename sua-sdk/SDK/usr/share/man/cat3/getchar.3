getchar(3)                                                   getchar(3)

  ggeettcc(())

  NNAAMMEE

    fgetc(), getc(), getchar() - get next character or word from input stream

  SSYYNNOOPPSSIISS

    #include <stdio.h>

    int fgetc (FILE *stream)
    int getc (FILE *stream)
    int getchar(void)

  DDEESSCCRRIIPPTTIIOONN

    The _ff_gg_ee_tt_cc(3) function obtains the next input character (if present) from
    the stream pointed at by stream, or the next character pushed back on the
    stream through uunnggeettcc(3).

    The _gg_ee_tt_cc(3) function acts essentially identically to _ff_gg_ee_tt_cc(3), but is a
    macro that expands in-line.

    The _gg_ee_tt_cc_hh_aa_rr(3) function is equivalent to:

    getc(stdin)

    Once end-of-file is reached, the end-of-file condition is remembered, even
    on a terminal, and all subsequent attempts to read will return EOF until
    the condition is cleared with _cc_ll_ee_aa_rr_ee_rr_rr(3).

  RREETTUURRNN VVAALLUUEESS

    If successful, these routines return the next requested object from the
    stream. If the stream is at end-of-file or a read error occurs, the
    routines return EOF. Since EOF is a valid integer value, you must use
    _ff_ee_oo_ff(3) and _ff_ee_rr_rr_oo_rr(3) to distinguish between end-of-file and error. If an
    error occurs, the global variable errno is set to indicate the error.

  EERRRROORRSS

    These functions can set errno to the following values:

    [EBADF]
        Stream is not a valid file descriptor open for reading.

    [EIO]
        An I/O error occurred while reading from the file system.

    [EINTR]
        A read from a slow device was interrupted before any data arrived by
        the delivery of a signal.

    [EINVAL]
        The pointer associated with stream was negative.

    [EAGAIN]
        The file was marked for non-blocking I/O, and no data were ready to be
        read.

  SSEEEE AALLSSOO

    _f_e_r_r_o_r(3)

    _f_r_e_a_d(3)

    _f_o_p_e_n(3)

    _p_u_t_c(3)

    _u_n_g_e_t_c(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

