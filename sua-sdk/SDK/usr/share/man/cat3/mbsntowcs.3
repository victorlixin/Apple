mbsntowcs(3)                                               mbsntowcs(3)

  mmbbssttoowwccss(())

  NNAAMMEE

    mbstowcs(), mbsntowcs() - convert character string to a wide-character
    string

  SSYYNNOOPPSSIISS

    #include <stdlib.h>

    size_t mbstowcs (wchar_t *pwcs, const char *s, size_t n)
    size_t mbsntowcs (wchar_t *pwcs, const char *s, size_t n, size_t m)

  DDEESSCCRRIIPPTTIIOONN

    The _mm_bb_ss_tt_oo_ww_cc_ss(3) function converts a sequence of characters that begins in
    the initial shift state from the array pointed to by s into a sequence of
    corresponding wide-character codes and stores not more than n wide-
    character codes into the array pointed to by pwcs. No characters following
    a null byte (which is converted into a wide-character code with a value of
    0) will be examined or converted. Each character is converted as if by a
    call to _mm_bb_tt_oo_ww_cc(3), except that the shift state of _mm_bb_tt_oo_ww_cc(3) is not
    affected.

    No more than n elements will be modified in the array pointed to by pwcs.
    If copying takes place between objects that overlap, the behavior is
    undefined.

    The behavior of this function is affected by the LC_CTYPE category of the
    current locale. If pwcs is a null pointer, _mm_bb_ss_tt_oo_ww_cc_ss(3) returns the length
    required to convert the entire array regardless of the value of n, but no
    values are stored.

    The _mm_bb_ss_nn_tt_oo_ww_cc_ss(3) function is identical to _mm_bb_ss_tt_oo_ww_cc_ss(3), except that only
    the number of characters specified by the m argument are converted.

  RREETTUURRNN VVAALLUUEESS

    If an invalid character is encountered, both functions return (ssiizzee__tt)-
    1 and may set errno to indicate the error. Othewise, both functions return
    the number of the array elements modified (or required if pwcs is null),
    not including a terminating null code, if any. The array will not be null-
    terminated if the value returned is n.

  EERRRROORRSS

    Either function may fail if:

    [EILSEQ]
        Invalid byte sequence is detected.

  SSEEEE AALLSSOO

    _m_b_l_e_n(3)

    _m_b_t_o_w_c(3)

    _w_c_s_t_o_m_b_s(3)

    _w_c_t_o_m_b(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

