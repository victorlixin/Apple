ATAN2(3)	                                        	      ATAN2(3)

NAME
     atan2, atan2f -- arc tangent functions of two variables

LIBRARY
     Math Library (libm, -lm)

SYNOPSIS
     #include <math.h>

     double
     atan2(double y, double x);

     float
     atan2f(float y, float x);

DESCRIPTION
     The aattaann22() and the aattaann22ff() functions compute the principal value of the
     arc tangent of y/x, using the signs of both arguments to determine the
     quadrant of the return value.

RETURN VALUES
     The aattaann22() and the aattaann22ff() functions, if successful, return the arc
     tangent of y/x in the range [-pi, +pi] radians.  Here are some of the
     special cases:

     atan2(y, x) :=	  atan(y/x)			  if x > 0,
			  sign(y)*(pi - atan(|y/x|))	  if x < 0,
			  0				  if x = y = 0, or
			  sign(y)*pi/2			  if x = 0 != y.

NOTES
     The function aattaann22() defines "if x > 0," atan2(0, 0) = 0 despite that
     previously atan2(0, 0) may have generated an error message.  The reasons
     for assigning a value to atan2(0, 0) are these:

	   1.	Programs that test arguments to avoid computing atan2(0, 0)
		must be indifferent to its value.  Programs that require it to
		be invalid are vulnerable to diverse reactions to that inva-
		lidity on diverse computer systems.

	   2.	The aattaann22() function is used mostly to convert from rectangu-
		lar (x,y) to polar (r,theta) coordinates that must satisfy x =
		r*cos theta and y = r*sin theta.  These equations are satis-
		fied when (x=0,y=0) is mapped to (r=0,theta=0).  In general,
		conversions to polar coordinates should be computed thus:

		      r    := hypot(x,y);  ... := sqrt(x*x+y*y)
		      theta	:= atan2(y,x).

	   3.	The foregoing formulas need not be altered to cope in a rea-
		sonable way with signed zeros and infinities on a machine that
		conforms to IEEE 754; the versions of hhyyppoott(3) and aattaann22()
		provided for such a machine are designed to handle all cases.
		That is why atan2(±0, -0) = ±pi for instance.  In general the
		formulas above are equivalent to these:

		      r := sqrt(x*x+y*y); if r = 0 then x := copysign(1,x);

SEE ALSO
     aaccooss(3), aassiinn(3), aattaann(3), ccooss(3), ccoosshh(3), math(3), ssiinn(3), ssiinnhh(3),
     ttaann(3), ttaannhh(3)

STANDARDS
     The aattaann22() function conforms to ISO/IEC 9899:1990 (``ISO C90'').


USAGE NOTES

     The aattaann22ff function is thread safe.
     The aattaann22ff function is nnoott async-signal safe.

