menu_driver(3)                                           menu_driver(3)

  mmeennuu__ddrriivveerr(())

  NNAAMMEE

    menu_driver() - command-processing loop of the menu system

  SSYYNNOOPPSSIISS

    #include <menu.h>

    int menu_driver(MENU *menu, int c);

  DDEESSCCRRIIPPTTIIOONN

    Once a menu has been posted (displayed), you should funnel input events to
    it through mmeennuu__ddrriivveerr(3). This routine has two major input cases; either
    the input is a menu navigation request or it's a printable ASCII
    character. The menu driver requests are as follows:
    REQ_LEFT_ITEM         Move left to an item.

    REQ_RIGHT_ITEM        Move right to an item.

    REQ_UP_ITEM           Move up to an item.

    REQ_DOWN_ITEM         Move down to an item.

    REQ_SCR_ULINE         Scroll up a line.

    REQ_SCR_DLINE         Scroll down a line.

    REQ_SCR_DPAGE         Scroll down a page.

    REQ_SCR_UPAGE         Scroll up a page.

    REQ_FIRST_ITEM        Move to the first item.

    REQ_LAST_ITEM         Move to the last item.

    REQ_NEXT_ITEM         Move to the next item.

    REQ_PREV_ITEM         Move to the previous item.

    REQ_TOGGLE_ITEM       Select/deselect an item.

    REQ_CLEAR_PATTERN     Clear the menu pattern buffer.

    REQ_BACK_PATTERN      Delete the previous character from the pattern
                          buffer.

    REQ_NEXT_MATCH        Move to the next item matching the pattern
                          match.

    REQ_PREV_MATCH        Move to the previous item matching the pattern
                          match.

    If the second argument is a printable ASCII character, the code appends it
    to the pattern buffer and attempts to move to the next item matching the
    new pattern. If there is no such match, _mm_ee_nn_uu____dd_rr_ii_vv_ee_rr(3) returns E_NO_MATCH
    and deletes the appended character from the buffer.

    If the second argument is one of the above pre-defined requests, the
    corresponding action is performed.

    If the second argument is neither printable ASCII nor one of the above
    pre-defined menu requests, the driver assumes it is an application-
    specific command and returns E_UNKNOWN_COMMAND. Application-defined
    commands should be defined relative to MAX_COMMAND, the maximum value of
    these pre-defined requests.

  RREETTUURRNN VVAALLUUEE

    _mm_ee_nn_uu____dd_rr_ii_vv_ee_rr(3) return one of the following error codes:

    E_OK
        The routine succeeded.

    E_SYSTEM_ERROR
        System error occurred (see errno

    E_BAD_ARGUMENT
        Routine detected an incorrect or out-of-range argument.

    E_BAD_STATE
        Routine was called from an initialization or termination function.

    E_NOT_POSTED
        The menu has not been posted.

    E_UNKNOWN_COMMAND
        The menu driver code saw an unknown request code.

    E_NO_MATCH
        Character failed to match.

    E_REQUEST_DENIED
        The menu driver could not process the request.

  SSEEEE AALLSSOO

    _c_u_r_s_e_s(3)

    _m_e_n_u_s(3).

  NNOOTTEESS

    The header file <<mmeennuu..hh>> automatically includes the header files
    <<ccuurrsseess..hh>>.

  PPOORRTTAABBIILLIITTYY

    These routines emulate the System V menu library. They were not supported
    on Version 7 or BSD versions.

