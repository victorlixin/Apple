strtod(3)                                                     strtod(3)

  ssttrrttoodd(())

  NNAAMMEE

    strtod() - convert ASCII string to double

  SSYYNNOOPPSSIISS

    #include <stdlib.h>

    double strtod (const char *nptr, char **endptr)

  DDEESSCCRRIIPPTTIIOONN

    The _ss_tt_rr_tt_oo_dd(3) function converts the initial portion of the string pointed
    to by nptr to ddoouubbllee representation.

    The expected form of the string is an optional plus (+) or minus sign (-
    ) followed by a sequence of digits optionally containing a decimal-point
    character, optionally followed by an exponent. An exponent consists of an
    "E" or "e", followed by an optional plus or minus sign, followed by a
    sequence of digits.

    Leading white-space characters in the string (as defined by the _ii_ss_ss_pp_aa_cc_ee(3)
    function) are skipped.

  RREETTUURRNN VVAALLUUEESS

    The _ss_tt_rr_tt_oo_dd(3) function returns the converted value, if any.

    If endptr is not NULL, a pointer to the character after the last character
    used in the conversion is stored in the location referenced by endptr.

    If no conversion is performed, zero is returned and the value of nptr is
    stored in the location referenced by endptr.

    If the correct value would cause overflow, plus or minus {HUGE_VAL} is
    returned (according to the sign of the value), and [ERANGE] is stored in
    errno If the correct value would cause underflow, zero is returned and
    [ERANGE] is stored in errno

  EERRRROORRSS

    [ERANGE]
        Overflow or underflow occurred.

  SSEEEE AALLSSOO

    _a_t_o_f(3)

    _a_t_o_i(3)

    _a_t_o_l(3)

    _s_t_r_t_o_l(3)

    _s_t_r_t_o_u_l(3)

  UUSSAAGGEE NNOOTTEESS

    The ssttrrttoodd function is thread safe.

    The ssttrrttoodd function is not async-signal safe.

