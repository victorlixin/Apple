user_from_uid(3)                                       user_from_uid(3)

  uusseerr__ffrroomm__uuiidd(())

  NNAAMMEE

    user_from_uid(), group_from_gid() - get user or group name from uid or gid

  SSYYNNOOPPSSIISS

    #include <pwd.h>
    #include <grp.h>

    int pwcache_enable ;

    char * user_from_uid(uid_t userid, int d)
    char * group_from_gid(gid_t groupid, int d)

  DDEESSCCRRIIPPTTIIOONN

    The _uu_ss_ee_rr____ff_rr_oo_mm____uu_ii_dd(3) returns the user name associated with the argument
    userid. If the global variable pwcache_enable has been set to the value 1
    (the default), the user name is cached so that multiple calls with the
    same user ID do not make additional calls to _gg_ee_tt_pp_ww_uu_ii_dd(2). If there is no
    user associated with userid, _uu_ss_ee_rr____ff_rr_oo_mm____uu_ii_dd(3) returns a pointer to a
    string that represents userid. If pwcache_enable is set to 0, caching is
    disabled.

    The _gg_rr_oo_uu_pp____ff_rr_oo_mm____gg_ii_dd(3) returns the group name associated with the argument
    groupid. If the global variable pwcache_enable has been set to the value 1
    (the default), the user name is cached so that multiple calls with the
    same user ID do not make additional calls to _gg_ee_tt_gg_rr_gg_ii_dd(2). If there is no
    user associated with groupid, _gg_rr_oo_uu_pp____ff_rr_oo_mm____gg_ii_dd(3) returns a pointer to a
    string that represents groupid. If pwcache_enable is set to 0, caching is
    disabled.

    userid
        A user ID number.

    d
        This argument is reserved for future use; please pass a 0 here.

  RREETTUURRNN VVAALLUUEE

    _UU_ss_ee_rr____ff_rr_oo_mm____uu_ii_dd(3) and _gg_rr_oo_uu_pp____ff_rr_oo_mm____gg_ii_dd(3) always return a pointer to a valid
    string. Because they call _gg_ee_tt_pp_ww_uu_ii_dd(2) and _gg_ee_tt_gg_rr_gg_ii_dd(2), the errno value may
    be set with any of the errors possible from those functions.

    Under some circumstances, the pointer will be to a static buffer which may
    be overwritten by the next call to this function or to _gg_ee_tt_pp_ww_uu_ii_dd(2) or
    _gg_ee_tt_gg_rr_gg_ii_dd(2).

  SSEEEE AALLSSOO

    _g_e_t_g_r_g_i_d(2)

    _g_e_t_p_w_u_i_d(2)

  UUSSAAGGEE NNOOTTEESS

    None of these functions are thread safe.

    None of these functions are async-signal safe.

