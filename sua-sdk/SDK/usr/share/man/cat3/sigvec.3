sigvec(3)                                                     sigvec(3)

  ssiiggvveecc(())

  NNAAMMEE

    sigvec() - BSD software signal facility

  SSYYNNOOPPSSIISS

    #include <signal.h>
    struct sigvec {
        void   (*sa_handler)();
         int sa_mask;
         int   sa_flags;
    };

    int sigvec (int signum, struct sigvec *vec, struct sigvec *ovec)

  DDEESSCCRRIIPPTTIIOONN

    This interface is made obsolete by _ss_ii_gg_aa_cc_tt_ii_oo_nn(2). See the _ss_ii_gg_aa_cc_tt_ii_oo_nn(2)
    reference page for a description of signals and signal handling and a list
    of signals.

    The _ss_ii_gg_vv_ee_cc(3) function assigns a handler for a specific signal. If vec is
    non-zero, it specifies a handler routine and mask to be used when
    delivering the specified signal. If ovec is non-zero, the routine returns
    the previous handling information for the signal.

    Once a signal handler is installed, it remains installed until another
    _ss_ii_gg_vv_ee_cc(3) call is made, or until an _ee_xx_ee_cc(2) is performed. A signal-
    specific default action may be reset by setting sa_handler to SIG_DFL. The
    defaults are process termination; no action; stopping the process; or
    continuing the process. See the list in _ss_ii_gg_aa_cc_tt_ii_oo_nn(2) for each signal's
    default action. If sa_handler is SIG_IGN, current and pending instances of
    the signal are ignored and discarded.

    After a _ff_oo_rr_kk(2) all signals, the signal mask, the signal stack, and the
    restart/interrupt flags are inherited by the child.

    The _ee_xx_ee_cc(2) family of routines reinstates the default action for all
    isgnals which were caught, and resets all signals to be caught on the user
    stack. Ignored signals remain ignored; the signal mask remains the same;
    signals that interrupt system calls continue to do so.

  RREETTUURRNN VVAALLUUEESS

    A 0 value indicated that the call succeeded. A -1 return value indicates
    an error occurred and errno is set to indicated the reason.

  EERRRROORRSS

    The _ss_ii_gg_vv_ee_cc(3) function will fail and no new signal handler will be
    installed if one of the following occurs:

    [EFAULT]
        Either vec or ovec points to memory that is not a valid part of the
        process address space.

    [EINVAL]
        Signum is not a valid signal number.

    [EINVAL]
        An attempt is made to ignore or supply a handler for SIGKILL or
        SIGSTOP.

  NNOOTTEESS

    The mask cannot block SIGKILL or SIGSTOP. This is enforced silently by the
    system.

    This implementation does not suport such flags as SV_INTERRUPT or
    SV_ONSTACK. The only flag available to sa_flags is SA_NOCLDSTOP. See
    _ss_ii_gg_aa_cc_tt_ii_oo_nn(2).

  SSEEEE AALLSSOO

    _k_i_l_l(1)

    _k_i_l_l(2)

    _s_e_t_j_m_p(3)

    _s_i_g_a_c_t_i_o_n(2)

    _s_i_g_b_l_o_c_k(3)

    _s_i_g_n_a_l(2)

    _s_i_g_p_r_o_c_m_a_s_k(2)

    _s_i_g_s_e_t_m_a_s_k(3)

    _s_i_g_s_u_s_p_e_n_d(2)

  UUSSAAGGEE NNOOTTEESS

    The ssiiggvveecc function is thread safe.

    The ssiiggvveecc function is not async-signal safe.

