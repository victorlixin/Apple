t_getprotaddr(3)                                       t_getprotaddr(3)

  tt__ggeettpprroottaaddddrr(())

  NNAAMMEE

    t_getprotaddr - get the protocol addresses

  SSYYNNOOPPSSIISS

    #include <xti.h>

    int t_getprotaddr(
        int fd,
        struct t_bind *boundaddr,
        struct t_bind *peeraddr)

  DDEESSCCRRIIPPTTIIOONN

    The following table describes the parameters for tt__ggeettpprroottaaddddrr(3):

    PPaarraammeetteerrss                 BBeeffoorree ccaallll     AAfftteerr ccaallll

    fd                         x               /

    boundaddr->addr.maxlen     x               =

    boundaddr->addr.len        /               x

    boundaddr->addr.buf        ?               (?)

    boundaddr->qlen            =               =

    peeraddr->addr.maxlen      x               =

    peeraddr->addr.len         /               x

    peeraddr->addr.buf         ?               (?)

    peeraddr->qlen             =               =

    The tt__ggeettpprroottaaddddrr(3) function returns local and remote protocol addresses
    currently associated with the transport endpoint specified by fd. In
    boundaddr and peeraddr the user specifies maxlen, which is the maximum
    size (in bytes) of the address buffer, and buf which points to the buffer
    where the address is to be placed. On return, the buf field of boundaddr
    points to the address, if any, currently bound to fd, and the len field
    specifies the length of the address. If the transport endpoint is in the
    T_UNBND state, zero is returned in the len field of boundaddr. The buf
    field of peeraddr points to the address, if any, currently connected to
    fd, and the len field specifies the length of the address. If the
    transport endpoint is not in the T_DATAXFER, T_INREL, T_OUTCON or T_OUTREL
    states, zero is returned in the len field of peeraddr. If the maxlen field
    of boundaddr or peeraddr is set to zero, no address is returned.

  VVAALLIIDD SSTTAATTEESS

    ALL - apart from T_UNINIT

  EERRRROORRSS

    On failure, t_errno is set to one of the following:

    [TBADF]
        The specified file descriptor does not refer to a transport endpoint.

    [TBUFOVFLW]
        The number of bytes allocated for an incoming argument (maxlen) is
        greater than 0 but not sufficient to store the value of that argument.

    [TPROTO]
        This error indicates that a communication problem has been detected
        between XTI and the transport provider for which there is no other
        suitable XTI error (t_errno).

    [TSYSERR]
        A system error has occurred during execution of this function.

  RREETTUURRNN VVAALLUUEE

    Upon successful completion, a value of zero is returned. Otherwise, a
    value of -1 is returned and t_errno is set to indicate the error.

  SSEEEE AALLSSOO

    _tt____bb_ii_nn_dd(3)

  UUSSAAGGEE NNOOTTEESS

    The tt__ggeettpprroottaaddddrr function is not thread safe.

    The tt__ggeettpprroottaaddddrr function is not async-signal safe.

