sigsetmask(3)                                             sigsetmask(3)

  ssiiggbblloocckk(())

  NNAAMMEE

    sigblock(), sigmask(), sigsetmask() - BSD4.3 compatibility signal
    functions

  SSYYNNOOPPSSIISS

    #include <signal.h>

    int sigblock (int mask)
    int sigmask (int signum)
    int sigsetmask (int mask)

  DDEESSCCRRIIPPTTIIOONN

    This interface is made obsolete by: _ss_ii_gg_pp_rr_oo_cc_mm_aa_ss_kk(2).

    The _ss_ii_gg_bb_ll_oo_cc_kk(3) function adds the signals specified in mask to the set of
    signals currently being blocked from delivery. Signals are blocked if the
    corresponding bit in mask is a 1. The _ss_ii_gg_mm_aa_ss_kk(2) function is provided to
    construct the mask for a given signum.

    It is not possible to block SIGKILL or SIGSTOP; this restriction is
    silently imposed by the system.

  RREETTUURRNN VVAALLUUEESS

    The functions _ss_ii_gg_bb_ll_oo_cc_kk(3) and _ss_ii_gg_ss_ee_tt_mm_aa_ss_kk(3) return the previous set of
    masked signals.

    The _ss_ii_gg_mm_aa_ss_kk(2) function returns a mask that can be used to block the
    signal signum.

  NNOOTTEESS

    The _ss_ii_gg_bb_ll_oo_cc_kk(3) call is provided for compatibility with BSD 4.3 only;
    portable code should use _ss_ii_gg_pp_rr_oo_cc_mm_aa_ss_kk(2).

    The declaration of these APIs is visible only when _ALL_SOURCE is defined.
    These routines are only viable while the total number of signals supported
    on Subsystem for UNIX-based Applications is less than 32. If more signals are supported, then the signal
    mask will no longer fit in an int.

  SSEEEE AALLSSOO

    _k_i_l_l(2)

    _s_i_g_p_r_o_c_m_a_s_k(2)

    _s_i_g_a_c_t_i_o_n(2)

    _s_i_g_e_m_p_t_y_s_e_t(3)

    _s_i_g_n_a_l(2)

  UUSSAAGGEE NNOOTTEESS

    The following functions are thread safe: ssiiggbblloocckk,, ssiiggsseettmmaasskk. The ssiiggmmaasskk
    function is not thread safe.

    None of these functions are async-signal safe.

