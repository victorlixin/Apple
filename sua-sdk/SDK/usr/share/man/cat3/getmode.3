getmode(3)                                                   getmode(3)

  sseettmmooddee(())

  NNAAMMEE

    getmode(), setmode() - modify mode bits

  SSYYNNOOPPSSIISS

    #include <sys/types.h>
    #include <unistd.h>

    mode_t getmode (const void *set, mode_t mode)
    void *setmode (const char *mode_str)

  DDEESSCCRRIIPPTTIIOONN

    The _gg_ee_tt_mm_oo_dd_ee(3) function returns a copy of the file permission bits mode as
    altered by the values pointed to by set. While only the mode bits are
    altered, other parts of the file mode may be examined.

    The _ss_ee_tt_mm_oo_dd_ee(3) function takes an absolute (octal) or symbolic value, as
    described in _cc_hh_mm_oo_dd(2), as an argument and returns a pointer to mode values
    to be supplied to _gg_ee_tt_mm_oo_dd_ee(3). Because some of the symbolic values are
    relative to the file creation mask, _ss_ee_tt_mm_oo_dd_ee(3) may call _uu_mm_aa_ss_kk(2). If this
    occurs, the file creation mask will be restored before _ss_ee_tt_mm_oo_dd_ee(3) returns.
    If the calling program changes the value of its file creation mask after
    calling _ss_ee_tt_mm_oo_dd_ee(3), _ss_ee_tt_mm_oo_dd_ee(3) must be called again if _gg_ee_tt_mm_oo_dd_ee(3) is to
    modify future file modes correctly.

    If the mode passed to _ss_ee_tt_mm_oo_dd_ee(3) is invalid, _ss_ee_tt_mm_oo_dd_ee(3) returns NULL.

  EERRRROORRSS

    The _ss_ee_tt_mm_oo_dd_ee(3) function may fail and set errno for any of the errors
    specified for the library routine _mm_aa_ll_ll_oo_cc(3).

  SSEEEE AALLSSOO

    _c_h_m_o_d(2)

    _s_t_a_t(2)

    _u_m_a_s_k(2)

    _m_a_l_l_o_c(3)

  UUSSAAGGEE NNOOTTEESS

    All of these functions are thread safe.

    None of these functions are async-signal safe.

