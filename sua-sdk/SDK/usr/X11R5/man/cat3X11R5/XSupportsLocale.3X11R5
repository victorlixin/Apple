XSupportsLocale(3X11R5)                         XSupportsLocale(3X11R5)

  XXSSuuppppoorrttssLLooccaallee(())

  NNAAMMEE

    XSupportsLocale(), XSetLocaleModifiers() - determine locale support and
    configure locale modifiers

  SSYYNNOOPPSSIISS

    Bool XSupportsLocale (void)
    char *XSetLocaleModifiers (char *modifier_list)

  AARRGGUUMMEENNTTSS

    modifier_list
        Specifies the modifiers.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_SS_uu_pp_pp_oo_rr_tt_ss_LL_oo_cc_aa_ll_ee(3X11R5) function returns True if Xlib functions are
    capable of operating under the current locale. If it returns False, Xlib
    locale-dependent functions for which the XLocaleNotSupported return status
    is defined will return XLocaleNotSupported. Other Xlib locale-dependent
    routines will operate in the ``C'' locale.

    _XX_SS_ee_tt_LL_oo_cc_aa_ll_ee_MM_oo_dd_ii_ff_ii_ee_rr_ss(3X11R5) sets the X modifiers for the current locale
    setting. The modifier_list argument is a null-terminated string of the
    form

    {@ category = value }

    That is, it has zero or more concatenated ``@ category = value '' entries
    where category is a category name and value is the (possibly empty)
    setting for that category. The values are encoded in the current locale.
    Category names are restricted to the POSIX Portable Filename Character
    Set.

    The local host X locale modifiers announcer (on POSIX-compliant systems,
    the XMODIFIERS environment variable) is appended to the modifier_list to
    provide default values on the local host. If a given category appears more
    than once in the list, the first setting in the list is used. If a given
    category is not included in the full modifier list, the category is set to
    an implementation-dependent default for the current locale. An empty value
    for a category explicitly specifies the implementation-dependent default.

    If the function is successful, it returns a pointer to a string. The
    contents of the string are such that a subsequent call with that string
    (in the same locale) will restore the modifiers to the same settings. If
    modifier_list is a NULL pointer, _XX_SS_ee_tt_LL_oo_cc_aa_ll_ee_MM_oo_dd_ii_ff_ii_ee_rr_ss(3X11R5) also returns
    a pointer to such a string, and the current locale modifiers are not
    changed.

    If invalid values are given for one or more modifier categories supported
    by the locale, a NULL pointer is returned, and none of the current
    modifiers are changed.

    At program startup the modifiers that are in effect are unspecified until
    the first successful call to set them. Whenever the locale is changed, the
    modifiers that are in effect become unspecified until the next successful
    call to set them. Clients should always call _XX_SS_ee_tt_LL_oo_cc_aa_ll_ee_MM_oo_dd_ii_ff_ii_ee_rr_ss(3X11R5)
    with a non-NULL modifier_list after setting the locale, before they call
    any locale-dependent Xlib routine.

    The only standard modifier category currently defined is ``im'', which
    identifies the desired input method. The values for input method are not
    standardized. A single locale can use multiple input methods, switching
    input method under user control. The modifier can specify the initial
    input method in effect, or an ordered list of input methods. Multiple
    input methods can be specified in a single im value string in an
    implementation-dependent manner.

    The returned modifiers string is owned by Xlib and should not be modified
    or freed by the client. It can be freed by Xlib after the current locale
    or modifiers is changed. Until freed, it will not be modified by Xlib.

  SSEEEE AALLSSOO

    Xlib

