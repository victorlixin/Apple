XUngrabKeyboard(3X11R5)                         XUngrabKeyboard(3X11R5)

  XXGGrraabbKKeeyybbooaarrdd(())

  NNAAMMEE

    XGrabKeyboard(), XUngrabKeyboard() - grab the keyboard

  SSYYNNOOPPSSIISS

    int XGrabKeyboard (Display *display, Window grab_window,
                       Bool owner_events, int pointer_mode,
                       int keyboard_mode, Time time)
    XUngrabKeyboard (Display *display, Time time)

  AARRGGUUMMEENNTTSS

    display
        Specifies the connection to the X server.

    grab_window
        Specifies the grab window.

    keyboard_mode
        Specifies further processing of keyboard events. You can pass
        GrabModeSync or GrabModeAsync.

    owner_events
        Specifies a Boolean value that indicates whether the keyboard events
        are to be reported as usual.

    pointer_mode
        Specifies further processing of pointer events. You can pass
        GrabModeSync or GrabModeAsync.

    time
        Specifies the time. You can pass either a timestamp or CurrentTime .

  DDEESSCCRRIIPPTTIIOONN

    The _XX_GG_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) function actively grabs control of the keyboard
    and generates FocusIn and FocusOut events. Further key events are reported
    only to the grabbing client. _XX_GG_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) overrides any active
    keyboard grab by this client. If owner_events is False, all generated key
    events are reported with respect to grab_window. If owner_events is True
    and if a generated key event would normally be reported to this client, it
    is reported normally; otherwise, the event is reported with respect to the
    grab_window. Both KeyPress and KeyRelease events are always reported,
    independent of any event selection made by the client.

    If the keyboard_mode argument is GrabModeAsync, keyboard event processing
    continues as usual. If the keyboard is currently frozen by this client,
    then processing of keyboard events is resumed. If the keyboard_mode
    argument is GrabModeSync, the state of the keyboard (as seen by client
    applications) appears to freeze, and the X server generates no further
    keyboard events until the grabbing client issues a releasing
    _XX_AA_ll_ll_oo_ww_EE_vv_ee_nn_tt_ss(3X11R5) call or until the keyboard grab is released. Actual
    keyboard changes are not lost while the keyboard is frozen; they are
    simply queued in the server for later processing.

    If pointer_mode is GrabModeAsync, pointer event processing is unaffected
    by activation of the grab. If pointer_mode is GrabModeSync, the state of
    the pointer (as seen by client applications) appears to freeze, and the X
    server generates no further pointer events until the grabbing client
    issues a releasing _XX_AA_ll_ll_oo_ww_EE_vv_ee_nn_tt_ss(3X11R5) call or until the keyboard grab is
    released. Actual pointer changes are not lost while the pointer is frozen;
    they are simply queued in the server for later processing.

    If the keyboard is actively grabbed by some other client,
    _XX_GG_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) fails and returns AlreadyGrabbed. If grab_window is
    not viewable, it fails and returns GrabNotViewable. If the keyboard is
    frozen by an active grab of another client, it fails and returns
    GrabFrozen. If the specified time is earlier than the last-keyboard-grab
    time or later than the current X server time, it fails and returns
    GrabInvalidTime . Otherwise, the last-keyboard-grab time is set to the
    specified time (CurrentTime is replaced by the current X server time).

    _XX_GG_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) can generate BadValue and BadWindow errors.

    The _XX_UU_nn_gg_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) function releases the keyboard and any queued
    events if this client has it actively grabbed from either
    _XX_GG_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) or _XX_GG_rr_aa_bb_KK_ee_yy(3X11R5). _XX_UU_nn_gg_rr_aa_bb_KK_ee_yy_bb_oo_aa_rr_dd(3X11R5) does
    not release the keyboard and any queued events if the specified time is
    earlier than the last-keyboard-grab time or is later than the current X
    server time. It also generates FocusIn and FocusOut events. The X server
    automatically performs an UUnnggrraabbKKeeyybbooaarrdd() request if the event window for
    an active keyboard grab becomes not viewable.

  DDIIAAGGNNOOSSTTIICCSS

    BadValue
        Some numeric value falls outside the range of values accepted by the
        request. Unless a specific range is specified for an argument, the
        full range defined by the argument's type is accepted. Any argument
        defined as a set of alternatives can generate this error.

    BadWindow
        A value for a Window argument does not name a defined Window.

  SSEEEE AALLSSOO

    _X_A_l_l_o_w_E_v_e_n_t_s()

    _X_G_r_a_b_B_u_t_t_o_n()

    _X_G_r_a_b_K_e_y()

    _X_G_r_a_b_P_o_i_n_t_e_r()

    Xlib

