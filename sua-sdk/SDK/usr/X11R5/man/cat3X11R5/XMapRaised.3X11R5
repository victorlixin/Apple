XMapRaised(3X11R5)                                   XMapRaised(3X11R5)

  XXMMaappWWiinnddooww(())

  NNAAMMEE

    XMapWindow(), XMapRaised(), XMapSubwindows() - map windows

  SSYYNNOOPPSSIISS

    XMapWindow (Display *display, Window w)
    XMapRaised (Display *display, Window w)
    XMapSubwindows (Display *display, Window w)

  AARRGGUUMMEENNTTSS

    display
        Specifies the connection to the X server.

    w
        Specifies the window.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) function maps the window and all of its subwindows
    that have had map requests. Mapping a window that has an unmapped ancestor
    does not display the window but marks it as eligible for display when the
    ancestor becomes mapped. Such a window is called unviewable. When all its
    ancestors are mapped, the window becomes viewable and will be visible on
    the screen if it is not obscured by another window. This function has no
    effect if the window is already mapped.

    If the override-redirect of the window is False and if some other client
    has selected SubstructureRedirectMask on the parent window, then the X
    server generates a MapRequest event, and the _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) function
    does not map the window. Otherwise, the window is mapped, and the X server
    generates a MapNotify event.

    If the window becomes viewable and no earlier contents for it are
    remembered, the X server tiles the window with its background. If the
    window's background is undefined, the existing screen contents are not
    altered, and the X server generates zero or more Expose events. If
    backing-store was maintained while the window was unmapped, no Expose
    events are generated. If backing-store will now be maintained, a full-
    window exposure is always generated. Otherwise, only visible regions may
    be reported. Similar tiling and exposure take place for any newly viewable
    inferiors.

    If the window is an InputOutput window, _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) generates
    Expose events on each InputOutput window that it causes to be displayed.
    If the client maps and paints the window and if the client begins
    processing events, the window is painted twice. To avoid this, first ask
    for Expose events and then map the window, so the client processes input
    events as usual. The event list will include Expose for each window that
    has appeared on the screen. The client's normal response to an Expose
    event should be to repaint the window. This method usually leads to
    simpler programs and to proper interaction with window managers.

    _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) can generate a BadWindow error.

    The _XX_MM_aa_pp_RR_aa_ii_ss_ee_dd(3X11R5) function essentially is similar to
    _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) in that it maps the window and all of its subwindows
    that have had map requests. However, it also raises the specified window
    to the top of the stack.

    _XX_MM_aa_pp_RR_aa_ii_ss_ee_dd(3X11R5) can generate a BadWindow error.

    The _XX_MM_aa_pp_SS_uu_bb_ww_ii_nn_dd_oo_ww_ss(3X11R5) function maps all subwindows for a specified
    window in top-to-bottom stacking order. The X server generates Expose
    events on each newly displayed window. This may be much more efficient
    than mapping many windows one at a time because the server needs to
    perform much of the work only once, for all of the windows, rather than
    for each window.

    _XX_MM_aa_pp_SS_uu_bb_ww_ii_nn_dd_oo_ww_ss(3X11R5) can generate a BadWindow error.

  DDIIAAGGNNOOSSTTIICCSS

    BadWindow
        A value for a Window argument does not name a defined Window.

  SSEEEE AALLSSOO

    _X_C_h_a_n_g_e_W_i_n_d_o_w_A_t_t_r_i_b_u_t_e_s()

    _X_C_o_n_f_i_g_u_r_e_W_i_n_d_o_w()

    _X_C_r_e_a_t_e_W_i_n_d_o_w()

    _X_D_e_s_t_r_o_y_W_i_n_d_o_w()

    _X_R_a_i_s_e_W_i_n_d_o_w()

    _X_U_n_m_a_p_W_i_n_d_o_w()

    Xlib

