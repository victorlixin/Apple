XtPopup(3X11R5)                                         XtPopup(3X11R5)

  XXttPPooppuupp(())

  NNAAMMEE

    XtPopup(), XtCallbackNone(), XtCallbackNonexclusive(),
    XtCallbackExclusive(), MenuPopup() - map a pop-up

  SSYYNNOOPPSSIISS

    void XtPopup (Widget popup_shell, XtGrabKind grab_kind)
    void XtCallbackNone (Widget w, XtPointer client_data,
                         XtPointer call_data)
    void XtCallbackNonexclusive (Widget w, XtPointer client_data,
                                 XtPointer call_data)
    void XtCallbackExclusive (Widget w, XtPointer client_data,
                              XtPointer call_data)
    void MenuPopup (String shell_name)

  AARRGGUUMMEENNTTSS

    call_data
        Specifies the callback data, which is not used by this procedure.

    client_data
        Specifies the pop-up shell.

    grab_kind
        Specifies the way in which user events should be constrained.

    popup_shell
        Specifies the widget shell.

    w
        Specifies the widget.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_tt_PP_oo_pp_uu_pp(3X11R5) function performs the following:
    *     Calls _XX_tt_CC_hh_ee_cc_kk_SS_uu_bb_cc_ll_aa_ss_ss(3X11R5) to ensure popup_shell is a subclass of
          Shell.
    *     Generates an error if the shell's popped_up field is already True.
    *     Calls the callback procedures on the shell's popup_callback list.
    *     Sets the shell popped_up field to True , the shell spring_loaded
          field to False, and the shell grab_kind field from grab_kind.
    *     If the shell's create_popup_child field is non-NULL, _XX_tt_PP_oo_pp_uu_pp(3X11R5)
          calls it with popup_shell as the parameter.
    *     If grab_kind is either XtGrabNonexclusive or XtGrabExclusive, it
          calls:
          XtAddGrab(popup_shell, (grab_kind == XtGrabExclusive), False)
    *     Calls _XX_tt_RR_ee_aa_ll_ii_zz_ee_WW_ii_dd_gg_ee_tt(3X11R5) with popup_shell specified.
    *     Calls _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) with popup_shell specified.

    The _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_NN_oo_nn_ee(3X11R5), _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_NN_oo_nn_ee_xx_cc_ll_uu_ss_ii_vv_ee(3X11R5), and
    _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_EE_xx_cc_ll_uu_ss_ii_vv_ee(3X11R5) functions call _XX_tt_PP_oo_pp_uu_pp(3X11R5) with the shell
    specified by the client data argument and grab_kind set as the name
    specifies. _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_NN_oo_nn_ee(3X11R5), _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_NN_oo_nn_ee_xx_cc_ll_uu_ss_ii_vv_ee(3X11R5), and
    _XX_tt_CC_aa_ll_ll_bb_aa_cc_kk_EE_xx_cc_ll_uu_ss_ii_vv_ee(3X11R5) specify XtGrabNone, XtGrabNonexclusive, and
    XtGrabExclusive, respectively. Each function then sets the widget that
    executed the callback list to be insensitive by using
    _XX_tt_SS_ee_tt_SS_ee_nn_ss_ii_tt_ii_vv_ee(3X11R5). Using these functions in callbacks is not
    required. In particular, an application must provide customized code for
    callbacks that create pop-up shells dynamically or that must do more than
    desensitizing the button.

    _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) is known to the translation manager, which must perform
    special actions for spring-loaded pop-ups. Calls to _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) in a
    translation specification are mapped into calls to a nonexported action
    procedure, and the translation manager fills in parameters based on the
    event specified on the left-hand side of a translation.

    If _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) is invoked on ButtonPress (possibly with modifiers),
    the translation manager pops up the shell with  grab_kind set to
    XtGrabExclusive and spring_loaded set to True. If _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) is
    invoked on EnterWindow (possibly with modifiers), the translation manager
    pops up the shell with grab_kind set to XtGrabNonexclusive and
    spring_loaded set to False. Otherwise, the translation manager generates
    an error. When the widget is popped up, the following actions occur:
    *     Calls _XX_tt_CC_hh_ee_cc_kk_SS_uu_bb_cc_ll_aa_ss_ss(3X11R5) to ensure popup_shell is a subclass of
          Shell.
    *     Generates an error if the shell's popped_up field is already True.
    *     Calls the callback procedures on the shell's popup_callback list.
    *     Sets the shell popped_up field to True and the shell grab_kind and
          spring_loaded fields appropriately.
    *     If the shell's create_popup_child field is non-NULL, it is called
          with popup_shell as the parameter.
    *     Calls:
          XtAddGrab(popup_shell, (grab_kind == XtGrabExclusive),
          spring_loaded)
    *     Calls _XX_tt_RR_ee_aa_ll_ii_zz_ee_WW_ii_dd_gg_ee_tt(3X11R5) with popup_shell specified.
    *     Calls _XX_MM_aa_pp_WW_ii_nn_dd_oo_ww(3X11R5) with popup_shell specified.

    (Note that these actions are the same as those for _XX_tt_PP_oo_pp_uu_pp(3X11R5).)
    _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) tries to find the shell by searching the widget tree
    starting at the parent of the widget in which it is invoked. If it finds a
    shell with the specified name in the pop-up children of that parent, it
    pops up the shell with the appropriate parameters. Otherwise, it moves up
    the parent chain as needed. If _MM_ee_nn_uu_PP_oo_pp_uu_pp(3X11R5) gets to the application
    widget and cannot find a matching shell, it generates an error.

  SSEEEE AALLSSOO

    _X_t_C_r_e_a_t_e_P_o_p_u_p_S_h_e_l_l()

    _X_t_P_o_p_d_o_w_n()

    X Toolkit Intrinsics - C Language Interface

    Xlib - C Language X Interface

