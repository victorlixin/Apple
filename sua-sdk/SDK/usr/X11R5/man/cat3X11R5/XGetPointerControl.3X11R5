XGetPointerControl(3X11R5)                   XGetPointerControl(3X11R5)

  XXCChhaannggeePPooiinntteerrCCoonnttrrooll(())

  NNAAMMEE

    XChangePointerControl(), XGetPointerControl() - control pointer

  SSYYNNOOPPSSIISS

    XChangePointerControl (Display *display, Bool do_accel,
                           Bool do_threshold, int accel_numerator,
                           int accel_denominator, int threshold)
    XGetPointerControl (Display *display, int *accel_numerator_return,
                        int *accel_denominator_return,
                        int *threshold_return)

  AARRGGUUMMEENNTTSS

    accel_denominator
        Specifies the denominator for the acceleration multiplier.

    accel_denominator_return
        Returns the denominator for the acceleration multiplier.

    accel_numerator
        Specifies the numerator for the acceleration multiplier.

    accel_numerator_return
        Returns the numerator for the acceleration multiplier.

    display
        Specifies the connection to the X server.

    do_accel
        Specifies a Boolean value that controls whether the values for the
        accel_numerator or accel_denominator are used.

    do_threshold
        Specifies a Boolean value that controls whether the value for the
        threshold is used.

    threshold
        Specifies the acceleration threshold.

    threshold_return
        Returns the acceleration threshold.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_CC_hh_aa_nn_gg_ee_PP_oo_ii_nn_tt_ee_rr_CC_oo_nn_tt_rr_oo_ll(3X11R5) function defines how the pointing device
    moves. The acceleration, expressed as a fraction, is a multiplier for
    movement. For example, specifying 3/1 means the pointer moves three times
    as fast as normal. The fraction can be rounded arbitrarily by the X
    server. Acceleration only takes effect if the pointer moves more than
    threshold pixels at once and only applies to the amount beyond the value
    in the threshold argument. Setting a value to -1 restores the default. The
    values of the do_accel and do_threshold arguments must be True for the
    pointer values to be set, or the parameters are unchanged. Negative values
    (other than -1) generate a BadValue error, as does a zero value for the
    accel_denominator argument.

    _XX_CC_hh_aa_nn_gg_ee_PP_oo_ii_nn_tt_ee_rr_CC_oo_nn_tt_rr_oo_ll(3X11R5) can generate a BadValue error.

    The _XX_GG_ee_tt_PP_oo_ii_nn_tt_ee_rr_CC_oo_nn_tt_rr_oo_ll(3X11R5) function returns the pointer's current
    acceleration multiplier and acceleration threshold.

  DDIIAAGGNNOOSSTTIICCSS

    BadValue
        Some numeric value falls outside the range of values accepted by the
        request. Unless a specific range is specified for an argument, the
        full range defined by the argument's type is accepted. Any argument
        defined as a set of alternatives can generate this error.

  SSEEEE AALLSSOO

    Xlib

