XQueryColor(3X11R5)                                 XQueryColor(3X11R5)

  XXQQuueerryyCCoolloorr(())

  NNAAMMEE

    XQueryColor(), XQueryColors(), XLookupColor(), XParseColor() - obtain
    color values

  SSYYNNOOPPSSIISS

    XQueryColor (Display *display, Colormap colormap,
                 XColor *def_in_out)
    XQueryColors (Display *display, Colormap colormap,
                  XColor defs_in_out[], int ncolors)
    Status XLookupColor (Display *display, Colormap colormap,
                         char *color_name, XColor *exact_def_return,
                         XColor *screen_def_return)
    Status XParseColor (Display *display, Colormap colormap,
                        char *spec, XColor *exact_def_return)

  AARRGGUUMMEENNTTSS

    colormap
        Specifies the colormap.

    color_name
        Specifies the color name string (for example, red) whose color
        definition structure you want returned.

    def_in_out
        Specifies and returns the RGB values for the pixel specified in the
        structure.

    defs_in_out
        Specifies and returns an array of color definition structures for the
        pixel specified in the structure.

    display
        Specifies the connection to the X server.

    exact_def_return
        Returns the exact RGB values.

    ncolors
        Specifies the number of XXCCoolloorr structures in the color definition
        array.

    screen_def_return
        Returns the closest RGB values provided by the hardware.

    spec
        Specifies the color name string; case is ignored.

    exact_def_return
        Returns the exact color value for later use and sets the DoRed,
        DoGreen, and DoBlue flags.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_QQ_uu_ee_rr_yy_CC_oo_ll_oo_rr(3X11R5) function returns the current RGB value for the
    pixel in the XXCCoolloorr structure and sets the DoRed, DoGreen, and DoBlue
    flags. The _XX_QQ_uu_ee_rr_yy_CC_oo_ll_oo_rr_ss(3X11R5) function returns the RGB value for each
    pixel in each XXCCoolloorr structure, and sets the DoRed, DoGreen, and DoBlue
    flags in each structure.

    _XX_QQ_uu_ee_rr_yy_CC_oo_ll_oo_rr(3X11R5) and _XX_QQ_uu_ee_rr_yy_CC_oo_ll_oo_rr_ss(3X11R5) can generate BadColor and
    BadValue errors.

    The _XX_LL_oo_oo_kk_uu_pp_CC_oo_ll_oo_rr(3X11R5) function looks up the string name of a color with
    respect to the screen associated with the specified colormap. It returns
    both the exact color values and the closest values provided by the screen
    with respect to the visual type of the specified colormap. If the color
    name is not in the Host Portable Character Encoding the result is
    implementation dependent. Use of uppercase or lowercase does not matter.
    _XX_LL_oo_oo_kk_uu_pp_CC_oo_ll_oo_rr(3X11R5) returns nonzero if the name is resolved, otherwise it
    returns zero.

    The _XX_PP_aa_rr_ss_ee_CC_oo_ll_oo_rr(3X11R5) function looks up the string name of a color with
    respect to the screen associated with the specified colormap. It returns
    the exact color value. If the color name is not in the Host Portable
    Character Encoding the result is implementation dependent. Use of
    uppercase or lowercase does not matter. _XX_PP_aa_rr_ss_ee_CC_oo_ll_oo_rr(3X11R5) returns
    nonzero if the name is resolved, otherwise it returns zero.

    _XX_LL_oo_oo_kk_uu_pp_CC_oo_ll_oo_rr(3X11R5) and _XX_PP_aa_rr_ss_ee_CC_oo_ll_oo_rr(3X11R5) can generate BadColor error.

  CCOOLLOORR NNAAMMEESS

    An RGB Device specification is identified by the prefix "rgb:" and
    conforms to the following syntax:

    rgb:<red>/<green>/<blue>

    <red>, <green>, <blue> := h | hh | hhh | hhhh
    h := single hexadecimal digits (case insignificant)

    Note that h indicates the value scaled in 4 bits, hh the value scaled in 8
    bits, hhh the value scaled in 12 bits, and hhhh the value scaled in 16
    bits, respectively.

    For backward compatibility, an older syntax for RGB Device is supported,
    but its continued use is not encouraged. The syntax is an initial sharp
    sign character followed by a numeric specification, in one of the
    following formats:

    The R, G, and B represent single hexadecimal digits. When fewer than 16
    bits each are specified, they represent the most-significant bits of the
    value (unlike the "rgb:" syntax, in which values are scaled). For example,
    #3a7 is the same as #3000a0007000.

    An RGB intensity specification is identified by the prefix "rgbi:" and
    conforms to the following syntax:

    rgbi:<red>/<green>/<blue>

    Note that red, green, and blue are floating point values between 0.0 and
    1.0, inclusive. The input format for these values is an optional sign, a
    string of numbers possibly containing a decimal point, and an optional
    exponent field containing an E or e followed by a possibly signed integer
    string.

    The standard device-independent string specifications have the following
    syntax:

    CIEXYZ:<X>/<Y>/<Z>
    CIEuvY:<u>/<v>/<Y>
    CIExyY:<x>/<y>/<Y>
    CIELab:<L>/<a>/<b>
    CIELuv:<L>/<u>/<v>
    TekHVC:<H>/<V>/<C>

    All of the values (C, H, V, X, Y, Z, a, b, u, v, y, x) are floating point
    values. The syntax for these values is an optional '+' or '-' sign, a
    string of digits possibly containing a decimal point, and an optional
    exponent field consisting of an 'E' or 'e' followed by an optional '+' or
    '-' followed by a string of digits.

  DDIIAAGGNNOOSSTTIICCSS

    BadColor
        A value for a Colormap argument does not name a defined Colormap.

    BadValue
        Some numeric value falls outside the range of values accepted by the
        request. Unless a specific range is specified for an argument, the
        full range defined by the argument's type is accepted. Any argument
        defined as a set of alternatives can generate this error.

  SSEEEE AALLSSOO

    _X_A_l_l_o_c_C_o_l_o_r()

    _X_C_r_e_a_t_e_C_o_l_o_r_m_a_p()

    _X_S_t_o_r_e_C_o_l_o_r_s()

    Xlib

