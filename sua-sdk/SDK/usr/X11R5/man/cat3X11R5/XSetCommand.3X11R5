XSetCommand(3X11R5)                                 XSetCommand(3X11R5)

  XXSSeettCCoommmmaanndd(())

  NNAAMMEE

    XSetCommand(), XGetCommand() - set or read a window's WM_COMMAND property

  SSYYNNOOPPSSIISS

    XSetCommand (Display *display, Window w, char **argv, int argc)
    Status XGetCommand (Display *display, Window w,
                        char ***argv_return, int *argc_return)

  AARRGGUUMMEENNTTSS

    argc
        Specifies the number of arguments.

    argc_return
        Returns the number of arguments returned.

    argv
        Specifies the application's argument list.

    argv_return
        Returns the application's argument list.

    display
        Specifies the connection to the X server.

    w
        Specifies the window.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_SS_ee_tt_CC_oo_mm_mm_aa_nn_dd(3X11R5) function sets the command and arguments used to
    invoke the application. (Typically, argv is the argv array of your main
    program.) If the strings are not in the Host Portable Character Encoding
    the result is implementation dependent.

    _XX_SS_ee_tt_CC_oo_mm_mm_aa_nn_dd(3X11R5) can generate BadAlloc and BadWindow errors.

    The _XX_GG_ee_tt_CC_oo_mm_mm_aa_nn_dd(3X11R5) function reads the WM_COMMAND property from the
    specified window and returns a string list. If the WM_COMMAND property
    exists, it is of type STRING and format 8. If sufficient memory can be
    allocated to contain the string list, _XX_GG_ee_tt_CC_oo_mm_mm_aa_nn_dd(3X11R5) fills in the
    argv_return and argc_return arguments and returns a nonzero status.
    Otherwise, it returns a zero status. If the data returned by the server is
    in the Latin Portable Character Encoding, then the returned strings are in
    the Host Portable Character Encoding. Otherwise, the result is
    implementation dependent. To free the memory allocated to the string list,
    use _XX_FF_rr_ee_ee_SS_tt_rr_ii_nn_gg_LL_ii_ss_tt(3X11R5).

  PPRROOPPEERRTTIIEESS

    WM_COMMAND
        The command and arguments, null-separated, used to invoke the
        application.

  DDIIAAGGNNOOSSTTIICCSS

    BadAlloc
        The server failed to allocate the requested resource or server memory.

    BadWindow
        A value for a Window argument does not name a defined Window.

  SSEEEE AALLSSOO

    _X_A_l_l_o_c_C_l_a_s_s_H_i_n_t()

    _X_A_l_l_o_c_I_c_o_n_S_i_z_e()

    _X_A_l_l_o_c_S_i_z_e_H_i_n_t_s()

    _X_A_l_l_o_c_W_M_H_i_n_t_s()

    _X_S_e_t_T_r_a_n_s_i_e_n_t_F_o_r_H_i_n_t()

    _X_S_e_t_T_e_x_t_P_r_o_p_e_r_t_y()

    _X_S_e_t_W_M_C_l_i_e_n_t_M_a_c_h_i_n_e()

    _X_S_e_t_W_M_C_o_l_o_r_m_a_p_W_i_n_d_o_w_s()

    _X_S_e_t_W_M_I_c_o_n_N_a_m_e()

    _X_S_e_t_W_M_N_a_m_e()

    _X_S_e_t_W_M_P_r_o_p_e_r_t_i_e_s()

    _X_S_e_t_W_M_P_r_o_t_o_c_o_l_s()

    _X_S_t_r_i_n_g_L_i_s_t_T_o_T_e_x_t_P_r_o_p_e_r_t_y()

    Xlib

