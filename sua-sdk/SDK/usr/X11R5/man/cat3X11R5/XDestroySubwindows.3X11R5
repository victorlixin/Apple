XDestroySubwindows(3X11R5)                   XDestroySubwindows(3X11R5)

  XXDDeessttrrooyyWWiinnddooww(())

  NNAAMMEE

    XDestroyWindow(), XDestroySubwindows() - destroy windows

  SSYYNNOOPPSSIISS

    XDestroyWindow (Display *display, Window w)
    XDestroySubwindows (Display *display, Window w)

  AARRGGUUMMEENNTTSS

    display
        Specifies the connection to the X server.

    w
        Specifies the window.

  DDEESSCCRRIIPPTTIIOONN

    The _XX_DD_ee_ss_tt_rr_oo_yy_WW_ii_nn_dd_oo_ww(3X11R5) function destroys the specified window as well
    as all of its subwindows and causes the X server to generate a
    DestroyNotify event for each window. The window should never be referenced
    again. If the window specified by the w argument is mapped, it is unmapped
    automatically. The ordering of the DestroyNotify events is such that for
    any given window being destroyed, DestroyNotify is generated on any
    inferiors of the window before being generated on the window itself. The
    ordering among siblings and across subhierarchies is not otherwise
    constrained. If the window you specified is a root window, no windows are
    destroyed. Destroying a mapped window will generate Expose events on other
    windows that were obscured by the window being destroyed.

    _XX_DD_ee_ss_tt_rr_oo_yy_WW_ii_nn_dd_oo_ww(3X11R5) can generate a BadWindow error.

    The _XX_DD_ee_ss_tt_rr_oo_yy_SS_uu_bb_ww_ii_nn_dd_oo_ww_ss(3X11R5) function destroys all inferior windows of
    the specified window, in bottom-to-top stacking order. It causes the X
    server to generate a DestroyNotify event for each window. If any mapped
    subwindows were actually destroyed, _XX_DD_ee_ss_tt_rr_oo_yy_SS_uu_bb_ww_ii_nn_dd_oo_ww_ss(3X11R5) causes the
    X server to generate Expose events on the specified window. This is much
    more efficient than deleting many windows one at a time because much of
    the work need be performed only once for all of the windows, rather than
    for each window. The subwindows should never be referenced again.

    _XX_DD_ee_ss_tt_rr_oo_yy_SS_uu_bb_ww_ii_nn_dd_oo_ww_ss(3X11R5) can generate a BadWindow error.

  DDIIAAGGNNOOSSTTIICCSS

    BadWindow
        A value for a Window argument does not name a defined Window.

  SSEEEE AALLSSOO

    _X_C_h_a_n_g_e_W_i_n_d_o_w_A_t_t_r_i_b_u_t_e_s()

    _X_C_o_n_f_i_g_u_r_e_W_i_n_d_o_w()

    _X_C_r_e_a_t_e_W_i_n_d_o_w()

    _X_M_a_p_W_i_n_d_o_w()

    _X_R_a_i_s_e_W_i_n_d_o_w()

    _X_U_n_m_a_p_W_i_n_d_o_w()

    Xlib

