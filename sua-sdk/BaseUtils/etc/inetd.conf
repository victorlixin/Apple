#
# Copyright (c) Microsoft Corporation.  All rights reserved.
#
#
# THIS SOFTWARE IS PROVIDED ``AS IS'' BY MICROSOFT CORP. AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL MICROSOFT CORPORATION BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#C-

#----------------------------------------------
# RCSID = $Header: /E/SUA/src/etc.files/inetd.conf,v 1.17 1999/03/20 08:06:07 rodney Exp $
#
# Filename: /etc/inetd.conf
# Internet server configuration database
#
# Leave the pathnames in column 6 as given below. 
# Inetd will automatically prefix the path with the SUA installation
# location to form the full absolute pathname.
#
# Tftp is commented out so that it does not start by default at your site;
#   you may want to start it  for various reasons (like X-terminals);
#   please read the tftpd man page.
#
#
# Format of each line below:
#    serviceName 
#    SocketType 
#    Protocol 
#    wait/nowait 
#    userName		- for SUA this is ignored
#    program
#    arguments ...
#
#
# ****  NOTE #1:  *******************************************************
#*   SUA ships with two different telnet servers
#*   and rsh servers.
#*   One set is an SUA implementation (which are controlled from this file)
#*   and the other set is a Windows implementation.
#*   They both implement their respective protocols, but the SUA version
#*   gives you UNIX semantics and access to the SUA shells.
#*   The Windows version gives you access to cmd.exe and
#*   acts more like an emulator.
#*
#*   You need to decide which behaviour you want.
#*   And you need to decide which one you want enabled.
#*   Only one can be enabled at a time.
#*
#*   We have disabled the SUA daemons by default.
#*   To enable the SUA versions, then uncomment out the next two lines.
#*   **** NOTE ****: 
#*       you must disable the Windows version of these services before
#*		 using the SUA services.
#*       You can do this via the Windows Service Manager GUI.
#*
#************************************************************************

#**********************************************************************
#* NOTE #2:
#
#  By default, all services provided by inetd are to be disabled.
#  This provides a secure default behavior that provides some protection
#  against network attacks.
#
#  There are some differences between the standard UNIX implementation 
#  of sockets and the Windows implementation.
#  The Windows Tcp/Ip socket implementation does not restrict access 
#  to ports 1 throught 1024 to appropriately privileged users.
#  Without this restriction, it may be possible to compromise the 
#  inaccessability of the system by creating malicious applications that
#  listen on this range of ports.
#  To mitigate this problem, inetd has been enhanced to "capture" these 
#  ports and hold on to them so that no one else can.
#  To do this, inetd must be started at boot time which occurs 
#  by default.  The SUA subsystem is started at boot time and SUA  
#  /usr/sbin/init will start inetd.  Please see the init(x) man page.
#  A new syntax is now available to support this behavior.. 
#  By adding the prefix "camp-" to the the service name, inetd will
#  determine the port of this service, but not the start the service
#  when a request is made, but restrict other applications for listening
#  on that port.  
#
#  Examples:
#    #ftp	stream	tcp	...     : disable this service
#    camp-ftp	stream	tcp	...     : disable this service and
#					  capture the port so other
#					  applications can not use it
#    ftp	stream	tcp	...     : this service is enabled
# 
#********************************************************************
#**********************************************************************
#* NOTE #3: IPV6
# inetd has now been updated to support IPV6. For these daemons to receive 
# connections from both IPv4 clients and IPv6 clients, the user just needs
# to enable both the udp/udp6 or tcp/tcp6 entries in this configuration file.
# Only the following Deamons are IPV6 enabled:-
# a: telnetd
# b: ftp
# c: tftp
# d: finger
# e: rshd
# f: rlogind
#************************************************************************
#
#
#telnet	stream	tcp	nowait	NULL	/usr/sbin/in.telnetd	in.telnetd -i
#telnet	stream	tcp6	nowait	NULL	/usr/sbin/in.telnetd	in.telnetd -i
#shell	stream	tcp	nowait	NULL	/usr/sbin/in.rshd	in.rshd -a
#shell	stream	tcp6	nowait	NULL	/usr/sbin/in.rshd	in.rshd -a
#
#exec	stream	tcp	nowait	NULL	/usr/sbin/in.rexecd	in.rexecd
#finger	stream	tcp	nowait	NULL	/usr/sbin/in.fingerd	in.fingerd -ls
#finger	stream	tcp6	nowait	NULL	/usr/sbin/in.fingerd	in.fingerd -ls
#ftp	stream	tcp	nowait	NULL	/usr/sbin/in.ftpd	in.ftpd -l
#ftp	stream	tcp6	nowait	NULL	/usr/sbin/in.ftpd	in.ftpd -l
#login	stream	tcp	nowait	NULL	/usr/sbin/in.rlogind	in.rlogind -a
#login	stream	tcp6	nowait	NULL	/usr/sbin/in.rlogind	in.rlogind -a
#ntalk	dgram	udp	wait	NULL	/usr/sbin/in.ntalkd	in.ntalkd
#tftp	dgram	udp	wait	NULL	/usr/sbin/in.tftpd	in.tftpd -l /tftp_dir
#tftp	dgram	udp6	wait	NULL	/usr/sbin/in.tftpd	in.tftpd -l /tftp_dir
#pop3	stream	tcp	nowait	NULL	/usr/sbin/popper	popper
#
# internals below here
#
#tcpmux	stream	tcp	nowait	NULL	internal
#echo	stream	tcp	nowait	NULL	internal
#discard	stream	tcp	nowait	NULL	internal
#chargen	stream	tcp	nowait	NULL	internal
#daytime	stream	tcp	nowait	NULL	internal
#time	stream	tcp	nowait	NULL	internal
#echo	dgram	udp	wait	NULL	internal
#discard	dgram	udp	wait	NULL	internal
#chargen	dgram	udp	wait	NULL	internal
#daytime	dgram	udp	wait	NULL	internal
#time	dgram	udp	wait	NULL	internal

