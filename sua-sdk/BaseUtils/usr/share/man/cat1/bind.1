bind(1)                                                         bind(1)

  bbiinndd

  NNAAMMEE

    bind - set or view the current emacs command-editing key bindings/macros.

  SSYYNNOOPPSSIISS

    bind [[-m]][[-l]] [[key[[=editing-command]] ...]]

  DDEESSCCRRIIPPTTIIOONN

    This command is a built-in command in the Korn Shell.

    When the eemmaaccss option is set, interactive input line editing is enabled.
    This mode is slightly different from the emacs mode in the original Korn
    shell, and the eighth bit is stripped in emacs mode. In this mode, various
    editing commands (typically bound to one or more control characters) cause
    immediate actions without waiting for a newline. Several editing commands
    are bound to particular control characters when the shell is invoked. The
    bbiinndd command can change these bindings.

    Without any options, bbiinndd(1) lists the current bindings. The options for
    bbiinndd(1) are as follows:
    string==editing-command
        The specified editing-command is bound to the given string, which
        should consist of a control character (which can be written using
        caret notation ^X), optionally preceded by one of the two prefix
        characters. Future input of the string will cause the editing command
        to be invoked immediately. Although only two prefix characters
        (usually ESC and ^X) are supported, some multicharacter sequences can
        be supported. The following binds the arrow keys on an American
        National Standards Institute (ANSI) terminal, or xterm (these are in
        the default bindings). Some escape sequences, however, will not work
        quite this well:
        bbiinndd ''^^[[[[''==pprreeffiixx--22
        bbiinndd ''^^XXAA''==uupp--hhiissttoorryy
        bbiinndd ''^^XXBB''==ddoowwnn--hhiissttoorryy
        bbiinndd ''^^XXCC''==ffoorrwwaarrdd--cchhaarr
        bbiinndd ''^^XXDD''==bbaacckkwwaarrdd--cchhaarr

    --ll
        Lists the names of the functions to which you can bind keys.
    --mm string==substitute
        The specified input string will afterwards be immediately replaced by
        the given substitute string, which can contain editing commands.

    Below is a list of available editing commands. Each description starts
    with the name of the command, an n if the command can be prefixed with a
    count, and any keys the command is bound to by default (written using
    caret notation; for example, ASCII ESC character is written as ^[). A
    count prefix for a command is entered using the sequence ^[n, where n is a
    sequence of 1 or more digits. Unless otherwise specified, if a count is
    omitted, it defaults to 1. Note that editing-command names are used only
    with the bbiinndd(1) command. Furthermore, many editing commands are useful
    only on terminals with a visible cursor. The default bindings were chosen
    to resemble corresponding emacs key bindings. The users' tty characters
    (such as ERASE) are bound to reasonable substitutes and override the
    default bindings.

    aabboorrtt ^^GG
        Useful as a response to a request for a search-history pattern in
        order to abort the search.
    aauuttoo--iinnsseerrtt n
        Simply causes the character to appear as literal input. Most ordinary
        characters are bound to this.
    bbaacckkwwaarrdd--cchhaarr n ^^BB
        Moves the cursor backward n characters.

    bbaacckkwwaarrdd--wwoorrdd nn ^^[[BB
        Moves the cursor backward to the beginning of a word; words consist of
        alphanumerics, underscore (_) and dollar sign ($).

    bbeeggiinnnniinngg--ooff--hhiissttoorryy ^^[[<<
        Moves to the beginning of the history.

    bbeeggiinnnniinngg--ooff--lliinnee ^^AA
        Moves the cursor to the beginning of the edited input line.
    ccaappiittaalliizzee--wwoorrdd n ^^[[cc,, ^^[[CC
        Capitalize the first character in the next n words, leaving the cursor
        past the end of the last word.

    ccoommmmeenntt ^^[[##
        If the current line does not begin with a comment character, one is
        added at the beginning of the line, and the line is entered (as if
        return had been pressed); otherwise, the existing comment characters
        are removed, and the cursor is placed at the beginning of the line.

    ccoommpplleettee ^^[[^^[[
        Automatically completes as much as is unique of the command name or
        the file name containing the cursor. If the entire remaining command
        or file name is unique, a space is printed after its completion unless
        it is a directory name. In this case // is appended. If there is no
        command or file name with the current partial word as its prefix, a
        bell character is output (usually causing a audio beep).

    ccoommpplleettee--ccoommmmaanndd ^^XX^^[[
        Automatically completes as much as is unique of the command name
        having the partial word up to the cursor as its prefix, as in the
        complete command.

    ccoommpplleettee--ffiillee ^^[[^^XX
        Automatically completes as much as is unique of the file name having
        the partial word up to the cursor as its prefix, as in the complete
        command.

    ccoommpplleettee--lliisstt ^^[[==
        List the possible completions for the current word.
    ddeelleettee--cchhaarr--bbaacckkwwaarrdd n EERRAASSEE,, ^^??,, ^^HH
        Deletes n characters before the cursor.
    ddeelleettee--cchhaarr--ffoorrwwaarrdd n
        Deletes n characters after the cursor.
    ddeelleettee--wwoorrdd--bbaacckkwwaarrdd n ^^[[EERRAASSEE,, ^^[[^^??,, ^^[[^^HH,, ^^[[hh
        Deletes n words before the cursor.
    ddeelleettee--wwoorrdd--ffoorrwwaarrdd n ^^[[dd
        Deletes characters after the cursor up to the end of n words.
    ddoowwnn--hhiissttoorryy n ^^NN
        Scrolls the history buffer forward n lines (later). Each input line
        originally starts just after the last entry in the history buffer, so
        down-history is not useful until either search-history or up-history
        has been performed.
    ddoowwnnccaassee--wwoorrdd n ^^[[LL,, ^^[[ll
        Lowercases the next n words.

    eenndd--ooff--hhiissttoorryy ^^[[>>
        Moves to the end of the history.

    eenndd--ooff--lliinnee ^^EE
        Moves the cursor to the end of the input line.

    eeoott ^^__
        Acts as an end-of-file. This is useful because edit-mode input
        disables normal terminal input canonicalization.
    eeoott--oorr--ddeelleettee n ^^DD
        Acts as eot if alone on a line; otherwise, acts as delete-char-
        forward.

    eerrrroorr
        Error (ring the bell).

    eexxcchhaannggee--ppooiinntt--aanndd--mmaarrkk ^^XX^^XX
        Places the cursor where the mark is, and sets the mark to where the
        cursor was.

    eexxppaanndd--ffiillee ^^[[**
        Appends an asterisk (**) to the current word and replaces the word with
        the result of performing file globbing on the word. If no files match
        the pattern, the bell rings.
    ffoorrwwaarrdd--cchhaarr n ^^FF
        Moves the cursor forward n characters.
    ffoorrwwaarrdd--wwoorrdd n ^^[[ff
        Moves the cursor forward to the end of the word n.
    ggoottoo--hhiissttoorryy n ^^[[gg
        Goes to history number n.

    kkiillll--lliinnee KKIILLLL
        Deletes the entire input line.

    kkiillll--rreeggiioonn ^^WW
        Deletes the input between the cursor and the mark.

    kkiillll--ttoo--eeooll nn ^^KK
        Deletes the input from the cursor to the end of the line if n is not
        specified; otherwise, deletes characters between the cursor and column
        n.

    lliisstt ^^[[??
        Prints a sorted, columnated list of command names or file names (if
        any) that can complete the partial word containing the cursor.
        Directory names have // appended to them.

    lliisstt--ccoommmmaanndd ^^XX??
        Prints a sorted, columnated list of command names (if any) that can
        complete the partial word containing the cursor.

    lliisstt--ffiillee ^^XX^^YY
        Prints a sorted, columnated list of file names (if any) that can
        complete the partial word containing the cursor. File type indicators
        are appended as described under list.

    nneewwlliinnee ^^JJ,, ^^MM
        Causes the current input line to be processed by the shell. The
        current cursor position can be anywhere on the line.

    nneewwlliinnee--aanndd--nneexxtt ^^OO
        Causes the current input line to be processed by the shell, and the
        next line from history becomes the current line. This is only useful
        after an up-history or search-history.

    nnoo--oopp QQUUIITT
        Does nothing.

    pprreeffiixx--11 ^^[[
        Introduces a two-character command sequence.

    pprreeffiixx--22 ^^XX

    pprreeffiixx--22 ^^[[[[
        Introduces a two-character command sequence.
    pprreevv--hhiisstt--wwoorrdd n ^^[[..,, ^^[[__
        The last word (specified by n) of the previous command is inserted at
        the cursor.

    qquuoottee ^^^^
        The following character is taken literally rather than as an editing
        command.

    rreeddrraaww ^^LL
        Reprints the prompt string and the current input line.
    sseeaarrcchh--cchhaarraacctteerr--bbaacckkwwaarrdd n ^^[[^^]]
        Search backward in the current line for occurrence n of the next
        character typed.

    sseeaarrcchh--cchhaarraacctteerr--ffoorrwwaarrdd nn ^^]]
        Search forward in the current line for occurrence n of the next
        character typed.

    sseeaarrcchh--hhiissttoorryy ^^RR
        Enter incremental search mode. The internal history list is searched
        backwards for commands matching the input. An initial ^ in the search
        string anchors the search. The abort key will leave search mode. Other
        commands will be executed after leaving search mode. Successive
        search-history commands continue searching backward to the next
        previous occurrence of the pattern. The history buffer retains only a
        finite number of lines; the oldest are discarded as necessary.

    sseett--mmaarrkk--ccoommmmaanndd ^^[[<<ssppaaccee>>
        Set the mark at the cursor position.

    ssttuuffff
        On systems supporting it, pushes the bound character back onto the
        terminal input where it can receive special processing by the terminal
        handler. This is useful for the BRL ^T mini-systat feature, for
        example.

    ssttuuffff--rreesseett
        Acts like ssttuuffff, then aborts input the same as an interrupt.

    ttrraannssppoossee--cchhaarrss ^^TT
        If at the end-of-line, or if the gmacs option is set, this exchanges
        the two previous characters; otherwise, it exchanges the previous and
        current characters and moves the cursor one character to the right.
    uupp--hhiissttoorryy n ^^PP
        Scrolls the history buffer backward n lines (earlier).
    uuppccaassee--wwoorrdd n ^^[[UU,, ^^[[uu
        Capitalizes the next n words.

    vveerrssiioonn ^^VV
        Display the version of kksshh(1). The current edit buffer is restored as
        soon as any key is pressed (the key is then processed, unless it is a
        SPACE).

    yyaannkk ^^YY
        Inserts the most recently killed text string at the current cursor
        position.

    yyaannkk--ppoopp ^^[[yy
        Immediately after a yank, replaces the inserted text string with the
        next previously killed text string.

