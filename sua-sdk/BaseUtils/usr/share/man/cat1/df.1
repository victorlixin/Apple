df(1)                                                             df(1)

  ddff

  NNAAMMEE

    df - display free disk space

  SSYYNNOOPPSSIISS

    df [[-aikPt]] [[-Fw]] [[-T type]] || [[[[file ......]] [[filesystem ...]]]]

  DDEESSCCRRIIPPTTIIOONN

    The ddff(1) utility displays statistics about the amount of free disk space
    on the specified filesystem or on the file system of which file is a part.
    Values are displayed in 512-byte per block block counts. If neither a file
    nor a file system operand is specified, ddff(1) displays statistics for
    drives /dev/fs/C through /dev/fs/Z. (The _dd_ff(1) utility reports on drives /
    dev/fs/A and /dev/fs/B if they are specified as operands, however.)

  OOPPTTIIOONNSS

    --aa
        Report statistics on all drives, /dev/fs/A through /dev/fs/Z.

    --FF
        Display the file system in /device/volume format instead of //volume
        format.

    --gg
       Blocks are in gigabytes (1024*1024*1024) instead of 512 bytes.

    --hh
        "Human-readable" output.  Use unit suffixes: Byte, Kilobyte,
        Megabyte, Gigabyte, Terabyte, Petabyte, Exabyte in order to
        reduce the number of digits to four or less.

    --ii
        Displays used and free inodes.

    --kk
        Blocks are in counts of 1024 bytes (one kilobyte) instead of 512
        bytes.

    --mm
       Blocks are in megabytes (1024*1024) instead of 512 bytes.

    --PP
        Prevent the display of the Type column in the output. This is the
        portable output format specified in the POSIX.2 standard.

    --tt
        Ignored (provided for XPG4 compatibility only).

    --TT type
        Print only statistics for file systems of the specified type. The
        recognized types are:

        aallll
            All file system types.

        ccddffss
            CD-ROM file system.

        hhppffss
            File system used by OS/2.

        nnffss
            Network file system. A remote file system developed by SUN
            Microsystems for UNIX.

        nnttffss
            File system used by Windows.

        ooffss
            Object File System.

        ssaammbbaa
            Networked SAMBA file system.

        This option is ignored if either file or filesystem is specified.

    --ww
        Display in wide format, that is, columns are not formatted to fit in
        an 80-column line.

    Typical output is:

    $$ df
    Filesystem             512-blocks     Used Available Capacity Type
    Mounted on
    /Harddisk0/Partition1     3169088  1691069   1478019    53%   ntfs  /dev/
    fs/C
    /CdRom0                   1085320  1085320         0   100%   cdfs  /dev/
    fs/D
    /MORGAN/c_drive           2491713  2308884    182829    93%   ntfs  /dev/
    fs/M
    /MORGAN/nt_src             792272   748651     43621    94%   ntfs  /dev/
    fs/N
    /MORGAN/products           979760   526281    453479    54%   ntfs  /dev/
    fs/P
    /MORGAN/VSC_suites        2491713  2308884    182829    93%   ntfs  /dev/
    fs/W

    $$ df -kP /D
    Filesystem  1024-blocks     Used Available Capacity Mounted on
    /CdRom0          542660   542660         0   100%   /D

    The columns are:

    FFiilleessyysstteemm
        The path name of the file system.

    551122--bblloocckkss
        Number of blocks in the file system. With the --kk option, these blocks
        are 1024-bytes, not 512.

    UUsseedd
        Number of blocks currently in use.

    AAvvaaiillaabbllee
        Number of blocks available.

    CCaappaacciittyy
        Current usage expressed as a percentage.

    TTyyppee
        The type of the file system. This can be any of the values acceptable
        as arguments to the --TT option, or ?????? if the file system type is
        unknown.

    MMoouunntteedd oonn
        The file system's mount point.

  DDIIAAGGNNOOSSTTIICCSS

    The ddff(1) utility exits with status 0 on success, >0 otherwise.

  SSEEEE AALLSSOO

    _d_u(1)

    _f_i_n_d(1)

