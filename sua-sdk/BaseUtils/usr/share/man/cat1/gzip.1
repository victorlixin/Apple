gzip(1)                                                         gzip(1)

  ggzziipp

  NNAAMMEE

    gzip, gunzip, uncompress, zcat - compress or expand files

  SSYYNNOOPPSSIISS

    gzip [[ -cdfhlLnNqrtvV19 ]] [[--SS suffix ]] [[name ...]]

    gunzip [[ -cdfhlLnNqrtvV19]] [[ -S suffix ]] [[ name ... ]]

    uncompress [[-cCdf?hkKvV]] [[-b maxbits]] [[-Iinpath]] [[-Ooutpath]]
    [[filenames...]]

    zcat [[-cCdf?hkKvV]][[-b maxbits]][[-Iinpath]][[-Ooutpath]][[filenames...]]

  DDEESSCCRRIIPPTTIIOONN

    The ggzziipp(1) utility reduces the size of the named files using Lempel-Ziv
    coding (LZ77). Whenever possible, each file is replaced by one with the
    extension ..ggzz, while keeping the same ownership modes, access, and
    modification times. If no files are specified, or if a file name is "-",
    the standard input is compressed to the standard output. The ggzziipp(1)
    utility will attempt to compress regular files only. In particular, it
    will ignore symbolic links.

    If the compressed file name is too long for its file system, ggzziipp
    truncates it. The ggzziipp(1) utility attempts to truncate only the parts of
    the file name longer than three characters. (A part is delimited by dots.)
    If the name consists of small parts only, the longest parts are truncated.
    For example, if file names are limited to 14 characters, ggzziipp..mmssddooss..eexxee is
    compressed to ggzzii..mmssdd..eexxee..ggzz. Names are not truncated on systems that do
    not have a limit on file-name length.

    By default, ggzziipp keeps the original file name and time stamp in the
    compressed file. These are used when decompressing the file with the --
    NN option. This is useful when the compressed file name was truncated or
    when the time stamp was not preserved after a file transfer.

    Compressed files can be restored to their original form using ggzziipp --
    dd gguunnzziipp(1), uunnccoommpprreessss(1), or zzccaatt(1). If the original name saved in the
    compressed file is not suitable for its file system, a new name is
    constructed from the original one to make it legal.

    The gguunnzziipp(1) utility takes a list of files on its command line and
    replaces with an uncompressed file without the original extension each
    file whose name ends with ..ggzz or ..ZZ and begins with the correct magic
    number. The gguunnzziipp(1) utility also recognizes the special extensions ..ttggzz
    and ..ttaazz as abbreviations for ..ttaarr..ggzz and ..ttaarr..ZZ, respectively. When
    compressing, ggzziipp(1) uses the ..ttggzz extension if necessary instead of
    truncating a file with a ..ttaarr extension.

    The gguunnzziipp(1) utility can currently decompress files created by ggzziipp(1),
    zziipp(1), ccoommpprreessss(1), ccoommpprreessss --HH(1) or _pp_aa_cc_kk(1). The detection of the input
    format is automatic. When using the first two formats, gguunnzziipp(1) performs
    a 32-bit cyclical redundancy check (CRC). For ppaacckk(1), gguunnzziipp(1) checks
    the uncompressed length. The standard ccoommpprreessss(1) format was not designed
    to allow consistency checks. However, gguunnzziipp(1) is sometimes able to
    detect a bad ..ZZ file. If you get an error when uncompressing a ..ZZ file, do
    not assume that the ..ZZ file is correct simply because the standard
    uunnccoommpprreessss(1) does not indicate a problem. This generally means that the
    standard uunnccoommpprreessss(1) does not check its input and generates unreliable
    output. The Santa Cruz Operation (SCO) ccoommpprreessss --HH format (lzh compression
    method) does not include a CRC, but does allow some consistency checks.

    Files created by zziipp(1) can be uncompressed by ggzziipp(1) only if they have a
    single member compressed with the "deflation" method. This feature is only
    intended to help conversion of ttaarr..zziipp files to the ttaarr..ggzz format. To
    extract zip files with several members, use uunnzziipp(1) instead of gguunnzziipp(1).
    The uunnccoommpprreessss(1) utility is identical to gguunnzziipp(1) except that zzccaatt(1) is
    identical to gguunnzziipp(1) --cc. (On some systems, zzccaatt(1) can be installed as
    ggzzccaatt(1) to preserve the original link to ccoommpprreessss))(1). The zzccaatt(1)
    utility uncompresses either a list of files on the command line or its
    standard input and writes the uncompressed data on standard output. The
    zzccaatt(1) utility uncompresses files that have the correct magic number,
    whether they have a ..ggzz suffix or not.

    The ggzziipp(1) utility uses the Lempel-Ziv algorithm used in zziipp(1) and
    PKZIP. The amount of compression obtained depends on the size of the input
    and the distribution of common substrings. Typically, text such as source
    code or English is reduced by 60-70%. Compression is generally much better
    than that achieved by LZW (as used in ccoommpprreessss(1)), Huffman coding (as
    used in ppaacckk(1)), or adaptive Huffman coding (ccoommppaacctt(1)).

    Compression is always performed, even if the compressed file is slightly
    larger than the original. The worst case expansion is a few bytes for the
    ggzziipp(1) file header, plus five bytes every 32K block, or an expansion
    ratio of 0.015% for large files. Note that the actual number of used disk
    blocks almost never increases. The ggzziipp(1) utility preserves the mode,
    ownership, and time stamps of files when compressing or decompressing.

  OOPPTTIIOONNSS

    The ggzziipp(1) utility takes the following options. (The long form of the
    option letter is listed in parentheses; the long forms are preceded by two
    dashes (--).)

    --LL ((----lliicceennssee))
        Display the ggzziipp(1) license and quit.

    --nn ((----nnoo--nnaammee))
        When compressing, do not save the original file name and time stamp by
        default.(The original name is always saved if the name had to be
        truncated.) When decompressing, do not restore the original file name
        if present (remove only the ggzziipp(1) suffix from the compressed file
        name) and do not restore the original time stamp if present (copy it
        from the compressed file). This option is the default when
        decompressing.

    --NN ((----nnaammee))
        When compressing, always save the original file name and time stamp;
        this is the default. When decompressing, restore the original file
        name and time stamp if present. This option is useful on systems that
        have a limit on file-name length or when the time stamp has been lost
        after a file transfer.

    --qq ((----qquuiieett))
        Suppress all warnings.

    --rr ((----rreeccuurrssiivvee))
        Travel the directory structure recursively. If any of the file names
        specified on the command line are directories, ggzziipp(1) will descend
        into the directory and compress all the files it finds there (or
        decompress them in the case of gguunnzziipp(1)).
    --SS .suf (----ssuuffffiixx.suf))
        Use suffix .suf instead of ..ggzz. Any suffix can be given, but avoid
        using suffixes other than ..zz and ..ggzz to prevent confusion when files
        are transferred to other systems. A null suffix forces gguunnzziipp(1) to
        try decompression on all given files regardless of suffix, as in:
        gunzip -S "" *
        Previous versions of ggzziipp used the ..zz suffix. This was changed to
        avoid a conflict with ppaacckk(1).

    --tt ((----tteesstt))
        Test. Check the compressed file integrity.

    --vv ((----vveerrbboossee))
        Verbose. Display the name and percentage reduction for each file
        compressed or decompressed.

    --VV ((----vveerrssiioonn))
        Version. Display the version number and compilation options, then
        quit.

    --## ((----ffaasstt ----bbeesstt))
        Regulate the speed of compression using the specified digit #, where --
        11 or ----ffaasstt indicates the fastest compression method (less
        compression) and --99 or ----bbeesstt indicates the slowest compression method
        (best compression). The default compression level is --66 (that is,
        biased towards high compression at the expense of speed).

    The uunnccoommpprreessss(1) and zzccaatt(1) commands use the following options:

    --VV
        print Version

    --dd
        do_decomp default = on

    --vv
        verbose

    --ff
        force overwrite of output file default = off

    --nn
        no header: useful to uncompress old files

    --cc
        cat all output to stdout default = off

    --CC
        generate output compatible with compress 2.0.

    --kk
        keep input file, default == kill (erase)

    --KK
        keep output file on error, default == kill (erase)
    --bb maxbits
        default == 16 bits, max == 16 bits
    --II pathname
        infile path ==
    --OO pathname
        outfile path ==
    --?? | --hh
        help usage.

  AADDVVAANNCCEEDD UUSSAAGGEE

    Multiple compressed files can be concatenated. In this case, gguunnzziipp(1)
    will extract all members at once. For example:

    gzip -c file1  > foo.gz
    gzip -c file2 >> foo.gz

    Then

    gunzip -c foo

    is equivalent to

    cat file1 file2

    In case of damage to one member of a ..ggzz file, other members can still be
    recovered (if the damaged member is removed). You can get better
    compression by compressing all members at once, however. For example:

    cat file1 file2 | gzip > foo.gz

    compresses better than

    gzip -c file1 file2 > foo.gz

    If you want to recompress concatenated files to get better compression,
    use the following:

    gzip -cd old.gz | gzip > new.gz

    If a compressed file consists of several members, the uncompressed size
    and CRC reported by the ----lliisstt option applies to the last member only. If
    you need the uncompressed size for all members, you can use:

    gzip -cd file.gz | wc -c

    To create a single archive file with multiple members so that members can
    later be extracted independently, use an archiver, such as ttaarr(1) or
    zziipp(1). GNU ttaarr(1) supports the --zz option to invoke ggzziipp(1) transparently.
    The ggzziipp(1) utility is designed as a complement to ttaarr(1), not as a
    replacement.

  EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS

    The environment variable GZIP can hold a set of default options for
    ggzziipp(1). These options are interpreted first, and can be overwritten by
    explicit command-line parameters, as shown in the following example:
    for sh:      GZIP="-8v --name"; export GZIP

    for csh:     setenv GZIP "-8v --name"

  DDIIAAGGNNOOSSTTIICCSS

    Exit status is normally 0; if an error occurs, exit status is 1. If a
    warning occurs, exit status is 2.

    Usage: gzip [-cdfhlLnNrtvV19] [-S suffix] [file ...]
        Invalid options were specified on the command line.
    file: not in gzip format
        The file specified to gguunnzziipp(1) has not been compressed.
    file: Corrupt input. Use zcat to recover some data.
        The compressed file has been damaged. The data up to the point of
        failure can be recovered using the following:
        zcat file > recover
    file: compressed with xx bits, can only handle yy bits
        The file was compressed (using LZW) by a program that could handle
        more bits than the decompress code on this computer. Recompress the
        file with ggzziipp, which compresses better and uses less memory.
    file: already has .gz suffix -- no change
        The file is assumed to be already compressed. Rename the file and try
        again.
    file already exists; do you want to overwrite (y or n)?
        Respond "y" if you want the output file to be replaced; "n" if not.

    gunzip: corrupt input
        A SIGSEGV violation was detected, which usually means that the input
        file has been corrupted.
    xx.x%
        Percentage of the input saved by compression. (Relevant only for --
        vv and --ll.)

    -- not a regular file or directory: ignored
        When the input file is not a regular file or directory, (for example,
        a symbolic link, socket, first-in/first-out [FIFO], or device file),
        it is left unaltered.
    -- has xx other links: unchanged
        The input file has links; it is left unchanged. See llnn(1) for more
        information. Use the --ff flag to force compression of multiply linked
        files.

  CCAAVVEEAATTSS

    When writing compressed data to a tape, it is usually necessary to pad the
    output with zeroes up to a block boundary. When the data is read and the
    whole block is passed to gguunnzziipp(1) for decompression, gguunnzziipp(1) detects
    that there is extra trailing garbage after the compressed data and emits a
    warning by default. You have to use the ----qquuiieett option to suppress the
    warning. This option can be set in the GZIP environment variable as in:

    for sh:  GZIP="-q"  tar -xfz --block-compress
    /dev/rst0 for csh: (setenv GZIP -q; tar -xfz
    --block-compr /dev/rst0)

    In the above example, ggzziipp(1) is invoked implicitly by the --zz option of
    GNU ttaarr(1). Ensure that the same block size (the --bb option of ttaarr(1)) is
    used for reading and writing compressed data on tapes. (This example
    assumes you are using the GNU version of ttaarr(1).)

  BBUUGGSS

    The ----lliisstt option reports incorrect sizes if they exceed two gigabytes.
    The ----lliisstt option reports sizes as -1 and CRC as ffffffff if the
    compressed file is on a non-seekable medium.

    In rare cases, the ----bbeesstt option gives worse compression than the default
    compression level(-6). On some highly redundant files, traditional
    ccoommpprreessss(1) compresses better than ggzziipp(1); this is not true, hhowever on
    SUA, where ccoommpprreessss(1) is a link to ggzziipp(1).

  SSEEEE AALLSSOO

    _z_i_p(1)

    _u_n_z_i_p(1)

