kill(1)                                                         kill(1)

  kkiillll

  NNAAMMEE

    kill - terminate or signal a process

  SSYYNNOOPPSSIISS

    kill -s signal_name pid...
    kill -signal_name pid...
    kill -signal_number pid...
    kill -l || -m]]

  DDEESSCCRRIIPPTTIIOONN

    This command is a built-in command in the C shell and the Korn shell as
    well as an external command (//bbiinn//kkiillll).

    The kkiillll(1) utility sends the TERM signal to the processes specified by
    the pid operand(s).

    Only a process with appropriate privileges can send signals to other
    users' processes.

    The options are as follows:

    --ll
        List symbolic signal names. In the Korn shell, kkiillll --ll lists mapping
        between signal numbers and signal names, while kkiillll --ll signal_number
        lists the signal name corresponding to signal_number.

    --mm
        In //bbiinn//kkiillll, lists mapping between signal numbers and signal names.
    --ss signal_name
        A symbolic signal name specifying the signal to be sent instead of the
        default TERM. The --ll option displays the signal names.
    --signal_name

        Equivalent to --ss signal_name.
    --signal_number

        A non-negative decimal integer, specifying the signal to be sent
        instead of the default TERM.

    Some of the more commonly used signals are as follows:
    1      SIGHUP      (hangup)

    2      SIGINT      (interrupt)

    3      SIGQUIT     (quit)

    6      SIGABRT     (abort)

    9      SIGKILL     (non-catchable, non-ignorable kill)

    14     SIGALRM     (alarm clock)

    15     SIGTERM     (software termination signal)

  DDIIAAGGNNOOSSTTIICCSS

    The kkiillll(1) utility exits 0 on success, and >0 if an error occurs.

  SSEEEE AALLSSOO

    _s_t_r_s_i_g_n_a_l(1)

