ipcs(1)                                                         ipcs(1)

  iippccss

  NNAAMMEE

    ipcs - report status of interprocess communication (IPC) objects

  SSYYNNOOPPSSIISS

    ipcs [[-mqs]] [[-abcopt]]

  DDEESSCCRRIIPPTTIIOONN

    The iippccss(1) utility presents status information about active interprocess
    communication (IPC) objects, specifically message queues, shared memory
    segments, and semaphores.

    Without any options, iippccss(1) presents terse information about all active
    IPC objects on the system (of these types; other Windows IPC mechanisms
    are not summarized). To present information about only memory segments,
    message queues, or only semaphore sets, use the options --mm, --qq, or --ss,
    respectively. Other options specify the information displayed.

  OOPPTTIIOONNSS

    --aa
        Use all other information options (identical to --bbccoopptt).

    --bb
        Display information about maximum allowable size.
        *     For shared memory, this is the maximum allowable size of each
              segment.
        *     For message queues, this is the maximum number of bytes on each
              queue for messages.
        *     For semaphores, this is the number of semaphores in each set.

    --mm
        Display information about shared memory segments only. Can be combined
        with --qq or --ss.

    --oo
        Display information on outstanding usage.
        *     For shared memory, this is the number of processes attached to
              shared memory segments.
        *     For messages queues, this is the number of messages on queue and
              the total number of bytes in messages on queue.

    --pp
        Display process number information.
        *     For shared memory, this is the process identifier (PID) of the
              last process to attach or detach on shared memory segments and
              the PID of the creating process, or the PID of the process that
              created it if no process has yet attached.
        *     For message queues, this is the PID of the last process to send
              a message and the PID of the last process to receive a message
              on message queues.

    --qq
        Display information about message queues only. (Can be combined with --
        mm or --ss).

    --ss
        Display information about semaphore sets only. (Can be combined with --
        mm or --qq).

    --tt
        Display time information. This is the time of the last control
        operation that changed access permissions, and:
        *     For shared memory segments, this is the time of the last
              _ss_hh_mm_aa_tt(2) and _ss_hh_mm_dd_tt(2) operations and the time the segment was
              created or last modified.
        *     For message queues, this is the time of the last _mm_ss_gg_ss_nn_dd(2) and
              _mm_ss_gg_rr_cc_vv(2) operations and the time the queue was created or last
              modified.
        *     For semaphore sets, this is the time of the last _ss_ee_mm_oo_pp(2)
              operation and the time that the semaphore set was created or
              last modified.

    For each IPC object, a permissions or mode string is displayed, similar to
    the output of llss --ll, and consisting of eleven characters. The first
    character indicates the current state of the object; the second and third
    letters indicate information specific to the IPC object. The last nine
    letters indicate the permissions on the object, where rr is read
    permission, ww is write permission, and aa is permission to alter the
    object.

    The first letter is one of the following:

    --
        The object exists in its normal state.

    CC
        The object is being created.

    DD
        The object is being deleted.

    ZZ
        The object is zombied. Although all objects go through this state, it
        is normally only seen with shared memory segments; other objects are
        reaped immediately. A shared memory segment is a zombie if it has been
        marked for deletion but still has outstanding references. These
        references prevent the segment from being reaped; it cannot be removed
        until all mappings have been unmapped. Since it has been marked for
        deletion, no new connections are possible. It is possible for a call
        to sshhmmggeett() to create a new memory segment using the same key that
        created the zombied segment.

    The meanings of the second and third characters depend upon the IPC
    object:

    MMeessssaaggee qquueeuueess
        The second character is RR if any process is blocked waiting to receive
        a message, or -- otherwise.
        The third character is SS if any process is blocked waiting to send a
        message, or -- otherwise.

    SSeemmaapphhoorree sseettss
        The second letter is NN if the process is blocked waiting for a
        semaphore value in the set to rise to a threshold (that is, waiting
        for the other process to release resources), or -- otherwise.
        The third character is ZZ if the process is blocked waiting for a
        semaphore value in the set to drop to zero, or -- otherwise.

    SShhaarreedd mmeemmoorryy sseeggmmeennttss
        The second letter is RR if any process is attached to the segment read-
        only, and -- otherwise.
        The third letter is WW if any process is attached to the segment read-
        write, and -- otherwise.

  DDIIAAGGNNOOSSTTIICCSS

    The iippccss(1) utility exits with status 0 for success, and >0 if an error
    occurred.

  SSEEEE AALLSSOO

    _m_s_g_g_e_t(2)

    _m_s_g_r_c_v(2)

    _m_s_g_s_n_d(2)

    _s_e_m_g_e_t(2)

    _s_e_m_o_p(2)

    _s_h_m_a_t(2)

    _s_h_m_d_t(2)

    _s_h_m_g_e_t(2)

