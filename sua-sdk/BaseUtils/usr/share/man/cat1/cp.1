cp(1)                                                             cp(1)

  ccpp

  NNAAMMEE

    cp - copy files

  SSYYNNOOPPSSIISS

    cp [[-Rr [-H | -L | -P]]] [[-fip]] src target
    cp [[-Rr [-H | -L | -P]]] [[-fip]] src1 ...... srcN directory

  DDEESSCCRRIIPPTTIIOONN

    In the first synopsis form, the ccpp(1) utility copies the contents of the
    source_file to the target_file. In the second, third, and fourth synopsis
    forms, the contents of each named source_file are copied to the
    destination target_directory. The names of the files are not changed. If
    ccpp(1) detects an attempt to copy a file to itself, the copy will fail.

  OOPPTTIIOONNSS

    --ff, --force
        For each existing destination path name, remove it and create a new
        file, without prompting for confirmation regardless of its
        permissions.

    --HH
        If the --RR option is also specified, symbolic links on the com-
        mand-line are followed.  (Symbolic links encountered in the tree
        traversal are not followed.)

    --ii, --interactive
        Inquire before copying a file that would overwrite an existing file.
        The ccpp(1) utility writes a prompt to the standard error output. If the
        response from the standard input begins with the character "y," the
        file copy is attempted.

     --LL, --dereference
        If the -R option is also specified, all symbolic links are followed.

     --PP, --preserve
        If the -R option is also specified, no symbolic links are followed.

    --pp, --preserve
        Preserve in the copy the following attributes, as permissions allow:

        Modification time
        Access time
        File flags
        File mode
        User ID
        Group ID
        The following also apply to this option:
        *     If the user ID and group ID cannot be preserved, no error
              message is displayed and the exit value is not altered.
        *     If the source file has its set user ID bit on, and the user ID
              cannot be preserved, the set user ID bit is not preserved in the
              copy's permissions.
        *     If the source file has its set group ID bit on and the group ID
              cannot be preserved, the set group ID bit is not preserved in
              the copy's permissions.
        *     If the source file has both its set user ID and set group ID
              bits on, and either the user ID or group ID cannot be preserved,
              neither the set user ID nor set group ID bits are preserved in
              the copy's permissions.

    --RR, --recursive
        Copy file hierarchies, including FIFOs; this may not be specified with
        the --rr option.

    --rr
        Copy file hierarchies but not including special files such as FIFOs;
        this may not be specified with the --RR option.

    --vv, --verbose
        Verbose mode.

    The contents of each destination file that already exists are overwritten
    if permissions allow, but its mode, user ID, and group ID are unchanged.

    In the second synopsis form, target_directory must exist unless there is
    only one named source_file, which is a directory, and the --RR flag is
    specified.

    If the destination file does not exist, the mode of the source file is
    used as modified by the file-mode creation mask.

    Appropriate permissions are required for file creation or overwriting.

    Symbolic links are always followed unless the -R flag is set, in which
    case symbolic links are not followed, by default.  The -H or -L flags (in
    conjunction with the -R flag) cause symbolic links to be followed as
    described above.  The -H, -L, and -P options are ignored unless the -R
    option is specified.  In addition, these options override each other and
    the command's actions are determined by the last one specified.

  DDIIAAGGNNOOSSTTIICCSS

    The ccpp(1) utility exits 0 on success, >0 if an error occurred.

  SSEEEE AALLSSOO

    _m_v(1)

    _u_m_a_s_k(1)

