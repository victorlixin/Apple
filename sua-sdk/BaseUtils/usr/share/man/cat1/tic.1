tic(1)                                                           tic(1)

  ttiicc

  NNAAMMEE

    tic - the terminfo entry-description compiler

  SSYYNNOOPPSSIISS

    tic [[-cCINpru]] [[-v[[n]]]] file

  DDEESSCCRRIIPPTTIIOONN

    The command ttiicc(1) translates a tteerrmmiinnffoo file from source format into
    compiled format. The compiled format is necessary for use with the library
    routines in _n_c_u_r_s_e_s(3).

    The results are normally placed in the system terminfo directory TTEERRMMIINNFFOO.
    There are two ways to change this behavior. First, you can override the
    system default by setting the variable TERMINFO in your shell environment
    to a valid (existing) directory name. Second, if ttiicc(1) cannot get access
    to TERMINFO or your TTEERRMMIINNFFOO directory, it looks for the directory $$HHOOMMEE//
    ..tteerrmmiinnffoo; if that directory exists, the entry is placed there.

    Libraries that read terminfo entries are expected to check for a TTEERRMMIINNFFOO
    directory first, look at $$HHOOMMEE//..tteerrmmiinnffoo if TERMINFO is not set, and
    finally look in TERMINFO.

    The ttiicc(1) utility takes the following options:

    --cc
        Only check file for errors, including syntax problems and bad use
        links. If you specify --CC (--II) with this option, the code will print
        warnings about entries which, after use resolution, are more than 1023
        (4096) bytes long. Due to a fixed buffer length in older termcap
        libraries (and a documented limit in terminfo), these entries can
        cause core dumps.
    --vvn
        Write verbose output to standard error showing the progress of ttiicc(1).
        The n is optional and specifies the level of detail; it can have a
        value from 1 through 10 inclusive, with 1 being the least detail and
        10 the most. If n is not specified, it defaults to 1.
        The debug flag levels are as follows:

        11
            Names of files created and linked.

        22
            Information related to the uussee facility.

        33
            Statistics from the hashing algorithm.

        55
            String-table memory allocations.

        77
            Entries into the string-table.

        88
            List of tokens encountered by scanner.

        99
            All values computed in construction of the hash table.

    --CC
        Force source translation to termcap format. Capabilities that are not
        translatable are left in the entry under their terminfo names but
        commented out with two preceding dots.

    --II
        Force source translation to terminfo format.

    --NN
        Disable smart defaults. Usually, when translating from termcap to
        terminfo, the compiler makes some assumptions about the defaults of
        string capabilities rreesseett11__ssttrriinngg, ccaarrrriiaaggee__rreettuurrnn, ccuurrssoorr__lleefftt,
        ccuurrssoorr__ddoowwnn, ssccrroollll__ffoorrwwaarrdd, ttaabb, nneewwlliinnee, kkeeyy__bbaacckkssppaaccee, kkeeyy__lleefftt,
        and kkeeyy__ddoowwnn, then attempts to use obsolete termcap capabilities to
        deduce correct values. It also normally suppresses output of obsolete
        termcap capabilities, such as bbss. This option forces a more literal
        translation that also preserves the obsolete capabilities.

    --rr
        Force entry resolution (so there are no remaining tc capabilities)
        even when doing translation to termcap format. You might need this if
        you are preparing a termcap file for a termcap library (such as GNU
        termcap up to version 1.3 or Berkeley Software Distribution (BSD)
        termcap up to 4.3BSD) that does not handle multiple tc capabilities
        per entry.
    --RRsubset
        Restrict output to a given subset. This option is for use with archaic
        versions of terminfo like those on SVr1, Ultrix, or HP/UX that do not
        support the full set of SVR4/XSI Curses terminfo; and outright broken
        ports like AIX that have their own extensions incompatible with SVr4/
        XSI. Available subsets are "SVr1", "Ultrix", "HP", and "AIX"; see
        tteerrmmiinnffoo(5) for details.

    The file contains one or more tteerrmmiinnffoo terminal descriptions in source
    format. Each description in the file describes the capabilities of a
    particular terminal.

    All but one of the capabilities recognized by ttiicc(1) are documented in
    tteerrmmiinnffoo(5). The uussee capability is documented here.

    When a terminal entry being compiled contains a field of the form

    use=entry_name

    ttiicc(1) reads in the binary from TTEERRMMIINNFFOO to complete the entry. (Entries
    created from file will be used first. If the environment variable TERMINFO
    is set, that directory is searched instead of TTEERRMMIINNFFOO.) The ttiicc(1)
    utility makes the current entry a duplicate of the capabilities for
    entry_name except for any capabilities explicitly defined for the current
    entry.

    When an entry, such as entry_name_1, contains a uussee==entry_name_2 field,
    any cancelled capabilities in entry_name_2 must also appear in
    entry_name_1 before uussee== for these capabilities to be canceled in
    entry_name_1

    If the environment variable TERMINFO is set, the compiled results are
    placed there instead of TTEERRMMIINNFFOO.

    Total compiled entries cannot exceed 4096 bytes. The name field cannot
    exceed 128 bytes. Terminal names exceeding 14 characters will be truncated
    to 14 characters and a warning message will be printed.

  CCOOMMPPAATTIIBBIILLIITTYY

    There is some evidence that historic ttiicc(1) implementations treated
    description fields that contained no white space as additional aliases or
    short names. This ttiicc(1) does not do that, but it warns when description
    fields might be treated that way, and checks them for dangerous
    characters.

  EEXXTTEENNSSIIOONNSS

    Unlike the stock SVr4 ttiicc(1) command, this implementation can actually
    compile termcap sources. In fact, entries in terminfo and termcap syntax
    can be mixed in a single source file. See tteerrmmiinnffoo(5) for the list of
    termcap names taken to be equivalent to terminfo names.

    The SVr4 manual pages are not clear on the resolution rules for uussee
    capabilities. This implementation of ttiicc(1) will find use targets anywhere
    in the source file, or anywhere in the file tree routed at TTEERRMMIINNFFOO (if
    TERMINFO is defined), or in the user's $$HHOOMMEE//..tteerrmmiinnffoo directory (if it
    exists), or (finally) anywhere in the system's file tree of compiled
    entries.

    The error messages from this ttiicc(1) have the same format as GNU C error
    messages, and can be parsed by GNU Emacs's compile facility.

  FFIILLEESS

    The ttiicc(1) utility makes use of the following files:

    TTEERRMMIINNFFOO//??//**
        Compiled terminal description database.

  SSEEEE AALLSSOO

    _i_n_f_o_c_m_p(1)

    _t_o_e(1)

    _c_u_r_s_e_s(3)

    _t_e_r_m_i_n_f_o(5)

