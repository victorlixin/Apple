xargs(1)                                                       xargs(1)

  xxaarrggss

  NNAAMMEE

    xargs - construct argument list(s) and execute utility

  SSYYNNOOPPSSIISS

     xxaarrggss [--00oopptt] [--ee _[_e_o_f_s_t_r_]] [--EE _e_o_f_s_t_r] [--ii _[_r_e_p_l_s_t_r_] | --II _r_e_p_l_s_t_r
           [--RR _r_e_p_l_a_c_e_m_e_n_t_s]] [--JJ _r_e_p_l_s_t_r] [--ll _[_n_u_m_b_e_r_]] [--LL _n_u_m_b_e_r] [--nn
           _n_u_m_b_e_r [--xx]] [--PP _m_a_x_j_o_b_s] [--ss _s_i_z_e] [_u_t_i_l_i_t_y [_a_r_g_u_m_e_n_t _._._.]]

  DDEESSCCRRIIPPTTIIOONN

    The xxaarrggss(1) utility reads arguments from standard input and then runs the
    specified utility with those arguments (and any specified on the command
    line). Arguments are delimited by spaces, tabs, newlines, and end-of-file.
    The xxaarrggss(1) utility is often used for splitting very long argument lists
    into smaller chunks.

    The utility and any arguments specified on the command line are given to
    the utility upon each invocation, followed by some number of the arguments
    read from standard input. The utility is repeatedly executed until
    standard input is exhausted.

    Spaces, tabs and newlines can be embedded in arguments using single quotes
    ('). Single quotes escape all non-single quote characters, excluding
    newlines, up to the matching single quote. Double quotes escape all non-
    double quote characters, excluding newlines, up to the matching double
    quote. Any single character, including newlines, can be escaped by a
    backslash.

    The options are as follows:

    --00
        Change xxaarrggss to expect NUL (`\0') characters as separators,
        instead of spaces and newlines.  This is expected to be used in
        concert with the --pprriinntt00 function in find(1).

    --ee
        eofstr is taken as the logical end-of-file (EOF) string. Underscore
        (_) is assumed for the logical EOF string if neither --ee nor --EE is
        specified. The value --ee with no specified eofstr turns off the logical
        EOF string capability (underscore is taken literally). The xxaarrggss
        utility reads the standard input until it encounters end-of-file or
        the logical EOF string.

    --EE
        Specifies a logical end-of-file string to replace the default
        underscore. The xxaarrggss utility reads standard input until it encounters
        end-of-file or the logical EOF string.

    --II
        Insert mode. The utility is run for each line from the standard input,
        taking the entire line as a single argument and inserting it into
        initial-arguments for each occurrence of replstr. A maximum of five
        arguments in initial-arguments can each contain one or more instances
        of replstr. Blanks and tabs at the beginning of each line are
        discarded. Constructed arguments cannot exceed 255 bytes. The --
        II option forces the --xx option. The --II and --ii options are mutually
        exclusive; the last one specified takes effect.

    --ii
        This option is equivalent to --II [replstr]. The string{} is assumed for
        replstr if the option argument is omitted.

    --JJ _r_e_p_l_s_t_r
        If this option is specified, xxaarrggss will use the data read from
        standard input to replace the first occurrence of _r_e_p_l_s_t_r instead
        of appending that data after all other arguments.  This option
        will not effect how many arguments will be read from input (--nn),
        or the size of the command(s) xxaarrggss will generate (--ss).  The
        option just moves where those arectories which start with an uppercase
        letter in the current directory to _d_e_s_t_d_i_r:

                  /bin/ls -1d [A-Z]* | xargs -J % cp -rp % destdir

    --LL
        The utility is run for each nonempty number lines of arguments from
        the standard input. The last invocation of utility will contain fewer
        lines of arguments than specified if fewer than number remain. A line
        is considered to end with the first newline unless the last character
        of the line is a blank or a tab. A trailing blank or tab signals
        continuation through the next nonempty line. The --LL, --ll, and --
        nn options are mutually exclusive; the last one specified takes effect.

    --ll (Lowercase L)
        This option is equivalent to --LL number. If number is omitted, 11 (one)
        is assumed. The --ll option forces the --xx option.

    --nn
        Runs utility using as many standard input arguments as possible, up to
        a maximum of number (a positive decimal integer) arguments. Fewer
        arguments are used if either of the following conditions exist:
        *     The accumulated command-line length exceeds the size specified
              by the --ss option (or, if there is no --ss option,
              {LINE_MAX(255)}).
        *     The last iteration has fewer than number, but not zero, operands
              remaining.

    --oo
        Reopen stdin as _/_d_e_v_/_t_t_y in the child process before executing
        the command.  This is useful if you want xxaarrggss to run an interac-
        tive application.

    --PP _m_a_x_p_r_o_c_s
        Parallel mode: run at most _m_a_x_p_r_o_c_s invocations of _u_t_i_l_i_t_y at
        once.

    --pp
        (Prompt mode) Asks the user whether to run utility at each invocation.
        Trace mode (--tt option) is turned on to print the utility to be run,
        followed by a prompt to the standard error. A reply of yy (optionally
        followed by anything) runs utility. Anything else, including just a
        carriage return, skips that particular invocation of utility.

    --rr
        Do not run the command if there are no arguments.  Normally the
        command is executed at least once even if there are no arguments.

    --RR _r_e_p_l_a_c_e_m_e_n_t_s
        Specify the maximum number of arguments that --II will do replace-
        ment in.  If _r_e_p_l_a_c_e_m_e_n_t_s is negative, the number of arguments in
        which to replace is unbounded.

    --ss
        Invokes utility using as many standard input arguments as possible,
        yielding a command-line length less than size (a positive decimal
        integer) bytes. Fewer arguments will be used if any of the following
        conditions exist:
        *     The total number of arguments exceeds that specified by the --
              nn option.
        *     The total number of lines exceeds that specified by the --
              LL option.
        *     End-of-file is encountered on the standard input before size
              bytes are accumulated.

    --tt
        (Trace mode) The utility and each constructed argument list are echoed
        to standard error just prior to their execution.

    --xx
        Causes xxaarrggss to terminate if any argument list would be greater than
        size characters. The --ii, --II, --ll, and --LL options force the --xx option.
        When none of the options --ii, --II, --ll, --LL, or --nn are specified, the
        total length of all arguments must be within the size limit.

    If no utility is specified, xxaarrggss(1) executes eecchhoo(1).

    Undefined behavior might occur if utility reads from the standard input.

    The xxaarrggss(1) utility exits immediately (without processing any further
    input) if a command line cannot be assembled, utility cannot be invoked,
    an invocation of the utility is terminated by a signal, or an invocation
    of the utility exits with a value of 255.

  DDIIAAGGNNOOSSTTIICCSS

    The xxaarrggss(1) utility exits with a value of 0 if no error occurs. If
    utility cannot be invoked. When an error occurs one of the following
    exit values is returned:
     123     One or more invocations of utility returned a nonzero exit status.
     124     The utility exited with a 255 exit status.
     125     The utility was killed or stopped by a signal.
     126     The utility was found but could not be executed.
     127     The utility could not be found.
     1       Some other error occurred.

  EEXXAAMMPPLLEESS

    Run the awk script ~~//lliibb//ccoonnvveerrtt..aawwkk on all files in the current directory
    (assuming there are too many to use * as the file specifier):

    ls | xargs awk -f ~/lib/convert.awk

    Remove all files that have not been modified in at least four weeks:

    find . -type f -mtime +28 -print | xargs rm

  SSEEEE AALLSSOO

    _e_c_h_o(1)

    _f_i_n_d(1)

