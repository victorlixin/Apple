atq(1)                                                           atq(1)

  aatt

  NNAAMMEE

    at, atq, atrm - run commands at a later time

  SSYYNNOOPPSSIISS

    at [[-mlbVv]] [[-f file]] [[-q queuename]] timespec
    at [[-V]] -c at_job_id ......
    at [[-V]] -l [[ -q queuename]]
    at [[-V]] -d at_job_id ......

    atq [[-Vv]] [[-q queuename]]
    atrm [[-V]] at_job_id ......

  DDEESSCCRRIIPPTTIIOONN

    The aatt(1) utility submits a shell script or set of commands to be executed
    at the time specified by timespec, which must specify time as described
    later in this topic. Commands can be submitted interactively by reading
    them from standard input, or the --ff option can be used to submit a file
    that contains a set of commands. These commands are stored in a file to be
    executed at the prescribed time. It is the ccrroonn(1) daemon that checks
    these files and executes them at the appropriate time. Note that for the
    ccrroonn(1) daemon to successfully execute these commands for the user, the
    user must have previously registered the user's password using ccrroonnttaabb --pp.
    Each scheduled job, called an at-job, has a numeric identifier, the
    at_job_id, which can be used with aatt(1) to change the job later.

    When you submit an at-job using the first form, aatt(1) writes the scheduled
    time and the at_job_id to standard output.

    The second form of the command (with --cc) sends the contents of the
    specified job files to standard output.

    The third form of the command (with --ll) list all queued jobs.

    The fourth form of the command (with --dd) is used to remove the specified
    job from the schedule.

  OOppttiioonnss

    --bb
        An alias for _bb_aa_tt_cc_hh(1).
    --cc at_job_id ...
        Copy one or more job files specified by at_job_id to standard output.

    --dd
        Delete one or more specified jobs from the schedule.
    --ff file
        Take the list of commands to be run from file instead of standard
        output.

    --LL
        List your jobs in a long format, with column titles.

    --ll
        List your jobs. If no at_job_id is specified, list all jobs for the
        current user; otherwise list information about the specified job or
        jobs. If --qq is also given, list jobs in the specified queue.

    --mm
        Send the user an email notification that the job was run, by
        electronic mail. The mail includes the standard output and standard
        error of the job (unless it was redirected elsewhere). If the job
        produces standard output or standard error, it is mailed to the user
        whether or not the --mm option is given, unless it is redirected
        elsewhere.
    --qq queuename
        Schedule the job in the specified queue. The queuename can be either aa
        [the default for jobs scheduled with aatt(1)] or bb [for batch jobs
        scheduled with bbaattcchh(1)].

    --VV
        Print version number of program.

    --vv
        Validate time specifications.

    When the job runs, it runs in a separate shell (//bbiinn//sshh). //bbiinn//sshh and the
    environment variables, current working directory, and other execution-time
    attributes are the same as when the aatt(1) command was given.

    You can force the job to run in a different shell by explicitly stating
    the name of the shell. For example, you can invoke aatt(1) in the Korn shell
    to run myscript using the C shell:

    at now <<eof
    csh -c myscript
    eof

    Since the shell inherits your PATH, you need not specify a full path name
    (unless the command is not found in your PATH).

    The command aattqq(1) is equivalent to aatt --LL. The command aattrrmm(1) is
    equivalent to aatt --dd.

    Mail to the user is sent using the _mm_aa_ii_ll_xx(1) utility. You can change the
    mail delivery agent by changing the mail delivery agent for mmaaiillxx(1) (see
    the mmaaiillxx(1) reference page).

  TThhee ttiimmee ssppeecciiffiiccaattiioonn

    A time specification includes a time, an optional timezone, and an
    optional date:

    time [timezone] [date]

    The time can be given numerically, or as one of the following words:
    mmiiddnniigghhtt, nnoooonn, tteeaattiimmee (4 P.M.), or nnooww.

    You can specify the time numerically using a one-, two-, or four-digit
    number; a one- or two-digit number specifies the hours.

    *     h
    *     hh
    *     hhmm
    *     hh:mm

    Unless you put AAMM or PPMM after the time, time is based on a 24-hour clock.
    The time 1111 is 11:00 AM. The times 1111 PPMM 1111::0000 PPMM 2233 22330000 and 2233::0000 are
    all 11:00 PM.

    After you have specified the time, you can specify a timezone name. The
    timezone string is case insensitive. If no timezone is specified, the
    timezone use is the one specified by the TZ environment variable. The only
    value currently accepted for the timezone is the string uuttcc (which stands
    for Universal Time Coordinate).

    A date is a month name followed by a day number (optionally followed by a
    comma and a year number), or a day of the week, or one of the words ttooddaayy
    or ttoommoorrrrooww. To get a list of valid month names, use the command:

    llooccaallee --cckk mmoonn aabbmmoonn

    To get a list of valid weekday names, use the command:

    llooccaallee --cckk ddaayy aabbddaayy

    A time or time and date can also have an increment after it. For example,
    you could say:
    nnoooonn++55 mmiinnuutteess
    or
    mmiiddnniigghhtt AAuugg 55 ++ 11 hhoouurr

    An increment is always ++, a number, and one of the following units:

    mmiinnuuttee, mmiinnuutteess, hhoouurr, hhoouurrss, ddaayy, ddaayyss, wweeeekk, wweeeekkss, mmoonntthh, mmoonntthhss, yyeeaarr,
    or yyeeaarrss.

  DDIIAAGGNNOOSSTTIICCSS

    After successfully queuing, listing, or removing a job or jobs, aatt(1)
    returns 0. If an error occurred, aatt(1) returns >0.

  EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS

    The aatt(1) command uses the following environment variables, if set.

    SHELL
        Specifies the name of the command interpreter used to run the command.
        Defaults to sshh(1).

    TZ
        The value of the timezone environment variable determines the timezone
        used.

  FFIILLEESS

    The aatt(1) command uses the following files:

    //vvaarr//ssppooooll//ccrroonn//aattjjoobbss
        The aatt(1) job directory, containing jobs to be run.

  NNOOTTEESS

    Previous implementations of aatt(1) on Interix or Subsystem for UNIX-based Applications used a program called aattrruunn
    as an interface between aatt(1) and the system scheduler ccrroonn(1). This
    interface is no longer needed, and has been removed. If you have ccrroonnttaabb
    files that contain an entry for aattrruunn, remove that entry.

    By default, Subsystem for UNIX-based Applications does not execute files with the set-user-ID (setuid)
    or set-group-ID (setgid) mode bit set for security reasons. If an attempt
    is made to execute such a file, the ENOSETUID error is returned. For more
    information and and instructions for enabling execution of files with
    these mode bits set, see _T_h_e_ _s_u_p_e_r_u_s_e_r_ _a_c_c_o_u_n_t_ _a_n_d_ _a_p_p_r_o_p_r_i_a_t_e_ _p_r_i_v_i_l_e_g_e_s
    in Subsystem for UNIX-based Applications Help.

  SSEEEE AALLSSOO

    _b_a_t_c_h(1)

    _c_r_o_n(1)

    _c_r_o_n_t_a_b(1)

    _l_o_c_a_l_e(1)

