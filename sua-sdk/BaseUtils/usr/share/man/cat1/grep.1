grep(1)                                                                grep(1)

NNAAMMEE
     ggrreepp, eeggrreepp, ffggrreepp, zzggrreepp, zzeeggrreepp, zzffggrreepp - file pattern searcher

SSYYNNOOPPSSIISS
     ggrreepp [--aabbccEEFFGGHHhhIIiiLLllnnooPPqqRRrrSSssUUvvwwxxZZ] [--AA _n_u_m] [--BB _n_u_m] [--CC[_n_u_m]]
          [--ee _p_a_t_t_e_r_n] [--ff _f_i_l_e] [----bbiinnaarryy--ffiilleess=_v_a_l_u_e] [----ccoonntteexxtt[=_n_u_m]]
          [----lliinnee--bbuuffffeerreedd] [_p_a_t_t_e_r_n] [_f_i_l_e _._._.]

DDEESSCCRRIIPPTTIIOONN
     The ggrreepp utility searches any given input files, selecting lines that
     match one or more patterns.  By default, a pattern matches an input line
     if the regular expression (RE) in the pattern matches the input line
     without its trailing newline.  An empty expression matches every line.
     Each input line that matches at least one of the patterns is written to
     the standard output.

     ggrreepp is used for simple patterns and basic regular expressions (BREs);
     eeggrreepp can handle extended regular expressions (EREs).  See re_format(5)
     for more information on regular expressions.  ffggrreepp is quicker than both
     ggrreepp and eeggrreepp, but can only handle fixed patterns (i.e. it does not
     interpret regular expressions).  Patterns may consist of one or more
     lines, allowing any of the pattern lines to match a portion of the input.

     zzggrreepp, zzeeggrreepp, and zzffggrreepp act like ggrreepp, eeggrreepp, and ffggrreepp, respectively,
     but accept input files compressed with the compress(1) or gzip(1) com-
     pression utilities.

     The following options are available:

     --AA _n_u_m, ----aafftteerr--ccoonntteexxtt==nnuumm
             Print _n_u_m lines of trailing context after each match.  See also
             the --BB and --CC options.

     --aa, ----tteexxtt
             Treat all files as ASCII text.  Normally ggrreepp will simply print
             ``Binary file ... matches'' if files contain binary characters.
             Use of this option forces ggrreepp to output lines matching the spec-
             ified pattern.

     --BB _n_u_m, ----bbeeffoorree--ccoonntteexxtt==nnuumm
             Print _n_u_m lines of leading context before each match.  See also
             the --AA and --CC options.

     --bb      The offset in bytes of a matched pattern is displayed in front of
             the respective matched line.

     --CC[_n_u_m], ----ccoonntteexxtt=_n_u_m
             Print _n_u_m lines of leading and trailing context surrounding each
             match.  The default is 2 and is equivalent to --AA _2 --BB _2.  Note:
             no whitespace may be given between the option and its argument.

     --cc, ----ccoouunntt
             Only a count of selected lines is written to standard output.

     --EE, ------eexxtteennddeedd--rreeggeexxpp
             Interpret _p_a_t_t_e_r_n as an extended regular expression (i.e. force
             ggrreepp to behave as eeggrreepp).

     --ee _p_a_t_t_e_r_n, ----rreeggeexxpp==ppaatttteerrnn
             Specify a pattern used during the search of the input: an input
             line is selected if it matches any of the specified patterns.
             This option is most useful when multiple --ee options are used to
             specify multiple patterns, or when a pattern begins with a dash
             (`-').

     --FF, ----ffiixxeedd--ssttrriinnggss
             Interpret _p_a_t_t_e_r_n as a set of fixed strings (i.e. force ggrreepp to
             behave as ffggrreepp).

     --ff _f_i_l_e, ----ffiillee==ffiillee
             Read one or more newline separated patterns from _f_i_l_e.  Newlines
             are not considered part of a pattern.

     --GG, ----bbaassiicc--rreeggeexxpp
             Interpret _p_a_t_t_e_r_n as a basic regular expression (i.e. force ggrreepp
             to behave as traditional ggrreepp).

     --HH      If --RR is specified, follow symbolic links only if they were
             explicitly listed on the command line.  The default is not to
             follow symbolic links that lead to files.

     --hh, ----nnoo--ffiilleennaammee
             Never print filename headers (i.e. filenames) with output lines.

     --II      Ignore binary files.

     --ii, ----iiggnnoorree--ccaassee
             Perform case insensitive matching.  By default, ggrreepp is case sen-
             sitive.

     --LL, ------ffiilleess--wwiitthhoouutt--mmaattcchh
             Only the names of files not containing selected lines are written
             to standard output.  Pathnames are listed once per file searched.
             If the standard input is searched, the string ``(standard
             input)'' is written.

     --ll, ------ffiilleess--wwiitthh--mmaattcchheess
             Only the names of files containing selected lines are written to
             standard output.  ggrreepp will only search a file until a match has
             been found, making searches potentially less expensive.  Path-
             names are listed once per file searched.  If the standard input
             is searched, the string ``(standard input)'' is written.

     --nn, ----lliinnee--nnuummbbeerr
             Each output line is preceded by its relative line number in the
             file, starting at line 1.  The line number counter is reset for
             each file processed.  This option is ignored if --cc, --LL, --ll, or --qq
             is specified.

     --oo      Always print filename headers with output lines.

     --PP      If --RR is specified, no symbolic links are followed that
             lead to files.  This is the default.

     --qq, ----qquuiieett, ----ssiilleenntt
             Quiet mode: suppress normal output.  ggrreepp will only search a file
             until a match has been found, making searches potentially less
             expensive.

     --RR, ----rreeccuurrssiivvee
             Recursively search subdirectories listed. To include files in the
             current directory specify you may specify the current directory
             with a ".".  The following options can be validly used only with
             recursion.
             ----iinncclluuddee==ppaatttteerrnn
                      When searching recursively include only files matching
                      pattern.
             ----iinnddeexx==ppaatttteerrnn
                      Same as --include=pattern.
             ----eexxcclluuddee==ppaatttteerrnn
                      When searching recursively exclude files matching pat-
                      tern.
             ----ttyyppee   When searching recursively include files of the follow-
                      ing types, in a comma separated list, only.
                            aaccee      Display files that have additional ACE's
                                     beyond POSIX.
                            aallll      Display all file types.
                            bbllkk      Display block special files.
                            cchhaarr     Display character special files.
                            ddiirr      Display directories.
                            ffiiffoo     Display FIFO files.
                            hhaarrdd     Display hard linked files.
                            rr        Display readable files.
                            rreegg      Display regular files.
                            sseett      Display setuid, setgid and setvtx files.
                            ssoocckk     Display socket files.
                            ssyymm      Display symbolic linked files.
                            uunnkknnoowwnn  Display files of an unknown type (not
                                     FIFO, regular, block special, socket,
                                     symbolic, character special or direc-
                                     tory).
                            ww        Display writable files.
                            xx        Display executable files.

     --rr      Same as -R.

     --SS      If --RR is specified, all symbolic links are followed.  The default
             is not to follow symbolic links that lead to files.

     --ss, ----nnoo--mmeessssaaggeess
             Silent mode.  Nonexistent and unreadable files are ignored (i.e.
             their error messages are suppressed).

     --UU, ----bbiinnaarryy
             Search binary files, but do not attempt to print them.

     --vv, ----iinnvveerrtt--mmaattcchh
             Selected lines are those _n_o_t matching any of the specified pat-
             terns.

     --ww, ----wwoorrdd--rreeggeexxpp
             The expression is searched for as a word (as if surrounded by
             `[[:<:]]' and `[[:>:]]'; see re_format(7)).

     --xx, ------lliinnee--rreeggeexxpp
             Only input lines selected against an entire fixed string or regu-
             lar expression are considered to be matching lines.

     --ZZ      Force ggrreepp to behave as zzggrreepp.

     ----bbiinnaarryy--ffiilleess=_v_a_l_u_e
             Controls searching and printing of binary files.  Options are
             _b_i_n_a_r_y, the default: search binary files but do not print them;
             _w_i_t_h_o_u_t_-_m_a_t_c_h: do not search binary files; and _t_e_x_t: treat all
             files as text.

     ----ccoonntteexxtt[=_n_u_m]
             Print _n_u_m lines of leading and trailing context.  The default is
             2.

     ----lliinnee--bbuuffffeerreedd
             Force output to be line buffered.  By default, output is line
             buffered when standard output is a terminal and block buffered
             otherwise.

     If no file arguments are specified, the standard input is used.

  EEXXTTEENNDDEEDD RREEGGUULLAARR EEXXPPRREESSSSIIOONNSS

    The following characters are interpreted by eeggrreepp(1):

    $$
        Align the match from the end of the line.

    ^^
        Align the match from the beginning of the line.

    ||
        Add another pattern (see example below).

    ??
        Match 1 or fewer sequential repetitions of the pattern.

    ++
        Match 1 or more sequential repetitions of the pattern.

    **
        Match 0 or more sequential repetitions of the pattern.

    []
        Match any single character or range of characters enclosed in the
        brackets.

    \\
        Escape special characters that have meaning for extended regular
        expressions, the set of {$,.,^,[,],|,?,+,*,(,)}.

RREETTUURRNN VVAALLUUEESS
     The ggrreepp utility exits with one of the following values:

     0     One or more lines were selected.
     1     No lines were selected.
     >1    An error occurred.

EEXXAAMMPPLLEESS
     To find all occurrences of the word `patricia' in a file:

           $ grep 'patricia' myfile

     To find all occurrences of the pattern `.Pp' at the beginning of a line:

           $ grep '^\.Pp' myfile

     The apostrophes ensure the entire expression is evaluated by ggrreepp instead
     of by the user's shell.  The caret `^' matches the null string at the
     beginning of a line, and the `\' escapes the `.', which would otherwise
     match any character.

     To find all lines in a file which do not contain the words `foo' or
     `bar':

           $ grep -v -e 'foo' -e 'bar' myfile

     A simple example of an extended regular expression:

           $ egrep '19|20|25' calendar

     Peruses the file `calendar' looking for either 19, 20, or 25.

     A simple example of the recursive option is:

           $ grep -R hero.

     This search for the pattern 'hero' in all files in the current directory
     (.)  and all files recursively found in all sub-directories.

SSEEEE AALLSSOO
     ed(1), ex(1), gzip(1), sed(1), re_format(5)

NNOOTTEESS
     The flags [--AAaaBBbbCCGGHHhhIILLooPPRRSSUUVVwwZZ] are extensions to that specification.

