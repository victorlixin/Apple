pack(1)                                                         pack(1)

  ppaacckk

  NNAAMMEE

    pack - compress files

  SSYYNNOOPPSSIISS

    pack [[-f]] [[-]] file ...

  DDEESSCCRRIIPPTTIIOONN

    The ppaacckk(1) utility compresses one or more specified files, and stores the
    compressed versions in files identified by the name file..zz. The specified
    file can include the ..zz suffix. If the calling process has the appropriate
    privileges, the original file is removed. To restore a packed file, use
    uunnppaacckk(1) or ppccaatt(1).

    For each packed file, ppaacckk(1) writes to standard output one of the lines:

    pack: file: percent% Compression
    or
    pack: file: no saving - file unchanged

    where file is the file name and percent is the percent compression.

    A file will not be packed if:
    *     It appears to already be packed.
    *     It has links.
    *     It is a directory.
    *     It cannot be opened.
    *     It is empty.
    *     The packed file will not be smaller than the original.
    *     Adding the ..zz extension would make the file name more than
          {NAME_MAX} bytes long.
    *     The file file..zz already exists.
    *     The ..zz file cannot be created.
    *     An input/output (I/O) error occurred during processor.

    The ppaacckk(1) utility takes the following options:

    --ff
        Force packing of files.

    --
        If one of the operands is --, ppaacckk(1) writes to standard output the
        number of times each byte is used, its relative frequency, and the
        code for that byte. Subsequent uses of -- instead of file on the
        command line turn this feature off and on.

  DDIIAAGGNNOOSSTTIICCSS

    The ppaacckk(1) utility exits with a status of 0 for success and >0 if an
    error occurred.

  NNOOTTEESS

    Traditional implementations of ppaacckk(1) use Huffman encoding. This
    implementation is a link to the ggzziipp(1) program, and uses the compression
    algorithms available to ggzziipp(1).

  SSEEEE AALLSSOO

    _p_c_a_t(1)

    _u_n_p_a_c_k(1)

