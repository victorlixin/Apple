h2ph(1)                                                         h2ph(1)

  hh22pphh

  NNAAMMEE

    h2ph - convert .h C header files to .ph Perl header files

  SSYYNNOOPPSSIISS

    h2ph [[-d destination_dir]] [[-r || -a]] [[-l]] [[header_file......]]

  DDEESSCCRRIIPPTTIIOONN

    The hh22pphh(1) utility converts C header files to the corresponding Perl
    header-file format. It is most easily run with the current directory set
    to //uussrr//iinncclluuddee. For example:

    cd /usr/include; h2ph * sys/*

    or

    cd /usr/include; h2ph -r -l .

    The output files are placed in the hierarchy rooted at Perl's
    architecture-dependent library directory. You can specify a different
    hierarchy with a --dd switch.

    If run with no arguments, filters standard input to standard output.

  OOPPTTIIOONNSS
    --dddestination_dir
        Put the resulting .ph files beneath destination_dir, instead of
        beneath the default Perl library location
        (`$Config{'installsitsearch'}').

    --rr
        Run recursively; if any header_file is a directory, then run hh22pphh on
        all files in that directory (and its subdirectories, and so forth).
        The --rr and --aa options are mutually exclusive.

    --aa
        Run automatically; convert each header_file, as well as any .h files
        that the header_file includes. This option will search for .h files in
        all directories which your C compiler ordinarily uses. The --aa and --
        rr options are mutually exclusive.

    --ll
        Symbolic links will be replicated in the destination directory. If --
        ll is not specified, links are skipped over.

    --hh
        Put hints in the .ph files that will help in locating problems with
        hh22pphh. In those cases when you require a .ph file containing syntax
        errors, instead of the cryptic
        [[ error_condition ]] aatt ((eval mmm)) lliinnee nnn
        you will see the slightly more helpful
        [[ error_condition ]] aatt filename..pphh lliinnee nnn
        However, the .ph files almost double in size when they are built using
        --hh.

    --DD
        Include the code from the .h file as a comment in the .ph file. This
        is primarily used for debugging hh22pphh.

    --QQ
        Quiet mode; do not print out the names of the files being converted.

  EENNVVIIRROONNMMEENNTT

    No environment variables are used.

  AAUUTTHHOORR

    Larry Wall

  DDIIAAGGNNOOSSTTIICCSS

    The hh22pphh utility produces the usual warnings if it cannot read or write
    the files involved.

  BBUUGGSS

    The hh22pphh utility does not construct the %%ssiizzeeooff array for you.

    It does not handle all C constructs, but it does attempt to isolate
    definitions inside eevvaall statements so that you can get at the definitions
    that it can translate.

    It is only intended as a rough tool. You may need to modify the files
    produced.

    It does not run with uussee ssttrriicctt.

    You have to run this program yourself; it is not run as part of the Perl
    installation.

    It does not handle complicated expressions built like this:

    enum {
        FIRST_VALUE,
        SECOND_VALUE,
    #ifdef ABC
        THIRD_VALUE
    #endif
    };

    It might not locate all of your C compiler's internally defined symbols.

