cron(1)                                                         cron(1)

  ccrroonn

  NNAAMMEE

    cron - Subsystem for UNIX-based Applications daemon to execute scheduled commands

  SSYYNNOOPPSSIISS

    cron [[-x debugflags]] crontabfile

  DDEESSCCRRIIPPTTIIOONN

    The ccrroonn(1) daemon searches its spool directory (//vvaarr//ssppooooll//ccrroonn//ttaabbss//
    ) for _c_r_o_n_t_a_b(5) files which are named after fully qualified user names in
    the form domain++user and loads the crontab files it finds into memory. The
    ccrroonn(1) daemon also searches for //eettcc//ccrroonnttaabb which is in a different
    format (see _c_r_o_n_t_a_b(5)). The ccrroonn(1) daemon then wakes up every minute,
    examining all loaded crontab files and checking each command to see if it
    should be run in the current minute. When executing commands, any output
    is mailed to the user named in the MAILTO environment variable in the
    crontab, or to the owner of the crontab if MAILTO is not present. For ccrroonn
    to successfully execute another user's ccrroonn jobs, the user must have
    registered the user's password using ccrroonnttaabb --pp. Without this password,
    ccrroonn cannot impersonate that user and will not execute the user's crontab
    commands.

    Additionally, ccrroonn(1) checks each minute to see if its spool directory's
    modtime (or the modtime on //eettcc//ccrroonnttaabb) has changed, and if it has,
    ccrroonn(1) examines the modtime on all crontab files and reloads those which
    have changed. Thus ccrroonn(1) need not be restarted whenever a crontab file
    is modified. Note that the _cc_rr_oo_nn_tt_aa_bb(1) command updates the modtime of the
    spool directory whenever it changes a crontab file.

    Special considerations exist when the clock is changed by less than 3
    hours; for example, at the beginning and end of Daylight Saving Time. If
    the time has moved forward, those jobs which would have run in the time
    that was skipped will be run soon after the change. Conversely, if the
    time has moved backward by less than 3 hours, those jobs that fall into
    the repeated time will not be run.

    Only jobs that run at a particular time (not specified as @@hhoouurrllyy, nor
    with ** in the hour or minute specifier) are affected. Jobs which are
    specified with wildcards are run based on the new time immediately.

    Clock changes of more than 3 hours are considered to be corrections to the
    clock, and the new time is used immediately.

    In addition to jobs specified in crontab files, ccrroonn(1) also looks for
    _aa_tt(1) and _bb_aa_tt_cc_hh(1) jobs that are queued in //vvaarr//ssppooooll//ccrroonn//aattjjoobbss and
    executes them at the appropriate time.

    The crontab file is not required to exist, and can be deleted and
    recreated without causing ccrroonn(1) to exit. A missing crontab file is
    equivalent to an empty crontab file. The syntax of the crontab file is
    described in _cc_rr_oo_nn_tt_aa_bb(5).

    The ccrroonn(1) program writes progress and error messages to stderr.
    If the --xx option is supplied, then debug messages are
    also written, as specified by the debugflags argument. The debugflag
    argument is a comma separated list of keywords, each of which enables a
    different set of debug messages. The following keywords are recognized:

    ext   sch   proc  pars  load  misc  test  bit   mail

    Several environment variables are set up automatically by the ccrroonn(1)
    daemon. SUA_ROOT is set to the directory in which Subsystem for UNIX-based Applications is
    installed. SYSTEMROOT is the path name (in Windows syntax) of the
    directory in which Windows is installed; it is used by some Win32
    programs. TZ is the time zone; it is used by ddaattee(1) and a few other
    Subsystem for UNIX-based Applications utilities. SHELL is set to /bin/sh. PATH is set to /bin. LOGNAME
    and HOME are set from the Windows user database. All of these variables
    may be overridden by settings in the crontab, except for LOGNAME.

    In addition to LOGNAME, HOME, and SHELL, ccrroonn(1) will look at MAILTO if it
    has any reason to send mail as a result of running commands in the
    crontab. If MAILTO is defined (and non-empty), mail is sent to the user so
    named. If MAILTO is defined but empty (MAILTO=""), no mail will be sent.
    Otherwise mail is sent to the owner of the crontab. Mail is sent using
    mmaaiillxx(1).

    The ccrroonn(1) program does not exit unless it is interrupted by a signal.

  AAPPPPLLIICCAATTIIOONN UUSSAAGGEE

    The progress and log messages that ccrroonn(1) writes to stderr are sent to
    ssyyssllooggdd(1).

  NNOOTTEESS

    By default, Subsystem for UNIX-based Applications does not execute files with the set-user-ID (setuid)
    or set-group-ID (setgid) mode bit set for security reasons. If an attempt
    is made to execute such a file, the ENOSETUID error is returned. For more
    information and and instructions for enabling execution of files with
    these mode bits set, see _T_h_e_ _s_u_p_e_r_u_s_e_r_ _a_c_c_o_u_n_t_ _a_n_d_ _a_p_p_r_o_p_r_i_a_t_e_ _p_r_i_v_i_l_e_g_e_s
    in the Subsystem for UNIX-based Applications Help.

  SSEEEE AALLSSOO

    _c_r_o_n_t_a_b(1)

    _c_r_o_n_t_a_b(5)

  AAUUTTHHOORR

    ccrroonn(1) is based on the cron daemon written by Paul Vixie <paul@vix.com>

