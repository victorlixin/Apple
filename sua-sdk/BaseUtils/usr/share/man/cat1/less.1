less(1)                                                         less(1)

  lleessss

  NNAAMMEE

    less - a pager, the opposite of more

  SSYYNNOOPPSSIISS

    less -?
    less --help
    less -V
    less --version
    less [[-[[+]]aBcCdeEfFgGiIJmMnNqQrRsSuUVwWX~#]] [[-b bufs]]
         [[-D xcolor]] [[-h lines]] [[-j line]] [[-k keyfile]]
         [[-{{oO}} logfile]] [[-p pattern]] [[-P prompt]]
         [[-t tag]] [[-T tagsfile]] [[-x tab]] [[-y lines]]
         [[-[[z]] lines]] [[-" quotechar ]] [[++[[++]]cmd]] [[--]] [[filename]]...

  DDEESSCCRRIIPPTTIIOONN

    The lleessss(1) utility is similar to mmoorree(1), but it allows backward movement
    in the file as well as forward movement. In addition, lleessss(1) does not
    have to read the entire input file before starting, so with large input
    files it starts up faster than text editors like vvii(1). The lleessss(1)
    utility uses tteerrmmccaapp (or tteerrmmiinnffoo on some systems), to run on a variety of
    terminals. There is even limited support for hardcopy terminals. (On a
    hardcopy terminal, lines that should be printed at the top of the screen
    are prefixed with a caret symbol (^^).)

    Commands are based on both mmoorree(1) and vvii(1). Commands can be preceded by
    a decimal number, called N in the descriptions below. The number is used
    by some commands, as indicated.

  CCOOMMMMAANNDDSS

    In the following descriptions, ^X means CTRL-X. ESC stands for the ESCAPE
    key; for example ESC-v means the two character sequence "ESCAPE", then
    "v".

    hh or HH
        Help: display a summary of these commands. This is a useful command to
        remember.
    SSPPAACCEE or ^^VV or ff or ^^FF
        Scroll forward N lines, default one window (see option --zz below). If N
        is more than the screen size, only the final screen is displayed. Note
        that some systems use ^V as a special literalization character.

    zz
        Like SSPPAACCEE, but if N is specified, it becomes the new window size.

    EESSCC--SSPPAACCEE
        Like SSPPAACCEE, but scrolls a full screen, even if it reaches end-of-file
        in the process.
    RREETTUURRNN or ^^NN or ee or ^^EE or jj or ^^JJ
        Scroll forward N lines, default 1. The entire N lines are displayed,
        even if N is more than the screen size.
    dd or ^^DD
        Scroll forward N lines, default one half of the screen size. If N is
        specified, it becomes the new default for subsequent dd and uu commands.
    bb or ^^BB or EESSCC--vv
        Scroll backward N lines, default one window (see option --zz below). If
        N is more than the screen size, only the final screen is displayed.

    ww
        LikeEESSCC--vv, but if N is specified, it becomes the new window size.
    yy or ^^YY or ^^PP or kk or ^^KK
        Scroll backward N lines, default 1. The entire N lines are displayed,
        even if N is more than the screen size. Note that some systems use ^Y
        as a special job-control character.
    uu or ^^UU
        Scroll backward N lines, default one half of the screen size. If N is
        specified, it becomes the new default for subsequent dd and uu commands.
    EESSCC--)) or RRIIGGHHTTAARRRROOWW
        Scroll horizontally right N characters, the default is half the screen
        width. This behaves best if you also set the --SS option (chop lines).
        Note that if you want to enter a number N, you must use ESC-), not
        RIGHTARROW, because the arrow is taken to be a line-editing command
        (see the LINE EDITING section).
    EESSCC--(( or LLEEFFTTAARRRROOWW
        Scroll horizontally left N characters, the default is half the screen
        width.
    rr or ^^RR or ^^LL
        Repaint the screen.

    RR
        Repaint the screen, discarding any buffered input. Useful if the file
        is changing while it is being viewed.

    FF
        Scroll forward, and keep trying to read when the end of file is
        reached. Normally, this command would be used when already at the end
        of the file. It is a way to monitor the tail of a file that is growing
        while it is being viewed. (The behavior is similar to the ttaaiill --
        ff command.)
    gg or << or EESSCC--<<
        Go to line N in the file, default 1 (beginning of file). (This might
        be slow if N is large.)
    GG or >> or EESSCC-->>
        Go to line N in the file, default the end of the file. (This might be
        slow if N is large, or if N is not specified and standard input,
        rather than a file, is being read.)
    pp or %%
        Go to a position N percent into the file. N should be between 0 and
        100.

    {{
        If a left curly bracket appears in the top line displayed on the
        screen, the {{ command will go to the matching right curly bracket. The
        matching right curly bracket is positioned on the bottom line of the
        screen. If there is more than one left curly bracket on the top line,
        a number N can be used to specify the N-th bracket on the line.

    }}
        If a right curly bracket appears in the bottom line displayed on the
        screen, the }} command will go to the matching left curly bracket. The
        matching left curly bracket is positioned on the top line of the
        screen. If there is more than one right curly bracket on the top line,
        a number N can be used to specify the N-th bracket on the line.

    ((
        Like {{, but applies to parentheses rather than curly brackets.

    ))
        Like }}, but applies to parentheses rather than curly brackets.

    [[
        Like {{, but applies to square brackets rather than curly brackets.

    ]]
        Like }}, but applies to square brackets rather than curly brackets.

    EESSCC--^^FF
        Followed by two characters, acts like {{, but uses the two characters
        as open and close brackets, respectively. For example, EESSCC ^^FF << >>
        could be used to go forward to the > that matches the < in the top
        displayed line.

    EESSCC--^^BB
        Followed by two characters, acts like }}, but uses the two characters
        as open and close brackets, respectively. For example, "ESC ^B < >"
        could be used to go backward to the < that matches the > in the bottom
        displayed line.

    mm
        Followed by any lowercase letter, marks the current position with that
        letter.

    ''
        (Single quote.) Followed by any lowercase letter, returns to the
        position that was previously marked with the letter. Followed by
        another single quote, returns to the position at which the last
        "large" movement command was executed. Followed by a ^^ or $$, jumps to
        the beginning or end of the file respectively. Marks are preserved
        when a new file is examined, so the '' command can be used to switch
        between input files.

    ^^XX^^XX
        Same as single quote.

    //ppaatttteerrnn
        Search forward in the file for the occurrence of the line, indicated
        by N, that contains the pattern. N defaults to 1. The pattern is a
        regular expression, as recognized by eedd(1). The search starts at the
        second line displayed (but see the --aa and --jj options, which change
        this).
        Certain characters are special if entered at the beginning of the
        pattern; they modify the type of search rather than becoming part of
        the pattern:
        ^^NN or !!
            Search for lines that do not match the pattern.
        ^^EE or **
            Search multiple files. That is, if the search reaches the end of
            the current file without finding a match, the search continues in
            the next file in the command-line list.
        ^^FF or @@
            Begin the search at the first line of the first file in the
            command-line list, regardless of what is currently displayed on
            the screen or the settings of the --aa or --jj options.

        ^^KK
            Highlight any text that matches the pattern on the current screen,
            but do not move to the first match (keep current position).

        ^^RR
            Do not interpret regular expression metacharacters; that is, do a
            simple textual comparison.

    ??ppaatttteerrnn
        Search backward in the file for the occurrence of the line, indicated
        by N, containing the pattern. The search starts at the line
        immediately before the top line displayed.
        Certain characters are special as in the // command:
        ^^NN or !!
            Search for lines that do not match the pattern.
        ^^EE or **
            Search multiple files. That is, if the search reaches the
            beginning of the current file without finding a match, the search
            continues in the previous file in the command line list.
        ^^FF or @@
            Begin the search at the last line of the last file in the command-
            line list, regardless of what is currently displayed on the screen
            or the settings of the --aa or --jj options.

        ^^KK
            As in forward searches.

        ^^RR
            As in forward searches.

    EESSCC--//ppaatttteerrnn
        Same as "/*".

    EESSCC--??ppaatttteerrnn
        Same as "?*".

    nn
        Repeat previous search for the occurrence of the line, indicated by N,
        containing the last pattern. If the previous search was modified by
        ^N, the search is made for the occurrence of the line indicated by N
        not containing the pattern. If the previous search was modified by ^E,
        the search continues in the next (or previous) file if not satisfied
        in the current file. If the previous search was modified by ^R, the
        search is done without using regular expressions. There is no effect
        if the previous search was modified by ^F or ^K.

    NN
        Repeat previous search, but in the reverse direction.

    EESSCC--nn
        Repeat previous search, but crossing file boundaries. The effect is as
        if the previous search were modified by **.

    EESSCC--NN
        Repeat previous search, but in the reverse direction and crossing file
        boundaries.

    EESSCC--uu
        Undo search highlighting. Turn off highlighting of strings matching
        the current search pattern. If highlighting is already off because of
        a previous ESC-u command, turn highlighting back on. Any search
        command will also turn highlighting back on. (Highlighting can also be
        disabled by toggling the --GG option; in that case search commands do
        not turn highlighting back on.)

    ::ee [[ffiilleennaammee]]
        Examine a new file. If the file name is missing, the "current" file
        (see the ::nn and ::pp commands late in this topic) from the list of files
        in the command line is reexamined. A percent sign (%%) in the file name
        is replaced by the name of the current file. A pound sign (##) is
        replaced by the name of the previously examined file. Two consecutive
        percent signs are simply replaced with a single percent sign. This
        allows you to enter a file name that contains a percent sign in the
        name. Similarly, two consecutive pound signs are replaced with a
        single pound sign. The file name is inserted into the command-line
        list of files so that it can be seen by subsequent ::nn and ::pp commands.
        If the file name consists of several files, they are all inserted into
        the list of files and the first one is examined. If the file name
        contains one or more spaces, the entire file name should be enclosed
        in double quotes (""). (See also the -- option).
    ^^XX^^VV or EE
        Same as ::ee. Note that some systems use ^V as a special literalization
        character. On such systems, you might not be able to use ^V.

    ::nn
        Examine the next file (from the list of files given in the command
        line). If a number, N, is specified, the next occurrence of the file
        indicated by N is examined.

    ::pp
        Examine the previous file in the command-line list. If a number N is
        specified, the occurrence of the file indicated by N is examined.

    ::xx
        Examine the first file in the command-line list. If a number N is
        specified, the occurrence in the list of the file indicated by Nis
        examined.

    ::dd
        Remove the current file from the list of files.
    == or ^^GG or ::ff
        Prints some information about the file being viewed, including its
        name and the line number, and byte offset of the bottom line being
        displayed. If possible, it also prints the length of the file, the
        number of lines in the file, and the percent of the file above the
        last displayed line.

    --
        Followed by one of the command-line option letters (discussed later in
        this topic), this will change the setting of that option and print a
        message describing the new setting. If a ^P (CONTROL-P) is entered
        immediately after the dash, the setting of the option is changed bu no
        message is printed. If the option letter has a numeric value (such as
        --bb or --hh), or a string value (such as --PP or --tt), a new value can be
        entered after the option letter. If no new value is entered, a message
        describing the current setting is printed and nothing is changed.

    ----
        Like the -- command, but takes a long option name (discussed later in
        this topic) rather than a single option letter. You must press RETURN
        after typing the option name. A ^O immediately after the second dash
        suppresses printing of a message describing the new setting, as in the
        - command.

    --++
        Followed by one of the command-line option letters, this will reset
        the option to its default setting and print a message describing the
        new setting. (The "-+X" command does the same thing as "-+X" on the
        command line.) This does not work for string-valued options.

    ----++
        Like the --++ command, but takes a long option name rather than a single
        option letter.

    ----!!
        Followed by one of the command line option letters, this will reset
        the option to the "opposite" of its default setting and print a
        message describing the new setting. This does not work for numeric or
        string-valued options.

    ------!!
        Like the --!! command, but takes a long option name rather than a single
        option letter.

    __
        (Underscore.) Followed by one of the command-line option letters, this
        will print a message describing the current setting of that option.
        The setting of the option is not changed.

    ____
        (Double underscore.) Like the __ (underscore) command, but takes a long
        option name rather than a single option letter. You must press RETURN
        after typing the option name.
    ++cmd
        Causes the specified cmd to be executed each time a new file is
        examined. For example, ++GG causes lleessss(1) to initially display each
        file starting at the end rather than the beginning.

    VV
        Prints the version number of lleessss(1) being run.
    qq or QQ or ::qq or ::QQ or ZZZZ
        Exits lleessss(1).

    The following four commands may or may not be valid, depending on your
    particular installation.

    vv
        Invokes an editor to edit the file currently being viewed. The editor
        is taken from the environment variable VISUAL if defined, or EDITOR if
        VISUAL is not defined. It defaults to "vi" if neither VISUAL nor
        EDITOR is defined. See the discussion of LESSEDIT in the section on
        PROMPTS later in this topic.
    !! shell-command
        Invokes a shell to run the shell-command given. A percent sign (%%) in
        the command is replaced by the name of the current file. A pound sign
        (##) is replaced by the name of the previously examined file. Two
        exclamation marks (!!!!) repeats the last shell command. A single
        exclamation mark (!!) with no shell command simply invokes a shell. On
        UNIX systems, the shell is taken from the environment variable SHELL,
        or defaults to "sh". On MS-DOS and OS/2 systems, the shell is the
        normal command processor.
    || m shell-command
        The m represents any mark letter. Pipes a section of the input file to
        the given shell command. The section of the file to be piped is
        between the first line on the current screen and the position marked
        by the letter.The m can also be ^^ or $$ to indicate beginning or end of
        file respectively. If m is a period (..) or newline, the current screen
        is piped.
    ss filename
        Save the input to a file. This only works if the input is a pipe, not
        an ordinary file.

  OOPPTTIIOONNSS

    Most options can be changed while lleessss(1) is running, through the "-
    " command.

    Most options may be given in one of two forms: either a dash followed by a
    single letter, or two dashes followed by a long option name. A long option
    name may be abbreviated as long as the abbreviation is unambiguous. For
    example, --quit-at-eof may be abbreviated --quit, but not --qui, since
    both --quit-at-eof and --quiet begin with --qui. Some long option names
    are in uppercase, such as --QUIT-AT-EOF, as distinct from --quit-at-eof.
    Such option names need only have their first letter capital- ized; the
    remainder of the name may be in either case. For example, --Quit-at-eof is
    equivalent to --QUIT-AT-EOF.

    Options are also taken from the environment variable LESS. For example, to
    avoid typing less -ooppttiioonnss ...... each time lleessss(1) is invoked, you might
    tell ccsshh(1):

    setenv LESS "-options"

    or, if you use sshh(1):

    LESS="-options"; export LESS

    On MS-DOS, you do not need the quotation marks, but you should replace any
    percent signs in the options string with double percent signs.

    The environment variable is parsed before the command line, so command -
    ine options override the LESS environment variable. If an option appears
    in the LESS variable, it can be reset to its default on the command line
    by beginning the command line option with "-+".

    For options like --PP, which take a following string, a dollar sign ($) can
    be used to signal the end of the string.
    --?? or ----hheellpp
        This option displays a summary of the commands accepted by lleessss(1)
        (the same as the hh command). (Depending on how your shell interprets
        the question mark, it may be necessary to quote the question mark,
        thus: "-\?".)
    --aa or ----sseeaarrcchh--sskkiipp--ssccrreeeenn
        Causes searches to start after the last line displayed on the screen,
        thus skipping all lines displayed on the screen. By default, searches
        start at the second line on the screen (or after the last found line;
        see the --jj option).
    --bbn or ----bbuuffffeerrss==n
        Specifies the number of buffers lleessss(1) will use for each file.
        Buffers are 1K, and by default 10 buffers are used for each file
        (unless the file is a pipe; see the --BB option). The number n specifies
        a different number of buffers to use.
    --BB or ----aauuttoo--bbuuffffeerrss
        By default, when data is read from a pipe, buffers are allocated
        automatically as needed. If a large amount of data is read from the
        pipe, this can cause a large amount of memory to be allocated. The --
        BB option disables this automatic allocation of buffers for pipes, so
        that only the number of buffers specified by the --bb option are used.
        Note that the use of --BB can result in erroneous display because only
        the most recently viewed part of the file is kept in memory; earlier
        data is lost.
    --cc or ----cclleeaarr--ssccrreeeenn
        Causes full-screen repaints to be painted from the top line down. By
        default, full-screen repaints are done by scrolling from the bottom of
        the screen.
    --CC or ----CCLLEEAARR--SSCCRREEEENN
        The --CC option is like --cc, but the screen is cleared before it is
        repainted.
    --dd or ----dduummbb
        The --dd option suppresses the error message normally displayed if the
        terminal is dumb; that is, lacks some important capability, such as
        the ability to clear the screen or scroll backward. The --dd option does
        not otherwise change the behavior of lleessss(1) on a dumb terminal).
        Causes lleessss(1) to automatically exit the second time it reaches end-
        of-file. By default, the only way to exit lleessss(1) is through the qq
        command.
    --DDxxccoolloorr or ----ccoolloorr==xcolor
        [MS-DOS only] Sets the color of the text displayed. The x part of the
        xcolor parameter is a single character which selects the type of text
        whose color is being set: n=normal, s=standout, d=bold, u=underlined,
        k=blink. The color part of the xcolor parameter is a pair of numbers
        separated by a period. The first number selects the foreground color
        and the second selects the background color of the text. A single
        number N is the same as N.0.
    --ee or ----qquuiitt--aatt--eeooff
        Causes lleessss(1) to automatically exit the second time it reaches end-
        of-file. By default, the only way to exit lleessss(1) is via the "q"
        command.
    --EE or ----QQUUIITT--AATT--EEOOFF
        Causes lleessss(1) to automatically exit the first time it reaches end-of-
        file.
    --ff or ----ffoorrccee
        Forces non-regular files to be opened. (A non-regular file is a
        directory or a device special file.) Also suppresses the warning
        message when a binary file is opened. By default, lleessss(1) will refuse
        to open non-regular files.
    --FF or ----qquuiitt--iiff--oonnee--ssccrreeeenn
        Causes lleessss(1) to automatically exit if the entire file can be
        displayed on the first screen.
    --gg or ----hhiilliittee--sseeaarrcchh
        Normally, lleessss(1) will highlight ALL strings that match the last
        search command. The --gg option changes this behavior to highlight only
        the particular string that was found by the last search command. This
        can cause lleessss(1) to run somewhat faster than the default.
    --GG or ----HHIILLIITTEE--SSEEAARRCCHH
        The --GG option suppresses all highlighting of strings found by search
        commands.
    --hhn or ----mmaaxx--bbaacckk--ssccrroollll==n
        Specifies a maximum number of lines to scroll backward. If it is
        necessary to scroll backward more than n lines, the screen is
        repainted in a forward direction instead. (If the terminal does not
        have the ability to scroll backward, --hh00 is implied.)
    --ii or ----iiggnnoorree--ccaassee
        Causes searches to ignore case; that is, uppercase and lowercase are
        considered identical. This option is ignored if any uppercase letters
        appear in the search pattern; in other words, if a pattern contains
        uppercase letters, that search does not ignore case.
    --II or ----IIGGNNOORREE--CCAASSEE
        Like --ii, but searches ignore case even if the pattern contains
        uppercase letters.
    --jjn or ----jjuummpp--ttaarrggeett==n
        Specifies a line on the screen where the "target" line is to be
        positioned. A target line is the object of a text search, tag search,
        jump to a line number, jump to a file percentage, or jump to a marked
        position. The screen line is specified by a number: the top line on
        the screen is 1, the next is 2, and so on. The number can be negative
        to specify a line relative to the bottom of the screen: the bottom
        line on the screen is --11, the second to the bottom is --22, and so on.
        If the --jj option is used, searches begin at the line immediately after
        the target line. For example, if "-j4" is used, the target line is the
        fourth line on the screen, so searches begin at the fifth line on the
        screen.
    --JJ or ----ssttaattuuss--ccoolluummnn
        Displays a status column at the left edge of the screen. The status
        column is used only if the --ww or --WW option is in effect.
    --kkfilename or ----lleesssskkeeyy--ffiillee==filename
        Causes lleessss(1) to open and interpret the named file as a lleesssskkeeyy(1)
        file. Multiple --kk options may be specified. If the LESSKEY or
        LESSKEY_SYSTEM environment variable is set, or if a lesskey file is
        found in a standard place (see KEY BINDINGS), it is also used as a
        lleesssskkeeyy(1) file.
    --mm or ----lloonngg--pprroommpptt
        Causes lleessss(1) to prompt verbosely (like mmoorree(1)), with the percent
        into the file. By default, lleessss(1) prompts with a colon.
    --MM or ----LLOONNGG--PPRROOMMPPTT
        Causes lleessss(1) to prompt even more verbosely than mmoorree(1).
    --nn or ----lliinnee--nnuummbbeerrss
        Suppresses line numbers. The default (to use line numbers) can cause
        lleessss(1) to run more slowly in some cases, especially with a very large
        input file. Suppressing line numbers with the --nn option will avoid
        this problem. Using line numbers means that the line number will be
        displayed in the verbose prompt and in the == command, and the vv
        command will pass the current line number to the editor (see also the
        discussion of LESSEDIT in PROMPTS later in this topic).
    --NN or ----LLIINNEE--NNUUMMBBEERRSS
        Causes a line number to be displayed at the beginning of each line in
        the display.
    --oofilename or ----lloogg--ffiillee==filename
        Causes lleessss(1) to copy its input to the named file as it is being
        viewed. This applies only when the input file is a pipe, not an
        ordinary file. If the file already exists, lleessss(1) will ask for
        confirmation before overwriting it.
    --OOfilename or ----LLOOGG--FFIILLEE==filename
        The --OO option is like --oo, but it will overwrite an existing file
        without asking for confirmation.
        If no log file has been specified, the --oo and --OO options can be used
        from within lleessss(1) to specify a log file. Without a file name, they
        will simply report the name of the log file. The "s" command is
        equivalent to specifying --oo from within lleessss(1).
    --pppattern or ----ppaatttteerrnn==pattern
        The --pp option on the command line is equivalent to specifying "+/
        pattern"; that is, it tells lleessss(1) to start at the first occurrence
        of pattern in the file.
    --PPprompt or ----pprroommpptt==prompt
        Provides a way to tailor the three prompt styles to your own
        preference. This option would normally be put in the LESS environment
        variable, rather than being typed in with each lleessss(1) command. Such
        an option must either be the last option in the LESS variable, or be
        terminated by a dollar sign. --PPss followed by a string changes the
        default (short) prompt to that string. --PPmm changes the medium (--mm)
        prompt. --PPMM changes the long (--MM) prompt. --PPhh changes the prompt for
        the help screen. --PP== changes the message printed by the == command. All
        prompt strings consist of a sequence of letters and special escape
        sequences. See the section on PROMPTS for more details.
    --qq or ----qquuiieett or ----ssiilleenntt
        Causes moderately "quiet" operation: the terminal bell is not rung if
        an attempt is made to scroll past the end of the file or before the
        beginning of the file. If the terminal has a "visual bell", it is used
        instead. The bell will ring on certain other errors, such as typing an
        invalid character. The default is to ring the terminal bell in all
        such cases.
    --QQ or ----QQUUIIEETT or ----SSIILLEENNTT
        Causes totally "quiet" operation: the terminal bell is never rung.
    --rr or ----rraaww--ccoonnttrrooll--cchhaarrss
        Causes "raw" control characters to be displayed. The default is to
        display control characters using the caret notation; for example, a
        control-A (octal 001) is displayed as "^A". When the --rr option is
        used, lleessss(1) cannot keep track of the actual appearance of the screen
        (because this depends upon how the screen responds to each type of
        control character). Thus, various display problems can result, such as
        long lines being split in the wrong place.
    --RR or ----RRAAWW--CCOONNTTRROOLL--CCHHAARRSS
        Like --rr, but tries to keep track of the screen appearance where
        possible. This works only if the input consists of normal text and
        possibly some ANSI "color" escape sequences, which are sequences of
        the form:
        ESC [ ... m
        where the "..." is zero or more characters other than "m". For the
        purpose of keeping track of screen appearance, all control characters
        and all ANSI color escape sequences are assumed to not move the
        cursor. YOu can make less think that characters other than "m" can end
        ANSI color escape sequences by setting the environment variable
        LESSANSIENDCHARS to the list of characters which can end a color
        escape sequence.
    --ss or ----ssqquueeeezzee--bbllaannkk--lliinneess
        Causes consecutive blank lines to be squeezed into a single blank
        line. This is useful when viewing nnrrooffff(1) output.
    --SS or ----cchhoopp--lloonngg--lliinneess
        Causes lines longer than the screen width to be chopped rather than
        folded. That is, the remainder of a long line is simply discarded. The
        default is to fold long lines; that is, display the remainder on the
        next line.
    --tttag or ----ttaagg==tag
        The --tt option, followed immediately by a tag, will edit the file
        containing that tag. For this to work, there must be a file called
        ttaaggss in the current directory, which was previously built by the
        ccttaaggss(1) command. This option can also be specified from within
        lleessss(1) (using the -- command) as a way of examining a new file. The
        command ":t" is equivalent to specifying --tt from within lleessss(1).
    --TTtagsfile or ----ttaagg--ffiillee==tagsfile
        Specifies a tags file to be used instead of "tags".
    --uu or ----uunnddeerrlliinnee--ssppeecciiaall
        Causes backspaces and carriage returns to be treated as printable
        characters; that is, they are sent to the terminal when they appear in
        the input.
    --UU or ----UUNNDDEERRLLIINNEE--SSPPEECCIIAALL
        Causes backspaces, tabs, and carriage returns to be treated as control
        characters; that is, they are handled as specified by the --rr option.
        By default, if neither --uu nor --UU is given, backspaces that appear
        adjacent to an underscore character are treated specially: the
        underlined text is displayed using the terminal's hardware underlining
        capability. Also, backspaces that appear between two identical
        characters are treated specially: the overstruck text is printed using
        the terminal's hardware boldface capability. Other backspaces are
        deleted, along with the preceding character. Carriage returns
        immediately followed by a newline are deleted. Other carriage returns
        are handled as specified by the --rr option. Text that is overstruck or
        underlined can be searched for if neither --uu nor --UU is in effect.
    --VV or ----vveerrssiioonn
        Displays the version number of lleessss(1).
    --ww or ----hhiilliittee--uunnrreeaadd
        Temporarily highlights the first "new" after a forward movement of a
        full page. The first "new" line is the line immediately following the
        line previously at the bottom of the screen. also highlights the
        target line after a gg or pp command. The highlight is removed at the
        next command which causes movement. The entire line is highlighted,
        unless the --JJ option is in effect, in which case only the status
        column is highlighted.
    --WW or ----HHIILLIITTEE--UUNNRREEAADD
        Like --ww, but temporarily highlights the first new line after any
        forward movement command larger than one line.
    --xxn or ----ttaabbss==n
        Sets tab stops every n positions. The default for 2n is 8.
    --XX or ----nnoo--iinniitt
        Disables sending the termcap initialization and deinitialization
        strings to the terminal. This is sometimes desirable if the
        deinitialization string does something unnecessary, like clearing the
        screen.
    --yyn or ----mmaaxx--ffoorrww--ssccrroollll==n
        Specifies a maximum number of lines to scroll forward. If it is
        necessary to scroll forward more than n lines, the screen is repainted
        instead. You can use the --cc or --CC option to repaint from the top of
        the screen. By default, any forward movement causes scrolling.
    --[[zz]]n or ----wwiinnddooww==n
        Changes the default scrolling window size to n lines. The default is
        one screen. The zz and ww commands can also be used to change the window
        size. The "z" can be omitted for compatibility with mmoorree(1). If the
        number n is negative, it indicates n lines fewer than the current
        screen size. For example, if the screen is 24 lines, --zz--44 sets the
        scrolling window to 20 lines. If the screen is resized to 40 lines,
        the scrolling window automatically changes to 36 lines.
    --""cc or ----qquuootteess==cc
        Changes the file name quoting character. This might be necessary if
        you are trying to name a file that contains both spaces and quote
        characters. Followed by a single character, this changes the quote
        character to that character. File names containing a space should then
        be surrounded by that character rather than by double quotes. Followed
        by two characters, changes the open quote to the first character, and
        the close quote to the second character. File names containing a space
        should then be preceded by the open quote character and followed by
        the close quote character. Note that even after the quote characters
        are changed, this option remains --"" (a dash followed by a double
        quote).
    --~~ or ----ttiillddee
        Normally lines after end of file are displayed as a single tilde (~).
        This option causes lines after the end of file to be displayed as
        blank lines.
    --## or ----sshhiifftt
        Specifies the default number of positions to scroll horizontally in
        the RRIIGGHHTTAARRRROOWW and LLEEFFTTAARRRROOWW commands. If the number specified is
        zero, it sets the default number of positions to one half of the
        screen width.

    ----
        The command line argument ---- marks the end of option arguments. Any
        arguments following this are interpreted as file names. This can be
        useful when viewing a file whose name begins with a "-" or "+".

    ++
        If a command line option begins with ++, the remainder of that option
        is taken to be an initial command to lleessss(1). For example, ++GG tells
        lleessss(1) to start at the end of the file rather than the beginning, and
        +/xxyyzz tells it to start at the first occurrence of "xyz" in the file.
        As a special case, +<number> acts like +<number>g; that is, it starts
        the display at the specified line number (however, see the caveat
        under the "g" command discussed previously in this topic). If the
        option starts with ++, the initial command applies to every file being
        viewed, not just the first one. The ++ command described previously may
        also be used to set (or change) an initial command for every file.

  LLIINNEE EEDDIITTIINNGG

    When entering command line at the bottom of the screen (for example, a
    file name for the ::ee command, or the pattern for a search command),
    certain keys can be used to manipulate the command line. Most commands
    have an alternate form in brackets ([[]]) that can be used if a key does not
    exist on a particular keyboard. (The bracketed forms do not work in the
    MS-DOS version.) Any of these special keys can be entered literally by
    preceding it with the "literal" character, either ^^VV or ^^AA. A backslash
    can also be entered literally by entering two backslashes.

    LEFTARROW [ ESC-h ]
        Move the cursor one space to the left.

    RIGHTARROW [ ESC-l ]
        Move the cursor one space to the right.

    ^LEFTARROW [ ESC-b or ESC-LEFTARROW ]
        (That is, CONTROL and LEFTARROW simultaneously.) Move the cursor one
        word to the left.

    ^RIGHTARROW [ ESC-w or ESC-RIGHTARROW ]
        (That is, CONTROL and RIGHTARROW simultaneously.) Move the cursor one
        word to the right.

    HOME [ ESC-0 ]
        Move the cursor to the beginning of the line.

    END [ ESC-$ ]
        Move the cursor to the end of the line.

    BACKSPACE
        Delete the character to the left of the cursor, or cancel the command
        if the command line is empty.

    DELETE or [ ESC-x ]
        Delete the character under the cursor.

    ^BACKSPACE [ ESC-BACKSPACE ]
        (That is, CONTROL and BACKSPACE simultaneously.) Delete the word to
        the left of the cursor.

    ^DELETE [ ESC-X or ESC-DELETE ]
        (That is, CONTROL and DELETE simultaneously.) Delete the word under
        the cursor.

    UPARROW [ ESC-k ]
        Retrieve the previous command line.

    DOWNARROW [ ESC-j ]
        Retrieve the next command line.

    TAB
        Complete the partial file name to the left of the cursor. If it
        matches more than one file name, the first match is entered into the
        command line. Repeated TABs will cycle through the other matching file
        names. If the completed file name is a directory, a "/" is appended to
        the file name. (On MS-DOS systems, a "\" is appended.) The environment
        variable LESSSEPARATOR can be used to specify a different character to
        append to a directory name.

    BACKTAB [ ESC-TAB ]
        Like, TAB, but cycles in the reverse direction through the matching
        file names.

    ^L
        Complete the partial file name to the left of the cursor. If it
        matches more than one file name, all matches are entered into the
        command line (if they fit).
    ^U (UNIX) or ESC (MS-DOS)
        Delete the entire command line, or cancel the command if the command
        line is empty. If you have changed your line-kill character in UNIX to
        something other than ^U, that character is used instead of ^U.

  KKEEYY BBIINNDDIINNGGSS

    You can define your own lleessss(1) commands by using the program lleesssskkeeyy(1)
    to create a lesskey file. This file specifies a set of command keys and an
    action associated with each key. You can also use lleesssskkeeyy(1) to change the
    line-editing keys (see LINE EDITING), and to set environment variables. If
    the environment variable LESSKEY is set, lleessss(1) uses that as the name of
    the lesskey file. Otherwise, lleessss(1) looks in a standard place for the
    lesskey file: On UNIX systems, lleessss(1) looks for a lesskey file called
    $$HHOOMMEE//..lleessss. On MS-DOS systems, lleessss(1) looks for a lesskey file called
    $$HHOOMMEE//__lleessss; and if it is not found there, then looks for a lesskey file
    called __lleessss in any directory specified in the PATH environment variable.
    On OS/2 systems, lleessss(1) looks for a lesskey file called $$HHOOMMEE//lleessss..iinnii,
    and if it is not found, then looks for a lesskey file called lleessss..iinnii in
    any directory specified in the INIT environment variable, and if it not
    found there, then looks for a lesskey file called lleessss..iinnii in any
    directory specified in the PATH environment variable. See the lleesssskkeeyy(1)
    manual page for more details.

    A system-wide lesskey file can also be set up to provide key bindings. If
    a key is defined in both a local lesskey file and in the system-wide file,
    key bindings in the local file take precedence over those in the system-
    wide file. If the environment variable LESSKEY_SYSTEM is set, lleessss(1) uses
    that as the name of the system-wide lesskey file. Otherwise, lleessss(1) looks
    in a standard place for the system-wide lesskey file: On Unix systems, the
    system-wide lesskey file is /usr/local/bin/.sysless. (However, if less was
    built with a different binary directory than /usr/local/bin, that
    directory is where the .sysless file is found.) On MS-DOS and Windows
    systems, the system-wide lesskeyfile is c:\_sysless. On OS/2 systems, the
    system- wide lesskey file is c:\sysless.ini.

  IINNPPUUTT PPRREEPPRROOCCEESSSSOORR

    You can define an input preprocessor for lleessss(1). Before lleessss(1) opens a
    file, it first gives your input preprocessor a chance to modify the way
    the contents of the file are displayed. An input preprocessor is simply an
    executable program (or shell script), that writes the contents of the file
    to a different file, called the replacement file. The contents of the
    replacement file are then displayed in place of the contents of the
    original file. It will appear to the user, however, as if the original
    file is opened; that is, lleessss(1) will display the original file name as
    the name of the current file.

    An input preprocessor receives one command-line argument, the original
    file name, as entered by the user. It should create the replacement file,
    and when finished, print the name of the replacement file to its standard
    output. If the input preprocessor does not output a replacement file name,
    lleessss(1) uses the original file, as normal. The input preprocessor is not
    called when viewing standard input. To set up an input preprocessor, set
    the LESSOPEN environment variable to a command line, which will invoke
    your input preprocessor. This command line should include one occurrence
    of the string "%s", which will be replaced by the file name when the input
    preprocessor command is invoked.

    When lleessss(1) closes a file opened in such a way, it will call another
    program, called the input postprocessor, which can perform any desired
    clean-up action (such as deleting the replacement file created by
    LESSOPEN). This program receives two command-line arguments, the original
    file name as entered by the user, and the name of the replacement file. To
    set up an input postprocessor, set the LESSCLOSE environment variable to a
    command line which will invoke your input postprocessor. It can include
    two occurrences of the string "%s"; the first is replaced with the
    original name of the file and the second with the name of the replacement
    file, which was output by LESSOPEN.

    For example, on many UNIX systems, these two scripts will allow you to
    keep files in compressed format, but still let lleessss(1) view them directly:

    lleessssooppeenn..sshh:

    #! /bin/sh
    case "$1" in
    *.Z) uncompress --cc $1  >/tmp/less.$$  2>/dev/null
         if [ --ss /tmp/less.$$ ]; then
              echo /tmp/less.$$
         else
              rm --ff /tmp/less.$$
         fi
         ;;
    esac

    lleesssscclloossee..sshh:

    #! /bin/sh
    rm $2

    To use these scripts, put them both where they can be executed and set
    LLEESSSSOOPPEENN==lleessssooppeenn..sshh %%ss, and LLEESSSSCCLLOOSSEE==lleesssscclloossee..sshh %%ss %%ss. More complex
    LESSOPEN and LESSCLOSE scripts can be written to accept other types of
    compressed files, and so on.

    It is also possible to set up an input preprocessor to pipe the file data
    directly to lleessss(1), rather than putting the data into a replacement file.
    This eliminates the need to decompress the entire file before starting to
    view it. An input preprocessor that works this way is called an input
    pipe. An input pipe, instead of writing the name of a replacement file on
    its standard output, writes the entire contents of the replacement file on
    its standard output. If the input pipe does not write any characters on
    its standard output, there is no replacement file and lleessss(1) uses the
    original file, as normal. To use an input pipe, make the first character
    in the LESSOPEN environment variable a vertical bar (|) to signify that
    the input preprocessor is an input pipe.

    For example, on many UNIX systems, this script will work like the previous
    example scripts:

    lleessssppiippee..sshh:

    #! /bin/sh
    case "$1" in
    *.Z) uncompress --cc $1  2>/dev/null
         ;;
    esac

    To use this script, put it where it can be executed and set
    LLEESSSSOOPPEENN==||lleessssppiippee..sshh %%ss. When an input pipe is used, a LESSCLOSE
    postprocessor can be used, but it is usually not necessary since there is
    no replacement file to clean up. In this case, the replacement file name
    passed to the LESSCLOSE postprocessor is "-".

  NNAATTIIOONNAALL CCHHAARRAACCTTEERR SSEETTSS

    There are three types of characters in the input file:

    Normal characters
        Can be displayed directly to the screen.

    Control characters
        Should not be displayed directly, but are expected to be found in
        ordinary text files (such as backspace and tab).

    Binary characters
        Should not be displayed directly and are not expected to be found in
        text files.

    A "character set" is simply a description of the characters that are to be
    considered normal, control, and binary. The LESSCHARSET environment
    variable can be used to select a character set. Possible values for
    LESSCHARSET are:

    ascii
        The default character set. BS, TAB, NL, CR, and formfeed are control
        characters, all chars with values between 127 and 255 are binary, and
        all others are normal.

    iso8859
        Selects the International Standards Organization (ISO) 8859/
        1 character set. latin-1 is the same as ASCII, except characters
        between 161 and 255 are treated as normal characters.

    latin1
        Same as iso8859.

    dos
        Selects a character set appropriate for MS-DOS.

    koi8-r
        Selects a Russian character set.

    next
        Selects a character set appropriate for NeXT computers.

    japanese-sjis
        Selects the Shift-JIS character set.

    japanese-ujis
        Selects the EUC-JP character set.

    In special cases, you might want to tailor lleessss(1) to use a character set
    other than the ones definable by LESSCHARSET. In this case, the
    environment variable LESSCHARDEF can be used to define a character set. It
    should be set to a string where each character in the string represents
    one character in the character set. The character "." is used for a normal
    character, "c" for control, and "b" for binary. A decimal number may be
    used for repetition. For example, "bccc4b." would mean character 0 is
    binary; 1, 2, and 3 are control; 4, 5, 6, and 7 are binary; and 8 is
    normal. All characters after the last are taken to be the same as the
    last, so characters 9 through 255 would be normal. (This is an example,
    and does not necessarily represent any real character set.)

    This table shows the value of LESSCHARDEF that is equivalent to each of
    the possible values for LESSCHARSET:
    ascii             8bcccbcc18b95.b

    dos               8bcccbcc12bc5b95.b.

    iso8859           8bcccbcc18b95.33b.

    japanese-sjis     8bcccb4c11bc4b95.b127.b

    japanese-ujis     8bcccb4c11bc4b95.b127.b

    koi8-r            8bcccbcc18b95.b128.

    latin1            8bcccbcc18b95.33b.

    next              8bcccbcc18b95.bb125.bb

    If neither LESSCHARSET nor LESSCHARDEF is set, but your system supports
    the _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) interface, lleessss(1) will use sseettllooccaallee to determine the
    character set. sseettllooccaallee is controlled by setting the LANG or LC_CTYPE
    environment variables.

    Control and binary characters are displayed in standout (reverse video).
    Each such character is displayed in caret notation if possible (such as ^A
    for control-A). Caret notation is used only if inverting the 0100 bit
    results in a normal printable character. Otherwise, the character is
    displayed as a hexadecimal number in angle brackets. This format can be
    changed by setting the LESSBINFMT environment variable. LESSBINFMT can
    begin with a "*" and one character to select the display attribute: "*k"
    is blinking, "*d" is bold, "*u" is underlined, "*s" is standout, and "*n"
    is normal. If LESSBINFMT does not begin with a "*", normal attribute is
    assumed. The remainder of LESSBINFMT is a string that can include one
    printf-style escape sequence (a % followed by x, X, o, d, and so on). For
    example, if LESSBINFMT is "*u[%x]", binary characters are displayed in
    underlined hexadecimal surrounded by brackets. The default if no
    LESSBINFMT is specified is "*d<%X>".

  PPRROOMMPPTTSS

    With the --PP option, you can tailor the prompt to your preference. The
    string given to the --PP option replaces the specified prompt string.
    Certain characters in the string are interpreted specially. The prompt
    mechanism is rather complicated to provide flexibility, but the ordinary
    user need not understand the details of constructing personalized prompt
    strings.

    A percent sign followed by a single character is expanded according to
    what the following character is:

    %%bbX
        Replaced by the byte offset into the current input file. The bb is
        followed by a single character (shown as X above) that specifies the
        line whose byte offset is to be used.

        tt
            Use the byte offset of the top line in the display.

        mm
            Use the middle line.

        bb
            Use the bottom line.

        BB
            Use the line just after the bottom line.

        jj
            Use the "target" line, as specified by the --jj option.

    %%BB
        Replaced by the size of the current input file.

    %%cc
        Replaced by the column number of the text appearing in the first
        column of the screen.
    %%ddX
        Replaced by the page number of the line in the input file. The line to
        be used is determined by the X, as with the %b option.

    %%DD
        Replaced by the number of pages in the input file, or equivalently,
        the page number of the last line in the input file.

    %%EE
        Replaced by the name of the editor (from the VISUAL environment
        variable, or the EDITOR environment variable if VISUAL is not
        defined). See the discussion of the LESSEDIT feature later in this
        topic.

    %%ff
        Replaced by the name of the current input file.

    %%ii
        Replaced by the index of the current file in the list of input files.
    %%llX
        Replaced by the line number of a line in the input file. The line to
        be used is determined by the X, as with the %%bb option.

    %%LL
        Replaced by the line number of the last line in the input file.

    %%mm
        Replaced by the total number of input files.
    %%ppX
        Replaced by the percent into the current input file, based on byte
        offsets. The line used is determined by the X as with the %%bb option.
    %%PPX
        Replaced by the percent into the current input file, based on line
        numbers. The line used is determined by the X as with the %%bb option.

    %%ss
        Same as %%BB.

    %%tt
        Causes any trailing spaces to be removed. Usually used at the end of
        the string, but can appear anywhere.

    %%xx
        Replaced by the name of the next input file in the list.

    If any item is unknown (for example, the file size if input is a pipe), a
    question mark is printed instead.

    The format of the prompt string can be changed depending on certain
    conditions. A question mark (??) followed by a single character acts like
    an "IF": depending on the following character, a condition is evaluated.
    If the condition is true, any characters following the question mark and
    condition character, up to a period (..), are included in the prompt. If
    the condition is false, such characters are not included. A colon (B)
    appearing between the question mark and the period can be used to
    establish an "ELSE": any characters between the colon and the period are
    included in the string if and only if the IF condition is false. Condition
    characters (which follow a question mark) may be:

    ??aa
        True if any characters have been included in the prompt so far.
    ??bbX
        True if the byte offset of the specified line is known.

    ??BB
        True if the size of current input file is known.

    ??cc
        True if the text is horizontally shifted (%c is not zero).
    ??ddX
        True if the page number of the specified line is known.

    ??ee
        True if at end-of-file.

    ??ff
        True if there is an input file name (that is, if input is not a pipe).
    ??llX
        True if the line number of the specified line is known.

    ??LL
        True if the line number of the last line in the file is known.

    ??mm
        True if there is more than one input file.

    ??nn
        True if this is the first prompt in a new input file.
    ??ppX
        True if the percent into the current input file, based on byte
        offsets, of the specified line is known.
    ??PPX
        True if the percent into the current input file, based on line
        numbers, of the specified line is known.

    ??ss
        Same as ??BB.

    ??xx
        True if there is a next input file (that is, if the current input file
        is not the last one).

    Any characters other than the special ones (question mark, colon, period,
    percent, and backslash) become literally part of the prompt. Any of the
    special characters can be included in the prompt literally by preceding it
    with a backslash.

  EExxaammpplleess

    ?f%f:Standard input.

    This prompt prints the file name, if known; otherwise, it prints the
    string "Standard input".

    ?f%f .?ltLine %lt:?pt%pt\e\e%:?btByte %bt:-...

    This prompt prints the file name, if known. The file name is followed by
    the line number, if known; otherwise, the percent, if known; otherwise,
    the byte offset, if known. Otherwise, a dash is printed. Notice how each
    question mark has a matching period, and how the %% after the %%pptt is
    included literally by escaping it with a backslash.

    ?n?f%f\ .?m(file\ %i\ of\ %m)\ ..?e(END)\ ?x-\ Next\\:\ %x..%t

    This prints the file name if this is the first prompt in a file, followed
    by the "file N of N" message if there is more than one input file. Then,
    if end-of-file has been reached, the string "(END)" is printed, followed
    by the name of the next file, if there is one. Finally, any trailing
    spaces are truncated. This is the default prompt. For reference, here are
    the defaults for the other two prompts (--mm and --MM respectively). Each is
    broken into two lines here for readability only.

    ?n?f%f\ .?m(file\ %i\ of\ %m)\ ..?e(END)\ ?x-\ Next\\:\ %x.:
         ?pB%pB\\%:byte\ %bB?s/%s...%t

    ?f%f\ .?n?m(file\ %i\ of\ %m)\ ..?ltline\ %lt?L/%L.\ :byte\ %bB?s/%s.\ .
         ?e(END)\ ?x-\ Next\\:\ %x.:?pB%pB\\%..%t

    Following is the default message produced by the == command:

    ?f%f\ .?m(file\ %i\ of\ %m)\ .?ltline\ %lt?L/%L.\ .
         byte\ %bB?s/%s.\ ?e(END)\ :?pB%pB\\%..%t

    The prompt expansion features are also used for another purpose: if an
    environment variable LESSEDIT is defined, it is used as the command to be
    executed when the vv command is invoked. The LESSEDIT string is expanded in
    the same way as the prompt strings. The default value for LESSEDIT is:

    %E\ ?lm+%lm.\ %f

    This expands to the editor name, followed by a + and the line number,
    followed by the file name. If your editor does not accept the
    "+linenumber" syntax, or has other differences in invocation syntax, the
    LESSEDIT variable can be changed to modify this default.

  SSEECCUURRIITTYY

    When the environment variable LESSSECURE is set to 1, lleessss(1) runs in a
    "secure" mode. This means that the following features are disabled:

    !!
        The shell command

    ||
        The pipe command

    ::ee
        The examine command

    vv
        The editing command

    ss --oo
        Log files

    --kk
        Use of lesskey files

    --tt
        Use of tags files
        Metacharacters in file names, such as *
        File-name completion (TAB, .)

    The lleessss(1) utility can also be compiled to be in "secure" mode
    permanently.

  EENNVVIIRROONNMMEENNTT VVAARRIIAABBLLEESS

    Environment variables can be specified either in the system environment,
    as usual, or in a lleesssskkeeyy(1) file.

    COLUMNS
        Sets the number of columns on the screen. Takes precedence over the
        number of columns specified by the TERM variable.

    EDITOR
        The name of the editor (used for the vv command).

    HOME
        Name of the user's home directory (used to find a lesskey file on UNIX
        systems).
    HOMEDRIVE, HOMEPATH
        Concatonation of the HOMEDRIVE and HOMEPATH environment variables is
        the name of the user's home directory if the HOME variable is not set
        (only in the Windows version).

    INIT
        Name of the user's init directory (used to find a lesskey file on OS/
        2 systems).

    LANG
        Language for determining the character set.

    LC_CTYPE
        Language for determining the character set.

    LESS
        Options that are passed to lleessss(1) automatically.

    LESSBINFMT
        Format for displaying non-printable, non-control characters.

    LESSCHARDEF
        Defines a character set.

    LESSCHARSET
        Selects a predefined character set.

    LESSCLOSE
        Command line to invoke the (optional) input-postprocessor.

    LESSECHO
        Name of the lessecho program (default "lessecho"). The lessecho
        program is needed to expand metacharacters, such as ** and ??, in file
        names on UNIX systems.

    LESSEDIT
        Editor prototype string (used for the vv command). See PROMPTS.

    LESSKEY
        Name of the default lleesssskkeeyy(1) file.

    LESSKEY_SYSTEM
        Name of the default system-wide lleesssskkeeyy(1) file.

    LESSMETACHARS
        List of characters that are considered "metacharacters" by the shell.

    LESSMETAESCAPE
        Prefix that lleessss will add before each metacharacter in a command sent
        to the shell. If LESSMETAESCAPE is an empty string, commands
        containing metacharacters will not be passed to the shell.

    LESSOPEN
        Command line to invoke the (optional) input-preprocessor.

    LESSSECURE
        Runs less in "secure" mode. See SECURITY.

    LESSSEPARATOR
        String to be appended to a directory name in file-name completion.

    LINES
        Sets the number of lines on the screen. Takes precedence over the
        number of lines specified by the TERM variable.

    PATH
        User's search path (used to find a lesskey file on MS-DOS and OS/
        2 systems).

    SHELL
        The shell used to execute the !! command, as well as to expand file
        names.

    TERM
        The type of terminal on which lleessss(1) is being run.

    VISUAL
        The name of the editor (used for the vv command).

  WWAARRNNIINNGGSS

    The == command and prompts (unless changed by --PP) report the line number of
    the line at the top of the screen but the byte and percent of the line at
    the bottom of the screen.

    If the ::ee command is used to name more than one file, and one of the named
    files has been viewed previously, the new files can be entered into the
    list in an unexpected order.

    On certain older terminals (the so-called "magic cookie" terminals),
    search highlighting will cause an erroneous display. On such terminals,
    search highlighting is disabled by default to prevent possible problems.

    In certain cases, when search highlighting is enabled and a search pattern
    begins with a ^, more text than the matching string can be highlighted.

    On some systems, _ss_ee_tt_ll_oo_cc_aa_ll_ee(3) claims that ASCII characters 0 thru 31 are
    control characters rather than binary characters. This causes lleessss(1) to
    treat some binary files as ordinary, non-binary files. To work around this
    problem, set the environment variable LESSCHARSET to "ascii" (or to
    whatever character set is appropriate).

  SSEEEE AALLSSOO

    _l_e_s_s_k_e_y(1)

