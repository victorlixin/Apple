mknod(1)                                                       mknod(1)

  mmkknnoodd

  NNAAMMEE

    mknod - build special file

  SSYYNNOOPPSSIISS

    mknod [[-m mode]] name [[c || b]] major minor
    mknod [[-m mode]] name p

  DDEESSCCRRIIPPTTIIOONN

    The mmkknnoodd(1) utility creates device special files. Normally the command //
    uussrr//ssbbiinn//mmaakkeeddeevv is used to create special files for commonly known
    devices; it executes mmkknnoodd(2) with the appropriate arguments and can make
    all the files required for all standard devices supported by
	Subsystem for UNIX-based Applications (SUA).

    You must be logged on as a member of the Administrators group to run
    mmkknnoodd(1), otherwise the utility displays an error message and exits.

    SUA recognizes the files created by mmkknnoodd(1) as unique. Superficially
    identical files created through means other than mmkknnoodd(1), mmkknnoodd(2), and
    mmaakkeeddeevv(1) (for example, through backup and restore) will not be treated
    as device files by SUA, and attempts to open devices through such
    files with fail with the error code ENXIO.

    The options are as follows:
    --mm mode
        Set the file mode. The mode argument can be absolute or symbolic, as
        described in _c_h_m_o_d(1). In symbolic strings, the plus sign (+) and dash
        (-) operators are interpreted relative to an assumed initial mode of
        a=rw.

    The arguments are as follows:
    bb | cc | pp
        Type of device or FIFO. If the device is a block type device such as a
        tape or disk drive which needs both cooked and raw special files, the
        type is bb. All other devices are character type devices, such as
        terminal and pseudo devices, and are type cc. A FIFO (also known as a
        named pipe) is type pp.

    major
        The major device number is an integer number which tells the kernel
        which device driver entry point to use.

    minor
        The minor device number tells the kernel which subunit the node
        corresponds to on the device; for example, a subunit may be a file-
        system partition or a tty line.

    Major and minor device numbers can be given in any format acceptable to
    _ss_tt_rr_tt_oo_uu_ll(3), so that a leading 00xx indicates a hexadecimal number, and a
    leading 00 will cause the number to be interpreted as octal.

  SSEEEE AALLSSOO

    _m_a_k_e_d_e_v(1)

    _c_h_m_o_d(1)

    _m_k_f_i_f_o(1)

    _m_k_f_i_f_o(2)

    _m_k_n_o_d(2)

