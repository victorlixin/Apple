viewres(1X11R5)                                         viewres(1X11R5)

  vviieewwrreess

  NNAAMMEE

    viewres - graphical class browser for Xt

  SSYYNNOOPPSSIISS

    viewres [[--option ...]]

  DDEESSCCRRIIPPTTIIOONN

    The vviieewwrreess(1X11R5) program displays a tree showing the widget class
    hierarchy of the Athena Widget Set. Each node in the tree can be expanded
    to show the resources that the corresponding class adds (that is, does not
    inherit from its parent) when a widget is created. This application allows
    the user to view the structure and inherited resources for the Athena
    Widget Set.

  OOPPTTIIOONNSS

    The vviieewwrreess(1X11R5) utility accepts all of the standard toolkit command-
    line options, as well as the following:
    --ttoopp name
        This option specifies the name of the highest widget in the hierarchy
        to display. This is typically used to limit the display to a subset of
        the tree. The default is Object.

    --vvaarriiaabbllee
        This option indicates that the widget variable names (as declared in
        header files) should be displayed in the nodes rather than the widget
        class name. This is sometimes useful to distinguish widget classes
        that share the same name (such as Text).

    --vveerrttiiccaall
        This option indicates that the tree should be displayed top to bottom
        rather left to right.

  VVIIEEWW MMEENNUU

    The way in which the tree is displayed can be changed by using the entries
    in the VViieeww menu. These are as follows:

    SShhooww VVaarriiaabbllee NNaammeess
        This entry causes the node labels to be set to the variable names used
        to declare the corresponding widget class. This operation can also be
        performed with the SSeettLLaabbeellTTyyppee((vvaarriiaabbllee)) translation.

    SShhooww CCllaassss NNaammeess
        This entry causes the node labels to be set to the class names used
        when specifying resources. This operation can also be performed with
        the SSeettLLaabbeellTTyyppee((ccllaassss)) translation.

    LLaayyoouutt HHoorriizzoonnttaall
        This entry causes the tree to be laid out from left to right. This
        operation can also be performed with the SSeettOOrriieennttaattiioonn((WWeesstt))
        translation.

    LLaayyoouutt VVeerrttiiccaall
        This entry causes the tree to be laid out from top to bottom. This
        operation can also be performed with the SSeettOOrriieennttaattiioonn((NNoorrtthh))
        translation.

    SShhooww RReessoouurrccee BBooxxeess
        This entry expands the selected nodes (see next section) to show the
        new widget and constraint resources. This operation can also be
        performed with the RReessoouurrcceess((oonn)) translation.

    HHiiddee RReessoouurrccee BBooxxeess
        This entry removes the resource displays from the selected nodes
        (usually to conserve space). This operation can also be performed with
        the RReessoouurrcceess((ooffff)) translation.

  SSEELLEECCTT MMEENNUU

    Resources for a single widget class can be displayed by clicking BBuuttttoonn22
    on the corresponding node, or by adding the node to the selection list
    with BBuuttttoonn11 and using the SShhooww RReessoouurrccee BBooxxeess entry in the VViieeww menu.
    Because BBuuttttoonn11 actually toggles the selection state of a node, clicking a
    selected node will remove it from the selected list.

    Collections of nodes can also be selected through the various entries in
    the SSeelleecctt menu:

    UUnnsseelleecctt AAllll
        This entry removes all nodes from the selection list.This operation
        can also be performed with the SSeelleecctt((nnootthhiinngg)) translation.

    SSeelleecctt AAllll
        This entry adds all nodes to the selection list. This operation can
        also be performed with the SSeelleecctt((aallll)) translation.

    IInnvveerrtt AAllll
        This entry adds unselected nodes to, and removes selected nodes from,
        the selection list. This operation can also be performed with the
        SSeelleecctt((iinnvveerrtt)) translation.

    SSeelleecctt PPaarreenntt
        This entry selects the immediate parents of all selected nodes. This
        operation can also be performed with the SSeelleecctt((ppaarreenntt)) translation.

    SSeelleecctt AAnncceessttoorrss
        This entry recursively selects all parents of all selected nodes. This
        operation can also be performed with the SSeelleecctt((aanncceessttoorrss))
        translation.

    SSeelleecctt CChhiillddrreenn
        This entry selects the immediate children of all selected nodes. This
        operation can also be performed with the SSeelleecctt((cchhiillddrreenn)) translation.

    SSeelleecctt DDeesscceennddaannttss
        This entry recursively selects all children of all selected nodes.
        This operation can also be performed with the SSeelleecctt((ddeesscceennddaannttss))
        translation.

    SSeelleecctt HHaass RReessoouurrcceess
        This entry selects all nodes that add new resources (regular or
        constraint) to their corresponding widget classes. This operation can
        also be performed with the SSeelleecctt((rreessoouurrcceess)) translation.

    SSeelleecctt SShhoowwnn RReessoouurrccee BBooxxeess
        This entry selects all nodes whose resource boxes are currently
        expanded (usually so that they can be closed with HHiiddee RReessoouurrccee
        BBooxxeess). This operation can also be performed with the Select(shown)
        translation.

  AACCTTIIOONNSS

    The following application actions are provided:

    QQuuiitt(())
        This action causes vviieewwrreess(1X11R5) to exit.
    SSeettLLaabbeellTTyyppee((type))
        This action sets the node labels to display the widget variable or
        class names, according to the argument type.
    SSeettOOrriieennttaattiioonn((direction))
        This action sets the root of the tree to be one of the following areas
        of the window: WWeesstt, NNoorrtthh, EEaasstt, or SSoouutthh
    SSeelleecctt((what))
        This action selects the indicated nodes, as described in the VVIIEEWW MMEENNUU
        section: nnootthhiinngg (unselects all nodes), iinnvveerrtt, ppaarreenntt, aanncceessttoorrss,
        cchhiillddrreenn, ddeesscceennddaannttss, rreessoouurrcceess, sshhoowwnn.
    RReessoouurrcceess((op))
        This action turns oonn, ooffff, or ttoogggglleess the resource boxes for the
        selected nodes. If invoked from within one of the nodes (through the
        keyboard or pointer), only that node is used.

  WWIIDDGGEETT HHIIEERRAARRCCHHYY

    Resources can be specified for the following widgets:

    Viewres viewres
      Paned pane
         Box buttonbox
           Command quit
           MenuButton view
              SimpleMenu viewMenu
                SmeBSB layoutHorizontal
                SmeBSB layoutVertical
                SmeLine line1
                SmeBSB namesVariable
                SmeBSB namesClass
                SmeLine line2
                SmeBSB viewResources
                SmeBSB viewNoResources
           MenuButton select
              SimpleMenu selectMenu
                SmeBSB unselect
                SmeBSB selectAll
                SmeBSB selectInvert
                SmeLine line1
                SmeBSB selectParent
                SmeBSB selectAncestors
                SmeBSB selectChildren
                SmeBSB selectDescendants
                SmeLine line2
                SmeBSB selectHasResources
                SmeBSB selectShownResources
         Form treeform
           Porthole porthole
              Tree tree Box variable-name
                   Toggle variable-name
                   List variable-name
           Panner panner

    where variable-name is the widget variable name of each node.

  SSEEEE AALLSSOO

    _X(5X11R5)

    _x_r_d_b(1X11R5)

    _l_i_s_t_r_e_s(1X11R5)

    _e_d_i_t_r_e_s(1X11R5)

    _a_p_p_r_e_s(1X11R5)

    Appropriate widget documents

