
#
# Local system shell setup
#
# This file is here in order to allow local system administrators
# configure the shell startup on their local systems.
# Add any additions here. NOT IN /etc/profile.
# 

# 
# display an initial login message (message of the day)
#

    echo "Welcome to the SUA utilities."


#
# print value of DISPLAY - just so user knows what its set to
#
echo "DISPLAY=$DISPLAY"

#
# The SystemWarning file is created when certain messages are logged.
# The EventViewer can be used to view the messages.  There is detail
# to the specific condition with each message.  SystemWarning may be
# removed at any time, and will be recreated only when an event of
# interest occurs.
#
if [ -f /var/adm/SystemWarning ]; then
    echo ""
    echo "============================================================="
    echo "WARNING: One or more events have been logged in the Event Log"
    echo "         that the system administrator should investigate."
    echo "============================================================="
    echo ""
fi

# -----------------------------------------
#
# putting SYSTEMROOT (e.g  c:\WINNT35 ) in your PATH
#
#  The SYSTEMROOT environment variable is automatically inherited from 
#  the global  NT system environment
#  (see ControlPanel/System/EnvironmentVariables)
#  You can use this value to extend your PATH so that users can get access to
#  the WinNT system commands from the POSIX shells. 
#  (e.g commands like: 
#      cmd.exe, FTP.EXE, PING.EXE, XCOPY.EXE, EDLIN.EXE CHKDSK.EXE, ...)
#
#  NOTE: path names are case sensitive in POSIX. Therefore, you will have to
#        type the full command name with the proper case.
#        (e.g you will have to type "XCOPY.EXE", not "xcopy", or "xcopy.exe"
#
#
#  If you want $SYSTEMROOT/system32 in your path, just remove ONE '#' character
#  from the beginning of the following lines.
#
##----- BEGIN ---
#
# sysroot=$(ntpath2posix $SYSTEMROOT)	# convert to POSIX filename format
# for i in system32 SYSTEM32; do	# check for both cases of subdir names
#    if [ -d $sysroot/$i ]; then
#          export PATH="$PATH:$sysroot/$i"
#          break
#    fi
# done
# unset sysroot
#
##----- END ---
