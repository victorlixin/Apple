

getrpcent(3rpc)                                   getrpcent(3rpc)

SSyynnooppssiiss
       cc  [options]  file  -lnsl  #include  <rpc/rpc.h> #include
       <rpc/rpcent.h> #include <rpc/nettype.h>

       struct rpcent *getrpcent(void);

       struct rpcent *getrpcbyname(char *name);

       struct rpcent *getrpcbynumber(int number);

       int setrpcent(int stayopen);

       int endrpcent(void);

DDeessccrriippttiioonn
       getrpcent, getrpcbynumber, and getrpcbyname each return  a
       pointer to an object with the following structure contain-
       ing the broken-out fields of a line  in  the  rpc  program
       number  data  base,  /etc/rpc.   This data base is used to
       convert rpc program numbers to server names.

   SSttrruuccttuurree ddeeffiinniittiioonnss
       The rpcent structure is defined in rpcent.h  and  has  the
       following  members:  char *r_name;       /* name of server
       for this rpc program */ char **r_aliases;   /* alias  list
       */  int  r_number;       /* rpc program number */ The mem-
       bers of this structure are: Official name of  the  server.
       A zero-terminated array of alternate names for the server.
       The rpc program number.

       getrpcent reads the next line of  the  file,  opening  the
       file if necessary.

       getrpcbyname  and  getrpcbynumber sequentially search from
       the beginning of the file until a matching name or  number
       is found, or until an EOF is encountered.

       setrpcent  opens  and  rewinds  the file.  If the stayopen
       flag is non-zero, the rpc data base  will  not  be  closed
       after  each  call  to getrpcent (either directly, or indi-
       rectly through one of the other getrpc calls).

       endrpcent closes the file.

FFiilleess
       /etc/rpc
       /var/yp/domainname/rpc.bynumber

RReettuurrnn vvaalluueess
       A NULL pointer is returned on an EOF or error.

RReeffeerreenncceess
NNoottiicceess
       All information is contained in a static area, so it  must

                                                                1

getrpcent(3rpc)                                   getrpcent(3rpc)

       be copied if it is to be saved.  For multi-threaded appli-
       cations, this must be done on a per-thread basis.

       The Network Information Service  (NIS)  will  be  used  to
       obtain  RPC server entries when its installed and running.
       Otherwise, entries will be read from /etc/rpc.

                                                                2

