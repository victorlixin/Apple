

rpcbind(3rpc)                                       rpcbind(3rpc)

SSyynnooppssiiss
       cc [options] file -lnsl #include <rpc/rpc.h>

       struct rpcblist *rpcb_getmaps(const struct netconfig *net-
       conf,      const char *host);

       bool_t rpcb_getaddr(const  u_long  prognum,  const  u_long
       versnum,      const struct netconfig *netconf, struct net-
       buf *svcaddr,      const char *host);

       bool_t rpcb_gettime(const char *host, time_t *timep);

       enum clnt_stat rpcb_rmtcall(const struct  netconfig  *net-
       conf,       const  char *host, const u_long prognum, const
       u_long versnum,      const u_long procnum, const xdrproc_t
       inproc,  const  caddr_t  in,      const xdrproc_t outproc,
       const caddr_t out,      const struct timeval tout,  struct
       netbuf *svcaddr);

       bool_t  rpcb_set(const  u_long  prognum, const u_long ver-
       snum,      const struct netconfig *netconf,  const  struct
       netbuf *svcaddr);

       bool_t  rpcb_unset(const u_long prognum, const u_long ver-
       snum,      const struct netconfig *netconf);

DDeessccrriippttiioonn
       These routines allow client C programs to  make  procedure
       calls to the RPC binder service.  rpcbind (see maintains a
       list of mappings  between  programs  and  their  universal
       addresses.

   RRoouuttiinneess
       struct  rpcblist  *  rpcb_getmaps(const  struct  netconfig
       *netconf, const char  *host);  A  user  interface  to  the
       rpcbind  service,  which returns a list of the current RPC
       program-to-address mappings on the host  named.   It  uses
       the  transport  specified  through  netconf to contact the
       remote rpcbind service on host host.   This  routine  will
       return NULL, if the remote rpcbind could not be contacted.
       bool_t rpcb_getaddr(const  u_long  prognum,  const  u_long
       versnum,      const struct netconfig *netconf, struct net-
       buf *svcaddr,      const char *host); A user interface  to
       the  rpcbind  service, which finds the address of the ser-
       vice on  host  that  is  registered  with  program  number
       prognum,  version versnum, and speaks the transport proto-
       col  associated  with  netconf.   The  address  found   is
       returned  in  svcaddr.   svcaddr  should  be preallocated.
       This routine returns 1 if it succeeds.  A return value  of
       0  means  that  the mapping does not exist or that the RPC
       system failed to contact the remote rpcbind  service.   In
       the  latter  case,  the global variable rpc_createerr con-
       tains the  RPC  status.   bool_t  rpcb_gettime(const  char
       *host,  time_t  *timep);  This routine returns the time on

                                                                1

rpcbind(3rpc)                                       rpcbind(3rpc)

       host in timep.  If host is NULL, rpcb_gettime returns  the
       time  on  its  own  machine.  This routine returns 1 if it
       succeeds, 0 if it fails.  rpcb_gettime can be used to syn-
       chronize  the  time  between  the  client  and  the remote
       server.  This routine is particularly  useful  for  secure
       RPC.   enum  clnt_stat rpcb_rmtcall(const struct netconfig
       *netconf, const char  *host,       const  u_long  prognum,
       const  u_long  versnum,  const  u_long procnum,      const
       xdrproc_t inproc, const caddr_t in,       const  xdrproc_t
       outproc,  const  caddr_t  out,       const  struct timeval
       tout, struct netbuf *svcaddr); A  user  interface  to  the
       rpcbind  service,  which instructs rpcbind on host to make
       an RPC call on your behalf to a procedure  on  that  host.
       The  parameter  *svcaddr  will be modified to the server's
       address if the procedure succeeds (see and for the defini-
       tions  of  other  parameters).  This procedure should nor-
       mally be used for a ``ping'' and nothing  else  (see  This
       routine  allows programs to do lookup and call, all in one
       step.  bool_t rpcb_set(const u_long prognum, const  u_long
       versnum,        const  struct  netconfig  *netconf,  const
       struct netbuf *svcaddr); A user interface to  the  rpcbind
       service,  which  establishes  a mapping between the triple
       [prognum, versnum, netconf->nc_netid] and svcaddr  on  the
       machine's  rpcbind  service.   The value of transport must
       correspond to a network token that is defined by the  net-
       config database.  This routine returns 1 if it succeeds, 0
       otherwise.  (See also svc_reg in  bool_t  rpcb_unset(const
       u_long  prognum,  const  u_long versnum,      const struct
       netconfig *netconf); A user interface to the rpcbind  ser-
       vice,  which  destroys  all  mapping  between  the  triple
       [prognum, versnum, netconf->nc_netid] and the  address  on
       the  machine's  rpcbind  service.   If  netconf  is  NULL,
       rpcb_unset  destroys  all  mapping  between   the   triple
       [prognum,  versnum,  *] and the addresses on the machine's
       rpcbind service.  This routine returns 1 if it succeeds, 0
       otherwise.  (See also

FFiilleess
       /usr/lib/locale/locale/LC_MESSAGES/uxnsl

RReeffeerreenncceess

                                                                2

