

rpc_xdr(3rpc)                                       rpc_xdr(3rpc)

SSyynnooppssiiss
       cc [options] file -lnsl #include <rpc/rpc.h>

       bool_t    xdr_accepted_reply(XDR   *xdrs,   const   struct
       accepted_reply *ar);

       bool_t xdr_authsys_parms(XDR  *xdrs,  const  struct  auth-
       sys_parms *aupp);

       void xdr_callhdr(XDR *xdrs, const struct rpc_msg *chdr);

       bool_t xdr_callmsg(XDR *xdrs, const struct rpc_msg *cmsg);

       bool_t xdr_opaque_auth(XDR *xdrs, const struct opaque_auth
       *ap);

       bool_t    xdr_rejected_reply(XDR   *xdrs,   const   struct
       rejected_reply *rr);

       bool_t  xdr_replymsg(XDR  *xdrs,  const   struct   rpc_msg
       *rmsg);

DDeessccrriippttiioonn
       These routines are used for describing the RPC messages in
       XDR language.  They should normally be used by  those  who
       do not want to use the RPC package.

   RRoouuttiinneess
       See  for the definition of the XDR data structure.  bool_t
       xdr_accepted_reply(XDR *xdrs, const struct  accepted_reply
       *ar);  Used  for  encoding RPC reply messages.  It encodes
       the status of the RPC call in the XDR language format, and
       in  the case of success, it encodes the call results also.
       bool_t xdr_authsys_parms(XDR  *xdrs,  const  struct  auth-
       sys_parms  *aupp);  Used  for  describing operating system
       credentials.  It includes machine-name, uid, gid list, and
       so  on.   void xdr_callhdr(XDR *xdrs, const struct rpc_msg
       *chdr); Used for describing RPC call header messages.   It
       encodes  the static part of the call message header in the
       XDR language format.   It  includes  information  such  as
       transaction  ID,  RPC  version number, program and version
       number.   bool_t  xdr_callmsg(XDR  *xdrs,   const   struct
       rpc_msg  *cmsg);  Used  for  describing RPC call messages.
       This includes all the RPC call information such as  trans-
       action  ID,  RPC  version  number, program number, version
       number, authentication information, etc.  This is normally
       used  by servers to determine information about the client
       RPC call.  bool_t xdr_opaque_auth(XDR *xdrs, const  struct
       opaque_auth *ap); Used for describing RPC opaque authenti-
       cation        information        messages.          bool_t
       xdr_rejected_reply(XDR  *xdrs, const struct rejected_reply
       *rr); Used for describing RPC reply messages.  It  encodes
       the  rejected RPC message in the XDR language format.  The
       message could be rejected either because of version number

                                                                1

rpc_xdr(3rpc)                                       rpc_xdr(3rpc)

       mis-match  or  because  of  authentication errors.  bool_t
       xdr_replymsg(XDR *xdrs, const struct rpc_msg *rmsg);  Used
       for describing RPC reply messages.  It encodes all the RPC
       reply message in the XDR language format This reply  could
       be either an acceptance, rejection or NULL.

FFiilleess
       /usr/lib/locale/locale/LC_MESSAGES/uxnsl

RReeffeerreenncceess

                                                                2

