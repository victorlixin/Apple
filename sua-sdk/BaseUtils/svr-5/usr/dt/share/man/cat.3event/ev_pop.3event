

ev_pop(3event)                                     ev_pop(3event)

SSyynnooppssiiss
       cc   .  .  .   -levent  #include   <sys/types.h>  #include
       <sys/param.h>   #include     <sys/sysmacros.h>    #include
       <sys/page.h> #include  <sys/event.h> #include  <mouse.h>

       int ev_pop()

DDeessccrriippttiioonn
       ev_pop clears the next event off the queue and returns the
       number of events that were lost due to queue overrun since
       the  last  ev_pop  call.   An  event  queue must have been
       opened with ev_init and ev_open.

       After an application is done with an event, the  event  is
       popped  off  the  queue. The queue is of fixed size, so if
       events are not popped fast enough some might be  lost  due
       to  overrun.   A  counter  maintains  the  number  of lost
       events.  When ev_pop is called, it clears  the  top  event
       off  of the queue, clears the counter and returns the num-
       ber of lost events.  This should always be zero, unless  a
       program  stops  reading  its event queue.  If the queue is
       empty, ev_pop returns -1.

       When ev_pop is called, the most recent pointer returned by
       ev_read must be considered invalid, since that storage may
       be overwritten by the event driver.

RReettuurrnn vvaalluueess
       ev_pop returns -1 if there is not an open event queue.  It
       returns -2 if there is nothing to pop because the queue is
       empty.

RReeffeerreenncceess
SSttaannddaarrddss ccoonnffoorrmmaannccee
       ev_pop is not part of any currently supported standard; it
       is  an  extension  of  AT&T System V provided by the Santa
       Cruz Operation.

                                                                1

