

ev_getdev(3event)                               ev_getdev(3event)

SSyynnooppssiiss
       cc   .  .  .   -levent  #include   <sys/types.h>  #include
       <sys/param.h>   #include     <sys/sysmacros.h>    #include
       <sys/page.h> #include  <sys/event.h> #include  <mouse.h>

       struct  devinfo  *  ev_getdev (dev_mask, devinfop) dmask_t
       dev_mask; struct devinfo *devinfop;

DDeessccrriippttiioonn
       ev_getdev allows a program to examine the devices that are
       attached to its event queue. An open event queue must have
       been previously obtained with ev_init and  ev_open.   This
       routine  takes  two arguments, a bitmask of device classes
       and a pointer to a device_info structure. The device  mask
       indicates  the  classes of devices in which the program is
       interested. The device pointer is used  to  cycle  through
       the devices attached to the queue.

       The  device  mask  is  made by OR'ing together a subset of
       D_REL, D_STRING1  and  D_OTHER.   These  values  represent
       classes  of graphics input devices.  D_REL refers to rela-
       tive locator devices like mice.  D_STRING refers to  char-
       acter stream devices like the keyboard.

       The  device  pointer parameter is NULL for the first call.
       Each call returns a pointer which should be passed  in  in
       subsequent  calls.   When the routine has iterated through
       all the devices attached to the queue, it returns NULL.

       The device information pointer points to a structure which
       looks      like      this:      struct      devinfo      {
            short     handle;        /* not used  by  application
       */       short     class;         /*  REL,  ABS, STRING or
       OTHER  */       short     type;          /*  The  type  of
       hardware  */      char *name;         /* Device name, from
       data files */      char *key;          /* Device key, from
       data files */      short     buttons; };

       An  application  can  examine  this information and decide
       whether or not to use the device.  The  ev_gindev  routine
       allows  a program to exclude or later re-include a device.
       The pointer returned by ev_getdev is passed in to  ev_gin-
       dev.

       When a queue is opened, a bitmask specifying what kinds of
       devices to attach is supplied.  All  devices  of  a  class
       which is masked in are attached to the queue. This routine
       is used to examine those devices.

RReettuurrnn vvaalluueess
       This routine returns -1 to a program which does  not  have
       an  open  event  queue. It returns -2 if no devices of any
       class which is masked in are found.  Normally  it  returns
       zero.

                                                                1

ev_getdev(3event)                               ev_getdev(3event)

RReeffeerreenncceess
NNootteess
       The  keyboard  is  attached  to  an  event  queue whenever
       devices of class D_STRING are requested.  If the  keyboard
       is  attached to an event queue, then the keyboard does not
       generate normal stdin  input  until  the  event  queue  is
       closed.

SSttaannddaarrddss ccoonnffoorrmmaannccee
       ev_getdev is not part of any currently supported standard;
       it is an extension of AT&T System V provided by the  Santa
       Cruz Operation.

                                                                2

