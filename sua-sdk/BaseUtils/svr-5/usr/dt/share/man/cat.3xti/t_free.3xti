

t_free(3xti)                                         t_free(3xti)

SSyynnooppssiiss
       cc [options] file -lnsl #include <xti.h>

       int t_free(char *ptr, int struct_type);

DDeessccrriippttiioonn
       This  function  is a TLI/XTI local management routine used
       to free memory  previously  allocated  by  t_alloc.   This
       function will free memory for the specified structure, and
       will also free memory for buffers referenced by the struc-
       ture.

       ptr  points  to  the  structure,  previously referenced by
       t_alloc,  which may be  one  of  six  types  described  by
       struct_type.  One of the following types of structures may
       be specified: T_BIND          /* struct  t_bind         */
       T_OPTMGMT         /*   struct   t_optmgmt       */  T_CALL
       /*  struct  t_call         */  T_DIS            /*  struct
       t_discon       */  T_UNITDATA       /*  struct  t_unitdata
       */  T_UDERROR        /*  struct  t_uderr        */  T_INFO
       /*  struct t_info        */ where each of these structures
       is used as an argument to one or more transport functions.

       t_free  will  check the addr, opt, and udata fields of the
       given structure (as appropriate),  and  free  the  buffers
       pointed  to by the buf field of the netbuf (see structure.

   PPaarraammeetteerrss
       points to the structure referenced by t_alloc.  identifies
       the type of structure.

   SSttaattee ttrraannssiittiioonnss
       t_free  may be issued from any valid state except T_UNINIT
       and has no effect on the state.

FFiilleess
       X/Open Transport Interface Library (shared object) Network
       Services Library (shared object)

UUssaaggee
       After  all  buffers are freed, t_free will free the memory
       associated with the structure pointed to by ptr.

       If buf is NULL, t_free will not attempt to free memory.

RReettuurrnn vvaalluueess
       t_free returns 0 on success and -1 on failure and  t_errno
       is set to indicate the error.

   EErrrroorrss
       On  failure, t_errno may be set to the following: A system
       error has occurred during execution of this function.  The
       argument  that specifies struct_type is invalid, for exam-
       ple,  because  the  type   of   structure   requested   in

                                                                1

t_free(3xti)                                         t_free(3xti)

       inconsistent  with the transport provider (connection mode
       or connectionless).   A  communication  problem  has  been
       detected with the transport provider and there is no other
       value of t_errno to describe the error condition.

WWaarrnniinnggss
       Undefined results will occur if ptr  or  any  of  the  buf
       pointers  points  to a block of memory that was not previ-
       ously allocated by t_alloc.

RReeffeerreenncceess

                                                                2

