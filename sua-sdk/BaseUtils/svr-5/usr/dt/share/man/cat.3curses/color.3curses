

color(3curses)                                     color(3curses)

SSyynnooppssiiss
       cc [options] file -lcurses #include <curses.h>

       bool can_change_color(void);

       int  color_content(short  color, short *red, short *green,
       short *blue);

       bool has_colors(void);

       int init_color(short color, short red, short green,  short
       blue);

       int init_pair(short pair, short f, short b);

       int pair_content(short pair, short *f, short *b);

       int start_color(void);

       int COLOR_PAIR(int n);

       int PAIR_NUMBER(int value);

       extern int COLOR_PAIRS;

       extern int COLORS;

DDeessccrriippttiioonn
       These functions manipulate color on terminals that support
       color.

QQuueerryyiinngg CCaappaabbiilliittiieess
       The function indicates whether the  terminal  is  a  color
       terminal.   The function indicates whether the terminal is
       a color terminal on which colors can be redefined.

IInniittiiaalliissaattiioonn
       The function must be called in order to enable use of col-
       ors  and before any color manipulation function is called.
       The function initialises eight basic colors (black,  blue,
       green,  cyan, red, magenta, yellow, and white) that can be
       specified  by  the  color  macros  (such  as  COLOR_BLACK)
       defined  in  <curses.h>.   (See  The initial appearance of
       these eight colors is not specified.

       The function also initialises two  global  external  vari-
       ables: COLORS defines the number of colors that the termi-
       nal supports.  (See If COLORS is 0, the terminal does  not
       support  redefinition  of  colors (and will return FALSE).
       COLOR_PAIRS defines the maximum number of color-pairs that
       the terminal supports.  (See

       The  function  also restores the colors on the terminal to
       terminal-specific initial values.  The initial  background

                                                                1

color(3curses)                                     color(3curses)

       color is assumed to be black for all terminals.

CCoolloorr IIddeennttiiffiiccaattiioonn
       The  function  redefines  color number color, on terminals
       that support the redefinition of colors, to have the  red,
       green,  and  blue  intensity  components specified by red,
       green, and blue, respectively.  Calling also  changes  all
       occurrences  of  the  specified color on the screen to the
       new definition.

       The function identifies the intensity components of  color
       number  color.   It stores the red, green, and blue inten-
       sity components of this color in the addresses pointed  to
       by red, green, and blue, respectively.

       For  both  functions,  the  color  argument must be in the
       range from 0 to and including COLORS-1.   Valid  intensity
       values  range  from  0  (no intensity component) up to and
       including 1000 (maximum intensity in that component).

UUsseerr--DDeeffiinneedd CCoolloorr PPaaiirrss
       Calling defines or redefines  color-pair  number  pair  to
       have  foreground  color f and background color b.  Calling
       changes any characters that were displayed  in  the  color
       pair's  old definition to the new definition and refreshes
       the screen.

       After defining the color  pair,  the  macro  COLOR_PAIR(n)
       returns  the  value  of  color  pair n.  This value is the
       color attribute as it would be extracted  from  a  chtype.
       Conversely, the macro PAIR_NUMBER(value) returns the color
       pair number associated with the color attribute value.

       The function retrieves the component colors  of  a  color-
       pair number pair.  It stores the foreground and background
       color numbers in the variables pointed  to  by  f  and  b,
       respectively.

       With  and  the  value of pair must be in a range from 0 to
       and including COLOR_PAIRS-1.  (There may be an implementa-
       tion-specific  upper limit on the valid value of pair, but
       any such limit is at least 63.)  Valid values for f and  b
       are the range from 0 to and including COLORS-1.

RReettuurrnn vvaalluuee
       The  function  returns TRUE if the terminal can manipulate
       colors; otherwise, it returns FALSE.

       The function returns TRUE if the terminal supports  colors
       and  can  change  their definitions; otherwise, it returns
       FALSE.

       Upon successful completion, the other functions return OK;
       otherwise, they return ERR.

                                                                2

color(3curses)                                     color(3curses)

EErrrroorrss
       No errors are defined.

UUssaaggee
       To  use  these  functions,  must  be called, usually right
       after

       The and functions facilitate writing  terminal-independent
       programs.   For  example,  a  programmer  can  use them to
       decide whether to use color or some other video attribute.

       On color terminals, a typical value of COLORS is 8 and the
       macros such as COLOR_BLACK return a value within the range
       from  0  to and including 7.  However, applications cannot
       rely on this to be true.

SSttaannddaarrddss CCoonnffoorrmmaannccee
       The Single UNIX Specification, Version 2; The Open  Group.

RReeffeerreenncceess

                                                                3

