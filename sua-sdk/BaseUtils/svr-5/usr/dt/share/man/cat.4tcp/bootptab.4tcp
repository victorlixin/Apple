

bootptab(4tcp)                                     bootptab(4tcp)

SSyynnooppssiiss
       hostname:tg=value ... :tg=value ... :tg=value ...

DDeessccrriippttiioonn
       This  manual page documents the required syntax and seman-
       tics for the configuration database file for the  Internet
       Bootstrap  Protocol  server.   By  default, bootpd expects
       this file to be located at /etc/inet/bootptab.  The format
       of  this  file  is  as  shown  above where hostname is the
       actual name of a BOOTP client (or a ``dummy  entry'')  and
       tg  is  a two-character, case-sensitive tag symbol used to
       represent a host parameter.  These parameter  declarations
       are  separated  by  colons  (:).   Dummy  entries  have an
       invalid hostname (one with a ``.'' as the first character)
       and  are  used  to  provide  default  values used by other
       entries via the ``tc=.dummy-entry'' mechanism.  Most  tags
       must  be  followed by an equals-sign and a value as above.
       Some may also appear in a boolean form with no value (that
       is, :tg:).

       The currently recognized tags are:

       Bootfile  Bootfile  size in 512-octet blocks Cookie server
       address list Merit  dump  file  Domain  name  Domain  name
       server  address  list  Extension file Gateway address list
       Host  hardware  address  Bootfile  home   directory   Send
       client's  hostname  to  client Host hardware type (see RFC
       1340 ``Assigned Numbers'')  Impress  server  address  list
       Host IP address Log server address list LPR server address
       list IEN-116 name server address list Reply address  over-
       ride  Resource  location protocol server address list Root
       path to mount as root TFTP server  address  client  should
       use  Host  subnet mask Swap server address Table continua-
       tion (points to similar ``template'' host entry) TFTP root
       directory  used  by ``secure'' TFTP servers Time offset in
       seconds from UTC Time server  address  list  Vendor  magic
       cookie  selector  There is also a generic tag, Tn, where n
       is an RFC 1084 vendor field tag number. Thus it is  possi-
       ble  to immediately take advantage of future extensions to
       RFC 1084 without being  forced  to  modify  bootpd  first.
       Generic data may be represented as either a stream of hex-
       adecimal numbers or as a quoted string  of  ASCII  charac-
       ters.  The  length  of  the  generic data is automatically
       determined and inserted into the proper  field(s)  of  the
       RFC 1084-style bootp reply.

       The  following tags take a whitespace-separated list of IP
       addresses: cs, ds, gw, im, lg, lp, ns,  ra,  rl,  and  ts.
       The ip, sa, sw, and sm tags each take a single IP address.
       All  IP  addresses  are  specified  in  standard  Internet
       ``dot''  notation and may use decimal, octal, or hexadeci-
       mal numbers (octal numbers begin with 0, hexadecimal  num-
       bers  begin  with  '0x'  or  '0X').   Any IP addresses may
       alternatively be specified as a hostname,  causing  bootpd

                                                                1

bootptab(4tcp)                                     bootptab(4tcp)

       to  lookup  the IP address for that host name using If the
       ip tag is not specified,  bootpd  will  determine  the  IP
       address  using  the  entry  name as the host name.  (Dummy
       entries use an invalid host name  to  avoid  automatic  IP
       lookup.)

       If   the  amount  of  vendor-extension  information  in  a
       bootptab file entry is greater than 64  bytes,  you  must:
       specify  the  ef  tag  with  a  filename  value,  such  as
       ``ef=/bootfile/clientname'' run  the  bootpef  command  to
       compile  the  vendor-extension information into the speci-
       fied file; see

       NOTE: If an ef tag is specified in an entry and  you  fail
       to  run  bootpef,  some  vendor-extension  information may
       never be sent to the client.  See  RFC  1533  to  identify
       which tags specify vendor-extension data.  If an entry has
       more than 64 bytes and the ef tag is  not  specified,  the
       bootpd  server will send only 64 bytes in the reply packet
       and log which information did not fit.  When an ef tag  is
       present,  the bootpd server sends a limited amount of ven-
       dor-extension data and the specified pathname in the  ven-
       dor-extension   field  of  the  BOOTREPLY  packet;  bootpd
       assumes the client will retrieve the remainder of the ven-
       dor-extension  information  from  the extension file.  The
       specified pathname can be either a relative pathname or an
       absolute pathname.  The location of a relative pathname is
       determined by the current directory of  bootpef.   The  td
       and  hd  tag  values have no effect on pathnames specified
       with the ef tag.

       The ht tag specifies the hardware type code as  either  an
       unsigned  decimal, octal, or hexadecimal integer or one of
       the following symbolic names:  ethernet or ether for  10Mb
       Ethernet;   ethernet3   or  ether3  for  3Mb  experimental
       Ethernet; ieee802, tr, or token-ring  for  IEEE  802  net-
       works;  pronet  for  Proteon  ProNET Token Ring; or chaos,
       arcnet, or ax.25 for  Chaos,  ARCNET,  and  AX.25  Amateur
       Radio networks, respectively.  The ha tag takes a hardware
       address which may be  specified  as  a  host  name  or  in
       numeric  form.   Note that the numeric form must be speci-
       fied in hexadecimal; optional  periods  and/or  a  leading
       '0x'  may be included for readability.  The ha tag must be
       preceded by the ht tag (either explicitly  or  implicitly;
       see  tc  below).  If the hardware address is not specified
       and the  type  is  specified  as  either  ``ethernet''  or
       ``ieee802'',  then  bootpd will try to determine the hard-
       ware address using ether_hostton (see

       The hostname, home  directory,  and  bootfile  values  are
       ASCII strings which may be optionally surrounded by double
       quotes (").

       The client's request and the values of the td, hd, and  bf

                                                                2

bootptab(4tcp)                                     bootptab(4tcp)

       tags determine how the server fills in the boot file field
       of the BOOTREPLY packet.  If the client specifies any boot
       file  pathname  at all, the bootpd server sends that exact
       pathname back to the client in the  BOOTREPLY  packet;  it
       does  no  processing.  If the client specifies a null boot
       file, the server builds a boot file pathname from the  td,
       hd, and bf tags.  The server simply combines the values of
       these tags in the  order  listed  above  and  returns  the
       result  in  the BOOTREPLY packet.  All three tags need not
       be present.

       NOTE: The td and hd tags must start with ``/''  or  bootpd
       will send no reply for that entry.

       The  server provides a security feature to change its root
       directory using the system call. The td tag may be used to
       inform  bootpd  of  this  special  root  directory used by
       tftpd. If the td tag is present, the hd tag is read  rela-
       tive  to  the  root directory specified by the td tag. For
       example, if the real absolute path to  your  BOOTP  client
       boot file is /tftpboot/bootfiles/bootimage, and tftpd uses
       /tftpboot as its ``secure'' directory,  then  specify  the
       following     in     bootptab:     :td=/tftpboot:hd=/boot-
       files:bf=bootimage: If your bootfiles are located directly
       in  /tftpboot, use: :td=/tftpboot:bf=bootimage: The sa tag
       may be used to specify the IP address  of  the  particular
       TFTP  server you wish the client to use. In the absence of
       this tag, bootpd will tell the client to perform  TFTP  to
       the same machine bootpd is running on.

       The  time offset to may be either a signed decimal integer
       specifying the client's time zone offset in  seconds  from
       UTC, or the keyword auto which uses the server's time zone
       offset. Specifying the to symbol as a boolean has the same
       effect as specifying auto as its value.

       The  bootfile  size  bs may be either a decimal, octal, or
       hexadecimal integer specifying the size of the bootfile in
       512-octet  blocks,  or  the  keyword auto which causes the
       server to automatically calculate  the  bootfile  size  at
       each  request.  As with the time offset, specifying the bs
       symbol as a boolean has the same effect as specifying auto
       as its value.

       The vendor magic cookie selector (the vm tag) may take one
       of the following keywords: auto  (indicating  that  vendor
       information   is  determined  by  the  client's  request),
       rfc1048 or rfc1084 (which always forces an RFC  1084-style
       reply), or cmu (which always forces a CMU-style reply).

       The hn tag is strictly a boolean tag; it does not take the
       usual equals-sign and value. Its presence  indicates  that
       the  hostname  should  be sent to RFC 1084 clients. bootpd
       attempts to send the entire hostname as it is specified in

                                                                3

bootptab(4tcp)                                     bootptab(4tcp)

       the  configuration  file;  if  this  will not fit into the
       reply packet, the name is shortened to just the host field
       (up  to  the first period, if present) and then tried.  In
       no case is  an  arbitrarily-truncated  hostname  sent  (if
       nothing reasonable will fit, nothing is sent).

       Often,  many  host entries share common values for certain
       tags (such as name servers, etc.). Rather than  repeatedly
       specifying  these tags, a full specification can be listed
       for one host entry and shared by others via the tc  (table
       continuation)  mechanism.   Often, the template entry is a
       dummy host which does not actually exist and  never  sends
       bootp requests. This feature is similar to the use feature
       of for similar terminals. Note that bootpd allows  the  tc
       tag  symbol to appear anywhere in the host entry. Informa-
       tion explicitly specified  for  a  host  always  overrides
       information  implied by a tc tag symbol, regardless of its
       location within the entry. The value of the tc tag may  be
       the  hostname  or  IP address of any host entry previously
       listed in the configuration file.

       Sometimes it is necessary to delete a specific  tag  after
       it  has  been  inferred via tc. This can be done using the
       construction tag @ which removes the effect of tag  as  in
       For  example,  to  completely  undo an IEN-116 name server
       specification, use ``:ns@:'' at an  appropriate  place  in
       the  configuration  entry.  After removal with @, a tag is
       eligible to be set again through the tc mechanism.

       Blank lines and lines beginning with # are ignored in  the
       configuration  file.  Host  entries are separated from one
       another by newlines; a single host entry may  be  extended
       over multiple lines if the lines end with a backslash (\).
       It is also acceptable for lines to be longer than 80 char-
       acters.  Tags  may appear in any order, with the following
       exceptions: the hostname must be the very first  field  in
       an  entry  and the hardware type must precede the hardware
       address.

       An  example  /etc/inet/bootptab  file  follows:  #  Sample
       bootptab file (domain=andrew.cmu.edu)

       .default:\         :hd=/usr/boot:bf=null:\        :ds=net-
       server, lancaster:\      :ns=pcs2,  pcs1:\       :ts=pcs2,
       pcs1:\       :sm=255.255.255.0:\       :gw=gw.cs.cmu.edu:\
            :hn:to=-18000:

       carnegie:ht=6:ha=7FF8100000AF:tc=.default:           bald-
       win:ht=1:ha=0800200159C3:tc=.default:
       wylie:ht=1:ha=00DD00CADF00:tc=.default:
       arnold:ht=1:ha=0800200102AD:tc=.default:            baird-
       ford:ht=1:ha=08002B02A2F9:tc=.default:              baker-
       stown:ht=1:ha=08002B0287C8:tc=.default:

                                                                4

bootptab(4tcp)                                     bootptab(4tcp)

       # Special domain name server and option tags for next host
       butlerjct:ha=08002001560D:ds=128.2.13.42:\
            :T37=0x12345927AD3BCF:\         :T99="Special   ASCII
       string":\      :tc=.default:

       gastonville:ht=6:ha=7FFF81000A47:tc=.default:        hahn-
       town:ht=6:ha=7FFF81000434:tc=.default:               hick-
       man:ht=6:ha=7FFF810001BA:tc=.default:                 low-
       ber:ht=1:ha=00DD00CAF000:tc=.default:                 mto-
       liver:ht=1:ha=00DD00FE1600:tc=.default:

FFiilleess
       /etc/inet/bootptab

RReeffeerreenncceess
       RFC 951, RFC 1048, RFC 1084, RFC 1340, RFC 1497, RFC 1533

                                                                5

