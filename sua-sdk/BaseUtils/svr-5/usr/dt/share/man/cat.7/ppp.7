

ppp(7)                                                     ppp(7)

DDeessccrriippttiioonn
       The  Point-to-Point  Protocol (PPP) is a method for trans-
       mitting datagrams over point-to-point serial links.   This
       implementation of PPP is compliant with RFC 1332 (Internet
       Protocol Control Protocol (IPCP)), RFC 1333 (Link  Quality
       Monitoring  (LQM)),  RFC  1334, (PPP Authentication Proto-
       cols), RFC 1548, (Point-to-Point Protocol (PPP)), RFC 1618
       (PPP  over  ISDN),  RFC 1962 (Compression Control Protocol
       (CCP)), and RFC 1990 (Multilink Protocol  (MP)).   PPP  is
       not  specific to IP like SLIP, but the current implementa-
       tion only  supports  transmission  of  IP  datagrams  over
       serial links.

       This  implementation  permits  the  use of an asynchronous
       driver that can  perform  the  packetization  and  framing
       required  by  PPP  to  send  data over a smart third-party
       serial port device. Such a driver offloads this processing
       from  PPP onto the hardware.  Third-party drivers and mod-
       ules are specified by a push option specified for  a  link
       (physical device) definition in the PPP configuration (see
       The PPP daemon configures the PPP  stack  with  the  named
       drivers and modules by pushing them in the specified order
       onto the  STREAMS  stack  below  the  PPP  Control  Driver
       (PCID).   The pop option may be used to remove drivers and
       modules.  If push or pop options are not specified  for  a
       device,  the  PPP  daemon configures the default PPP stack
       for its type.

   PPPPPP ssttaacckk aarrcchhiitteeccttuurree
       The PPP daemon is responsible for building the PPP  stack,
       placing calls, negotiating protocols such as the Link Con-
       trol Protocol (LCP) and Network Control  Protocols  (NCP),
       implementing  bandwidth  control,  and  communicating with
       administration utilities such as The daemon does not  han-
       dle  data  communication between the Network Layer and the
       PPP driver after PPP negotiations  have  completed  and  a
       link  has  been  established. Because the daemon is multi-
       threaded, only one process is needed to handle administra-
       tion of all PPP interfaces.

       The  PPP  Control  Driver  (PCID) acts as a communications
       tunnel between the PPP daemon,  the  PPP  driver  and  the
       lower  part of the PPP stack.  It is used to construct the
       PPP stack interface to the DLPI  modules  for  synchronous
       and  asynchronous ISDN connections, to the STREAMS tty and
       serial drivers for asynchronous serial connections, and to
       third-party  framing  drivers for asynchronous serial con-
       nections over intelligent serial interfaces.

       The PPP STREAMS driver consists of multiplexer,  multilink
       and  compression  modules.  Many of the functions that the
       PPP driver performed in previous releases, such as authen-
       tication,  and link and network control, are now performed
       by the PPP daemon.

                                                                1

ppp(7)                                                     ppp(7)

FFiilleess
       /usr/include/sys/netinet/ppp.h
       /dev/ppp
       /dev/pcid

RReeffeerreenncceess
       RFC 1144, RFC 1332, RFC 1334, RFC 1471, RFC 1473, RFC 1548

                                                                2

