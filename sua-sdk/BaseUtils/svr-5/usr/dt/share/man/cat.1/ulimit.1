

ulimit(1)                                               ulimit(1)

SSyynnooppssiiss
       /usr/bin/ulimit -HSacdfmnstv [limit]

DDeessccrriippttiioonn
       This shell script executes the builtin command of the same
       name as implemented by the  /u95/bin/sh  shell.   See  for
       more information on this shell.  Use ulimit to set or dis-
       play a resource limit.  The available resource limits  are
       listed below.

       The  limit  for  a specified resource is set when limit is
       specified.  The value of limit can be a number in the unit
       specified  below  with  each resource, or the value unlim-
       ited.

       The -H and -S options specify whether the  hard  limit  or
       the  soft  limit,  respectively, for the given resource is
       set.  A hard limit cannot be increased once it is set.   A
       soft  limit  can  be increased up to the value of the hard
       limit.  If neither the -H nor -S options is specified, the
       limit  applies to both.  Only a process with SYSOPS privi-
       lege can increase a hard resource limit.

       If limit is omitted, the current soft  resource  limit  is
       displayed, unless -H is specified to print the hard limit.

       When more than one resource is specified, then  the  limit
       name and unit is printed before the value.

   CCoommmmaanndd ooppttiioonnss
       Lists  all  of the current resource limits.  The number of
       512-byte blocks on the size of core dumps.  The number  of
       K-bytes  on  the  size  of  the  data area.  The number of
       512-byte blocks on files that can be written by  the  cur-
       rent  process  and  its child processes (files of any size
       may be read).  On file systems (such as vxfs file systems)
       that  support large files, setting this limit to unlimited
       represents the largest file size  supported  on  the  file
       system.   See below.  The number of K-bytes on the size of
       physical memory.  The number of file descriptors  plus  1.
       The  number of K-bytes on the size of the stack area.  The
       number of CPU seconds to be used  by  each  process.   The
       number of K-bytes for virtual memory.

       If  no  option  is  given, -f is assumed; that is, you can
       specify a limit with or without the preceding  -f  option,
       and  both cases are interpreted as an attempt to raise the
       file size limit.

   OOppeerraannddss
       Gives the  resource-specific  limit  to  use  as  the  new
       resource  limit.   Sets  the  largest  allowable  resource
       limit.  It is necessary to set limit to the  value  unlim-
       ited for access to large files (greater than 2GB in size).

                                                                1

ulimit(1)                                               ulimit(1)

       See for more information.

   EEnnvviirroonnmmeenntt vvaarriiaabblleess
       The following environment variables affect  the  execution
       of  ulimit: Provide a default value for the international-
       ization variables that are unset  or  null.   If  LANG  is
       unset  or null, the corresponding value from the implemen-
       tation-specific default locale will be used.   If  any  of
       the  internationalization  variables  contains  an invalid
       setting, the utility will behave as if none of  the  vari-
       ables  had  been  defined.   If  set to a non-empty string
       value, override the values of all the other international-
       ization variables.  Determine the locale for the interpre-
       tation of sequences of bytes of text  data  as  characters
       (for  example, single- as opposed to multi-byte characters
       in arguments).  Determine the locale that should  be  used
       to  affect  the format and contents of diagnostic messages
       written to standard error.

   OOuuttppuutt
       The standard output is used when no limit operand is  pre-
       sent.   If  the  current  number of blocks is limited, the
       number of blocks in the current limit is written to  stan-
       dard output.

   EExxiitt ccooddeess
       An  exit code of 0indicates successful completion; an exit
       code greater than 0 indicates that a request for a  higher
       limit was rejected or an error occurred.

UUssaaggee
       Since  ulimit affects the current shell execution environ-
       ment, if it is called  in  a  separate  utility  execution
       environment, such as one of the following: nohup ulimit -f
       10000 env ulimit 10000 it will not affect  the  file  size
       limit of the caller's environment.

       Once a limit has been decreased by a process, it cannot be
       increased (unless a process has  SYSOPS  privilege),  even
       back to the original system limit.

EExxaammpplleess
       Set the file size limit to 51,200 bytes: ulimit -f 100

SSttaannddaarrddss CCoonnffoorrmmaannccee
       X/Open Portability Guide, Version 4.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr llaarrggee ffiillee ssuuppppoorrtt
       Large  files  (larger  than  2GB)  are  supported  in this
       release.  However, file size limits  are  only  discretely
       settable up to 2GB (more precisely, 2GB -1 byte).  Setting
       a file size limit greater than or equal to 2GB -1 has  the

                                                                2

ulimit(1)                                               ulimit(1)

       equivalent effect to setting the file size limit to unlim-
       ited.  unlimited is  currently  defined  as  RLIM_INFINITY
       (see resource.h).

                                                                3

