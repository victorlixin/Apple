

locale(1)                                               locale(1)

SSyynnooppssiiss
       locale [-a | -m] locale [-ck] name ...

DDeessccrriippttiioonn
       The  locale  command  writes information about the current
       locale environment, or all public locales, to the standard
       output.  For the purposes of this section, a public locale
       is one provided by the implementation that  is  accessible
       to the application.

       When  locale  is  invoked without any arguments, it summa-
       rizes the current locale environment for each locale cate-
       gory  as  determined  by  the  settings of the environment
       variables LANG, LC_ALL, LC_COLLATE, LC_CTYPE, LC_MESSAGES,
       LC_NUMERIC, and LC_TIME.

       When  invoked  with  operands,  it writes values that have
       been assigned to the keywords in the locale categories, as
       follows:  Specifying a keyword name selects the named key-
       word and the category containing that keyword.  Specifying
       a  category  name  selects the named category and all key-
       words in that category.

   OOppttiioonnss
       The following options  are  supported:  Write  information
       about  all  available  public locales.  Write the names of
       selected locale categories; see ``Output''.  The -c option
       increases  readability  when  more  than  one  category is
       selected (for example, via more than one keyword  name  or
       via  a  category name).  It is valid both with and without
       the -k option.  Write the names  and  values  of  selected
       keywords.   The  implementation  may  omit values for some
       keywords; see ``Operands''.  Write names  of  all  charmap
       source files available on the system for use with

   OOppeerraannddss
       The name of a locale category (as defined in the name of a
       keyword  in  a  locale  category,  or  the  reserved  name
       charmap.   The  named category or keyword will be selected
       for output.  If a single name  represents  both  a  locale
       category  name  and  a keyword name in the current locale,
       the results are unpredictable.  Otherwise,  both  category
       and  keyword  names  can be specified as name operands, in
       any sequence.

   EEnnvviirroonnmmeenntt vvaarriiaabblleess
       The following environment variables affect  the  execution
       of  locale: Provide a default value for the international-
       ization variables that are unset  or  null.   If  LANG  is
       unset  or null, the corresponding value from the implemen-
       tation-specific default locale will be used.   If  any  of
       the  internationalization  variables  contains  an invalid
       setting, the utility will behave as if none of  the  vari-
       ables  had  been  defined.   If  set to a non-empty string

                                                                1

locale(1)                                               locale(1)

       value, override the values of all the other international-
       ization variables.  Determine the locale for the interpre-
       tation of sequences of bytes of text  data  as  characters
       (for  example, single- as opposed to multi-byte characters
       in arguments).  Determine the locale that should  be  used
       to  affect  the format and contents of diagnostic messages
       written to standard error.  If any of  the  international-
       ization variables contains an invalid setting, the utility
       will behave as if none of the variables had been  defined.
       The  LANG  and LC_* environment variables must specify the
       current locale environment to be written out; they will be
       used if the -a option is not specified.

   OOuuttppuutt
       If  locale is invoked without any options or operands, the
       names and values of the LANG and  LC_*  environment  vari-
       ables  described  in  this document will be written to the
       standard output, one variable per line, with  LANG  first,
       and each line using the following format.

       Only  those variables set in the environment and not over-
       ridden by LC_ALL will be written using this format: "vari-
       able_name=value" The names of those LC_* variables associ-
       ated with locale categories that are not set in the  envi-
       ronment or are overridden by LC_ALL will be written in the
       following  format:  "variable_name=\"implied_value\""  The
       implied_value  is  the  name  of  the locale that has been
       selected for that category, based on the  values  in  LANG
       and LC_ALL.

       The  value  and implied value shown above will be properly
       quoted for possible later reentry to the shell.  The value
       will  not be quoted using double-quotes (so that it can be
       distinguished by the user from  the  implied  value  case,
       which always requires double-quotes).

       The  LC_ALL variable will be written last, using the first
       format shown above.  If it is not set, it will be  written
       as:  "LC_ALL="  If  any arguments are specified: If the -a
       option is specified, the names of all the  public  locales
       will  be written one per line.  If the -c option is speci-
       fied, the names of all selected categories will be written
       one per line.

       If  keywords  are also selected for writing (see following
       items), the category name output will precede the  keyword
       output for that category.

       If  the -c option is not specified, the names of the cate-
       gories will not be written; only the keywords, as selected
       by the name operand, will be written.  If the -k option is
       specified, the names and values of selected keywords  will
       be written.  If a value is non-numeric, it will be written
       in the following format: "keyword_name=\"value\""  If  the

                                                                2

locale(1)                                               locale(1)

       keyword was charmap, the name of the charmap (if any) that
       was specified via the -f option when the locale  was  cre-
       ated  will  be  written,  with the word charmap as keyword
       name.

       If a value is numeric, it will be written in the following
       format: "keyword_name=value" Compound keyword values (list
       entries) will be separated in the  output  by  semicolons.
       When  included  in keyword values, the semicolon, the dou-
       ble-quote, the backslash and any control character will be
       preceded  (escaped)  with the escape character.  If the -k
       option is not specified, selected keyword values  will  be
       written one per line.

       If  the  keyword  was charmap, the name of the charmap (if
       any) that was specified via the -f option when the  locale
       was  created  will be written.  If the -m option is speci-
       fied, then a list of all available charmaps will be  writ-
       ten  one  per  line, where the charmap name is in a format
       suitable for use as the option-argument to the -f  option.

   EExxiitt ccooddeess
       An  exit  values  of  0  indicates  that all the requested
       information was found and  output  successfully;  an  exit
       code greater than 0 indicates that an error occurred.

UUssaaggee
       This  implementation  of  locale  does  not  write out the
       actual values for keywords in the categories LC_CTYPE  and
       LC_COLLATE   (except   for   the  char  class  keyword  of
       LC_CTYPE), but does write out the categories (allowing  an
       application  to  determine,  for  example, which character
       classes are available).

   EExxaammpplleess
       In the following examples, the assumption is  that  locale
       environment  variables  are  set as follows: LANG=locale_x
       LC_COLLATE=locale_y The command locale would result in the
       following    output:   LANG=locale_x   LC_CTYPE="locale_x"
       LC_COLLATE=locale_y                     LC_TIME="locale_x"
       LC_NUMERIC="locale_x"    LC_MONETARY="locale_x"    LC_MES-
       SAGES="locale_x" LC_ALL= The command  LC_ALL=POSIX  locale
       -ck   decimal_point   would   produce:   LC_NUMERIC  deci-
       mal_point="."  The following command shows an  application
       of locale to determine whether a user-supplied response is
       affirmative: if  printf  "%s\n"  "$response"  |  grep  -Eq
       "$(locale  yesexpr)" then affirmative processing goes here
       else non-affirmative processing goes here fi

RReeffeerreenncceess

                                                                3

