

tput(1)                                                   tput(1)

SSyynnooppssiiss
       tput [-Ttype] capname [parms ...]

       tput [-Ttype] init

       tput [-Ttype] reset

       tput [-Ttype] longname

       tput -S  <<

DDeessccrriippttiioonn
       tput uses the terminfo database to make the values of ter-
       minal-dependent capabilities and information available  to
       the  shell  (see  to  initialize or reset the terminal, or
       return the long name of the requested terminal type.  tput
       outputs  a string if the attribute (capability name) is of
       type string, or an integer if the  attribute  is  of  type
       integer.  If the attribute is of type boolean, tput simply
       sets the exit code (0 for TRUE if  the  terminal  has  the
       capability,  1  for FALSE if it does not), and produces no
       output.  Before using a value returned on standard output,
       the  user should test the exit code ($?, see to be sure it
       is 0.  (See the Exit codes and Diagnostics sections.)  For
       a complete list of capabilities and the capname associated
       with each, see indicates the type of  terminal.   Normally
       this  option  is unnecessary, because the default is taken
       from the environment variable TERM.  If -T  is  specified,
       then  the  shell variables LINES and COLUMNS and the layer
       size will not be referenced.  indicates the attribute from
       the  terminfo database.  If the attribute is a string that
       takes parameters, the arguments parms will be instantiated
       into  the  string.  An all numeric argument will be passed
       to the attribute as a number.  allows more than one  capa-
       bility  per  invocation of tput.  The capabilities must be
       passed to tput from the standard input instead of from the
       command  line  (see example).  Only one capname is allowed
       per line.  The -S option changes the meaning of the 0  and
       1  boolean  and string exit codes (see the Exit codes sec-
       tion).  If the terminfo database is present and  an  entry
       for  the  user's  terminal exists (see -Ttype, above), the
       following will occur: if present, the terminal's  initial-
       ization strings will be output (is1, is2, is3, if, iprog),
       any delays (for example, newline) specified in  the  entry
       will  be  set  in  the  tty driver, tabs expansion will be
       turned on or off according to  the  specification  in  the
       entry, and if tabs are not expanded, standard tabs will be
       set (every 8 spaces).  If an entry does  not  contain  the
       information  needed  for any of the four above activities,
       that  activity  will  silently  be  skipped.   Instead  of
       putting  out  initialization strings, the terminal's reset
       strings will be output if present (rs1, rs2, rs3, rf).  If
       the  reset  strings  are  not  present, but initialization
       strings are, the initialization strings  will  be  output.

                                                                1

tput(1)                                                   tput(1)

       Otherwise,  reset  acts  identically to init.  If the ter-
       minfo database is present and an entry for the user's ter-
       minal exists (see -Ttype above), then the long name of the
       terminal will be put out.  The long name is the last  name
       in  the  first  line  of the terminal's description in the
       terminfo database.

   IInntteerrnnaattiioonnaall ffuunnccttiioonnss
       capnames for international functionality can also be spec-
       ified.

FFiilleess
       compiled  terminal  description  database libcurses header
       file (see terminfo header file (see tab settings for  some
       terminals,  in  a  format  appropriate to be output to the
       terminal (escape sequences that set margins and tabs); for
       more information, see the ``Tabs and Initialization'' sec-
       tion of

EExxiitt ccooddeess
       If capname is of type boolean, a value of  0  is  set  for
       TRUE and 1 for FALSE unless the -S option is used.

       If  capname  is of type string, a value of 0 is set if the
       capname is defined for this terminal type  (the  value  of
       capname  is  returned on standard output); a value of 1 is
       set if capname is not defined for this  terminal  type  (a
       null value is returned on standard output).

       If  capname is of type boolean or string and the -S option
       is used, a value of 0 is returned  to  indicate  that  all
       lines were successful.  No indication of which line failed
       can be given so exit code 1 will never appear.  Exit codes
       2, 3, and 4 retain their usual interpretation.

       If capname is of type integer, a value of 0 is always set,
       whether or not capname is defined for this terminal  type.
       To determine if capname is defined for this terminal type,
       the user must test the value of standard output.  A  value
       of  -1 means that capname is not defined for this terminal
       type.

       Any other exit code indicates an error; see  the  Diagnos-
       tics section.

DDiiaaggnnoossttiiccss
       tput  sets  the following exit codes and prints the corre-
       sponding diagnostics: -1 (capname is  a  numeric  variable
       that  is  not  specified in the terminfo database for this
       terminal type; for example:  tput  -T450  lines  and  tput
       -T2621  xmc)  No  error  message  is printed; see the Exit
       codes section.  Usage error Unknown terminal  type  or  no
       terminfo database Unknown terminfo capability capname

                                                                2

tput(1)                                                   tput(1)

CCoommppaattiibbiilliittyy
       This command works with the enhanced terminfo format spec-
       ified by The Single  Specification, Version 2; see Earlier
       versions  of  this  command used the older terminfo format
       described on

RReeffeerreenncceess
EExxaammpplleess
       In Terminal windows on the Desktop (xterm  windows),  tput
       bold  will  change  the font used to the font defined with
       the -fb option or the boldFont resource of xterm; if these
       are  not used, this option to tput will result in an unus-
       able font in the Terminal window.  The  Fonts  application
       in  the  Preferences folder of the Desktop will change the
       xterm font class to a single font, so that both  the  font
       and boldFont resources are the same font; this makes xterm
       use artificial emboldening to achieve a bold font for Ter-
       minal  windows.   The  use  of tput sgr0 will turn off the
       bold mode in a Terminal window.  Initialize  the  terminal
       according to the type of terminal in the environment vari-
       able TERM.  This command should be included in  everyone's
       .profile  after  the  environment  variable  TERM has been
       exported, as illustrated on the  manual  page.   Reset  an
       AT&T 5620 terminal, overriding the type of terminal in the
       environment variable TERM.  Send the sequence to move  the
       cursor  to row zero, column zero (the upper left corner of
       the screen, usually known as  the  ``home''  cursor  posi-
       tion).   Echo  the  clear-screen  sequence for the current
       terminal.  Print the number of  columns  for  the  current
       terminal.   Print the number of columns for the 450 termi-
       nal.  Set the shell variables bold, to begin standout mode
       sequence (usually reverse video in a Desktop Terminal win-
       dow), and offbold, to end standout mode sequence, for  the
       current  terminal.   This  might  be followed by a prompt:
       echo "${bold}Please enter  your  name:  ${offbold}\c"  Set
       exit  code  to indicate if the current terminal is a hard-
       copy terminal.  Send the sequence to move  the  cursor  to
       row  23,  column 4.  Print the long name from the terminfo
       database for the type of terminal specified in  the  envi-
       ronment variable TERM.  This example shows tput processing
       several capabilities  in  one  invocation.   This  example
       clears the screen, moves the cursor to position 10, 10 and
       turns on bold (extra bright) mode.  The list is terminated
       by an exclamation mark !  on a line by itself.

                                                                3

