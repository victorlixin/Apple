

ls(1)                                                       ls(1)

SSyynnooppssiiss
       ls [-AabCcdeFfgiLlmnopqRrstux1] [ -Ws |-Wv ] [file . . . ]
       -Ws |-Wv

       ls [-abCcdeFfgiLlmnopqRrstux1] [-Z|-z] [file . . . ]

       l [-AabCcdeFfgiLnopqRrstux1] [ -Ws |-Wv ] [file .  .  .  ]
       -Ws |-Wv

       lc  [-AabcdeFfgiLnopqRrstux1]  [  -Ws |-Wv ] [file . . . ]
       -Ws |-Wv

       lf [-AabcdefgiLnopqRrstux1] [ -Ws |-Wv ] [file . . . ] -Ws
       |-Wv

       lr [-AabcdeFfgiLnopqrstux1] [ -Ws |-Wv ] [file . . . ] -Ws
       |-Wv

       lx [-AabCcdeFfgiLnopqrstu1] [ -Ws |-Wv ] [file . . . ] -Ws
       |-Wv

DDeessccrriippttiioonn
       For  each directory argument, ls lists the contents of the
       directory; for each file argument, ls repeats its name and
       any  other  information  requested.   The output is sorted
       alphabetically by default.  When arguments are not  given,
       the  current  directory is listed.  When several arguments
       are given, the arguments are first  sorted  appropriately,
       but  file  arguments  appear  before directories and their
       contents.  ls processes supplementary code set  characters
       according  to  the  locale  specified  in the LC_CTYPE and
       LC_COLLATE environment variables (see LANG  on  except  as
       noted under the -b and -q options below.

       If the Application Compatibility Package is installed, the
       command lc functions the same as ls  except  that  the  lc
       default  output  format is columnar, even if the output is
       redirected.

       The remaining commands are synonyms of ls with  particular
       options. They are provided for compatibility with previous
       implementations.  Specifying a  redundant  options  of  ls
       does  with  one of of these commands (for example, -F with
       lf) does not cause an error.

       l provides a long listing, one file per line, by  default.
       If  a file is a symbolic link, l displays the inode infor-
       mation of the file at the end of the chain, and appends  @
       to  the name of the symbolic link. This command is equiva-
       lent to ls -l -Ws.

       lf lists files, indicating directories, executables,  sym-
       bolic links and named pipes (or FIFOs). lf is a variant of
       lc, so files  are  listed  in  columns  by  default.  This

                                                                1

ls(1)                                                       ls(1)

       command is equivalent to ls -F.

       lr  lists  files,  recursively  listing any subdirectories
       encountered. lr is a variant of lc, so files are listed in
       columns by default. This command is equivalent to ls -R.

       lx,  another  variant  of  lc, lists files in columns, but
       sorted across the page rather than down  the  page.   This
       command is equivalent to ls -x.

       If  the Enhanced Security Utilities are installed and run-
       ning, an unprivileged user is restricted to display infor-
       mation  only  on files with Mandatory Access Control (MAC)
       levels that are dominated by the user's current level.   A
       user  with  the  appropriate privileges is able to display
       information on all files.

       There are three major listing formats.  The default format
       for  output  directed  to  a terminal is multi-column with
       entries sorted down the columns.  The options  -C  and  -x
       enable  multi-column  formats;  and  the -m option enables
       stream output format, in which files are listed across the
       page, separated by commas.

       To  determine  output  formats  for  the  -C,  -x,  and -m
       options, ls uses  an  environment  variable,  COLUMNS,  to
       determine  the number of positions available on one output
       line.  If this variable is not set, the terminfo  database
       is  used  to determine the number of columns, based on the
       environment variable TERM.  If this information cannot  be
       obtained, 80 columns are assumed.

       The  ls  command  has  the  following  options:  List  all
       entries. Entries whose name  begin  with  a  dot  (.)  are
       listed.  This option does not list current directory . and
       directory above ...  List  all  entries,  including  those
       that  begin  with  a  period  (.),  which are normally not
       listed.  Force printing of non-printable characters to  be
       in  the octal \ddd notation.  All multibyte characters are
       considered printable.  Multi-column  output  with  entries
       sorted  down the columns.  This is the default output for-
       mat.  Use time of last modification of  the  i-node  (file
       created,  mode  changed,  and  so  on) for sorting (-t) or
       printing (-l).  If an argument is a directory,  list  only
       its name (not its contents); often used with -l to get the
       status of a directory.  Specify how to handle a vxfs  file
       that  has extent attribute information.  Extent attributes
       include reserved space, a fixed extent  size,  and  extent
       alignment.   It may not be possible to preserve the infor-
       mation if the destination file  system  does  not  support
       extent  attributes,  has  a  different block size than the
       source file system, or lacks free extents  appropriate  to
       satisfy  the  extent attribute requirements.  Valid values
       for extent_opt are: Issue  a  warning  message  if  extent

                                                                2

ls(1)                                                       ls(1)

       attribute  information cannot be kept (default).  Fail the
       copy if  extent  attribute  information  cannot  be  kept.
       Ignore extent attribute information entirely.

       When  used  with -l, -e displays extent attribute informa-
       tion for files with reserved space or fixed extent  sizes.
       Put  a  slash  (/)  after  each  filename if the file is a
       directory, an asterisk (*) if the file  is  executable,  a
       vertical  bar  (|)  if it is a FIFO, and an at sign (@) if
       the file is a symbolic link.  Force each  argument  to  be
       interpreted as a directory and list the name found in each
       slot.  This option turns off -l, -t, -s, and -r, and turns
       on  -a;  the order is the order in which entries appear in
       the directory.  The same as -l, except that the  owner  is
       not  printed.   For  each file, print the i-node number in
       the first column of the report.  When listing  status,  if
       an  argument  is  a  symbolic link, list the status of the
       file or directory referenced by the link rather than  that
       of  the  link  itself.   List in long format, giving mode,
       number of links, owner, group, size in bytes, and date and
       time  of  last  modification  for  each file.  The date is
       given in the locale specified by the  LC_TIME  environment
       variable.   If  the file is a special file, the size field
       contains the major and minor device numbers rather than  a
       size.   If  the  file  is a symbolic link, the filename is
       printed followed by ``->'' and the pathname of the  refer-
       enced file.  Stream output format; files are listed across
       the page, separated by commas.  The  same  as  -l,  except
       that  the owner's UID and group's GID numbers are printed,
       rather than the associated character strings.  The same as
       -l, except that the group is not printed.  Put a slash (/)
       after each filename if the file  is  a  directory.   Force
       printing  of non-printable characters in file names as the
       character question mark (?).  All multibyte characters are
       considered  printable.   Recursively  list  subdirectories
       encountered.  Reverse the order of sort to get the reverse
       of  the  locale's  collation  sequence  or oldest first as
       appropriate.  Give  size  in  blocks,  including  indirect
       blocks,  for  each entry.  Since vxfs allocates extents, a
       copied file or a file retrieved from an archive may or may
       not  need  the  same number of indirect address extents as
       the original file; thus the blocks reported by this option
       may  be different. The size and contents of the file, how-
       ever, are identical.  Sort by time  stamp  (latest  first)
       then  by name.  The default is the last modification time.
       (See -n and -c.)  Use time of last access instead of  last
       modification  for sorting (with the -t option) or printing
       (with the -l option).  Multi-column  output  with  entries
       sorted  across  rather  than down the page.  Prints a long
       listing similar to that obtained using the -l  option.  If
       the  file  is  a  symbolic  link, this option displays the
       inode details of the file at the end of the symbolic  link
       chain,  and appends an @ to the name of the symbolic link.
       Prints a long listing similar to that obtained  using  the

                                                                3

ls(1)                                                       ls(1)

       -l option. If the file is the start of a chain of symbolic
       links, this option displays the inode details of the  file
       at  the  end of the chain, and prints the pathnames of all
       files in the chain separated by ``->'' symbols.  Print one
       entry per line of output.  Print the alias of the security
       level for each file.  (Valid only if the Enhanced Security
       Utilities  are  installed.)   Print  the  fully  qualified
       security level for each file.  (Valid only if the Enhanced
       Security Utilities are installed.)

       The  -z  and -Z options are mutually exclusive.  If the -z
       option is specified and there is not an alias assigned  to
       the level, the decimal value of the level identifier (LID)
       is displayed.  If the -z or -Z option is specified and the
       level is in the valid-inactive state, the decimal value of
       the LID is displayed.   (See  for  a  description  of  LID
       states.)  The mode printed under the -l option consists of
       eleven possible characters.  The first  character  may  be
       one  of the following: if the entry is a directory; if the
       entry is a symbolic link; if the entry is a block  special
       file;  if the entry is a character special file; the entry
       is  shared data (memory) file; if  the  entry  is  a  fifo
       (named  pipe)  special file; the entry is a  semaphore; if
       the entry is a regular file.  The next  9  characters  are
       interpreted  as  three sets of three bits each.  The first
       set refers to the owner's permissions; the next to permis-
       sions  of  others  in  the user-group of the file; and the
       last to all others.  Within each set, the three characters
       indicate  permission  to read, write, and execute the file
       as a program, respectively.  For a directory,  ``execute''
       permission is interpreted to mean permission to search the
       directory for a specified file.

       The last character indicates  whether  an  Access  Control
       List  (ACL)  exists  for  the file.  If an ACL exists, the
       last character is a plus sign (+);  if  an  ACL  does  not
       exist,  there is no character printed.  ACLs are supported
       only if the file system is of type sfs or vxfs.

       ls -l (the long list) prints its output as follows: -rwxr-
       wxrwx   1  smith   dev    10876  May 16 9:42 part2 Reading
       from right to left, you see  that  the  current  directory
       holds  one  file,  named  part2.  Next, the last time that
       file's contents were modified was 9:42  A.M.  on  May  16.
       The file contains 10,876 bytes.  The owner of the file, or
       the user, belongs to the  group  dev  (perhaps  indicating
       ``development''), and their login name is smith.  The num-
       ber, in this case 1, indicates the number of links to file
       part2  (see  Finally,  the  dash and letters tell you that
       user, group, and others have permissions to  read,  write,
       and  execute  part2.  Note also that an ACL does not exist
       for part2.

       The execute (x) symbol here occupies the third position of

                                                                4

ls(1)                                                       ls(1)

       the  three-character  sequence.  A - in the third position
       would have indicated a denial of execution permissions.

       The permissions are indicated  as  follows:  the  file  is
       readable  the  file is writable the file is executable the
       indicated permission  is  not  granted  mandatory  locking
       occurs  during  access (the set-group-ID bit is on and the
       group execution bit is off);  if  the  POSIX2  environment
       variable is set, s is printed instead of l the set-user-ID
       or set-group-ID bit is on, and the corresponding  user  or
       group  execution  bit  is also on undefined bit-state (the
       set-user-ID bit is on and the user execution bit  is  off)
       the 1000 (octal) bit, or sticky bit, is on (see and execu-
       tion is on the 1000 bit is turned on, and execution is off
       (undefined  bit-state) For user and group permissions, the
       third position is sometimes occupied by a character  other
       than  x  or -.  s also may occupy this position, referring
       to the state of the set-ID bit, whether it be  the  user's
       or  the group's.  The ability to assume the same ID as the
       user during execution is, for example, used  during  login
       when  you begin as root but need to assume the identity of
       the user you login as.

       In the case of the sequence of group  permissions,  l  may
       occupy the third position.  l refers to mandatory file and
       record locking.  This permission describes a file's  abil-
       ity  to  allow  other files to lock its reading or writing
       permissions during access.

       For other permissions, the third position may be  occupied
       by t or T.  These refer to the state of the sticky bit and
       execution permissions.

       The -e option (used with  -l)  displays  extent  attribute
       information  as  follows: -rwxrwxrwx 1 smith dev 10876 May
       16 9:42 part2 :res 36 ext 3  align  noextend  This  output
       line  indicates  a  file  with 36 blocks of reservation, a
       fixed extent size of 3 blocks, all extents  aligned  to  3
       block boundaries, and the file unable to be grown once the
       current reservation is exhausted.

       The format of the date given in the long listing is depen-
       dent on the environment variable LC_TIME (the examples are
       in the C locale).  (See LANG on

FFiilleess
       user IDs for ls -l and ls -o group IDs for ls -l and ls -g
       terminal  information  database  language-specific message
       file (see LANG on

EExxaammpplleess
       Some examples of file permissions: Readable, writable, and
       executable  by the user and readable by the group and oth-
       ers.  Readable, writable,  and  executable  by  the  user,

                                                                5

ls(1)                                                       ls(1)

       readable  and  executable  by  the  group  and others, and
       allows its user-ID to be assumed, during execution, by the
       user  presently  executing it.  Readable and writable only
       by the user and the group and can be locked during access.
       An  example  of  a file that has an ACL.  This describes a
       file that is readable, writable,  and  executable  by  the
       user,  at  most  readable and executable by the file group
       class entries, and readable only by all others.  The indi-
       vidual  ACL  entries may further restrict access for indi-
       vidual users and/or groups.

       If an  ACL  exists  for  a  file,  the  permissions  (also
       referred  to  as  the  base permission mode) represent the
       maximum permissions to the file, that is, ACL entries  may
       further restrict access to the file.

       The  complete  ACL, representing the actual permissions to
       the file, can be displayed using the getacl command.   The
       ls -a command prints the names of all files in the current
       directory, including those that  begin  with  a  dot  (.),
       which normally do not print.

       The  ls  -aisn  command provides information on all files,
       including those that begin with a dot (-a),  the  i-number
       --  the  memory  address of the i-node associated with the
       file -- printed in the left-hand column (-i); the size (in
       blocks)  of  the files, printed in the column to the right
       of the i-numbers (-s); finally, the report is displayed in
       the  numeric  version  of  the long list, printing the UID
       (instead of user name) and GID  (instead  of  group  name)
       numbers associated with the files.

       When  the  sizes of the files in a directory are listed, a
       total count  of  blocks,  including  indirect  blocks,  is
       printed.

RReeffeerreenncceess
NNoottiicceess
       Unprintable  characters  in  file  names  may  confuse the
       columnar output options.

       The total block count will be incorrect if there are  hard
       links among the files.

       The  -R  option  has been multithreaded and is implemented
       via nftw (walk a file tree).

       This command has been updated to handle files greater than
       2GB.

                                                                6

