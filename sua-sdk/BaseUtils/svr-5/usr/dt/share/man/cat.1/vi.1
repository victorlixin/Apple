

vi(1)                                                       vi(1)

SSyynnooppssiiss
       vi  [-t  tag] [-r file] [-l] [-L] [-wn] [-R] [-x] [-C] [-c
       command] file ...

       view [-t tag] [-r file] [-l] [-L] [-wn] [-R] [-x] [-C] [-c
       command] file ...

       vedit  [-t  tag]  [-r file] [-l] [-L] [-wn] [-R] [-x] [-C]
       [-c command] file ...

DDeessccrriippttiioonn
       vi (visual) is a display-oriented text editor based on  an
       underlying line editor ex.  It is possible to use the com-
       mand mode of ex from within vi and vice-versa.  The visual
       commands  are  described  on  this manual page; how to set
       options (like automatically numbering lines and  automati-
       cally  starting a new output line when you press ) and all
       ex line editor commands are described on the manual  page.

       When  using vi, changes you make to the file are reflected
       in what you see on your terminal screen.  The position  of
       the cursor on the screen indicates the position within the
       file.

       These utilities process and display supplementary code set
       characters  according  to  the  locale  specified  in  the
       LC_CTYPE environment variable (see LANG on except that the
       character  x  given  to  the r, f, F, m, t, and T commands
       (see ``Command summary''  below)  must  be  a  single-byte
       character.   All  processing, including regular expression
       pattern searching, is performed on characters, not columns
       or  bytes.  In command mode, the utilities recognize argu-
       ments to indicate the number of characters.   Multi-column
       characters  are  split  over two lines when using the full
       screen width.  The same number of ASCII >  characters  are
       displayed as the split character's display width.

   IInnvvooccaattiioonn ooppttiioonnss
       The  following  invocation  options  are interpreted by vi
       (previously  documented  options  are  discussed  in   the
       ``Notices''  section  of  this manual page): Edit the file
       containing the tag and position the editor at its  defini-
       tion.   Tags  in the tag file must be in increasing order.
       Edit file after an editor or system crash.  (Recovers  the
       version  of  file  that  was  in the buffer when the crash
       occurred.)  Set up for editing LISP  programs.   List  the
       name of all files saved as the result of an editor or sys-
       tem crash.  Set the default window size  to  n.   This  is
       useful  when  using  the  editor  over  a slow speed line.
       Readonly mode; the readonly flag is set, preventing  acci-
       dental  overwriting  of the file.  Encryption option; when
       used, vi simulates the X command of  ex  and  prompts  the
       user  for  a key.  This key is used to encrypt and decrypt
       text using the algorithm of  the  crypt  command.   The  X

                                                                1

vi(1)                                                       vi(1)

       command  makes an educated guess to determine whether text
       read in is encrypted or not.  The temporary buffer file is
       encrypted  also,  using  a  transformed version of the key
       typed in for the -x option.  See Also, see the ``Notices''
       section  at  the  end  of  this  manual  page.  Encryption
       option; same as the -x option, except  that  vi  simulates
       the  C command of ex.  The C command is like the X command
       of ex, except that all text read in  is  assumed  to  have
       been  encrypted.  Begin editing by executing the specified
       editor command (usually a search or positioning  command).

       The  file  argument  indicates  one  or  more  files to be
       edited.

       The view invocation is the same  as  vi  except  that  the
       readonly flag is set.

       The vedit invocation is intended for beginners.  It is the
       same as vi except that the report flag is set  to  1,  the
       showmode  and  novice  flags  are set, and magic is turned
       off.  These defaults make it easier to learn  how  to  use
       vi.

   vvii mmooddeess
       Normal  and  initial  mode.  Other modes return to command
       mode upon completion.
        (escape) is used to cancel a partial command.  Entered by
       setting  any of the following options: a A i I o O c C s S
       R .  Arbitrary text may then be entered.   Input  mode  is
       normally  terminated with  character, or, abnormally, with
       an interrupt.  Reading input for : / ? or !; terminate  by
       pressing ; an interrupt cancels termination.

CCoommmmaanndd ssuummmmaarryy
       In the descriptions,
        stands for the return key and  stands for the escape key.

   SSaammppllee ccoommmmaannddss
       used to move the cursor same as  arrow  keys  insert  text
       change  word to new pluralize word (end of word; append s;
       escape from input state) delete a character delete a  word
       delete a line delete 3 lines undo previous change exit vi,
       saving changes quit, discarding changes  search  for  text
       scroll up or down any ex or ed command

   CCoouunnttss bbeeffoorree vvii ccoommmmaannddss
       Numbers  can  be typed as a prefix to some commands.  They
       are interpreted in one of these ways.  interpret  prefixed
       numbers  as line/column numbers interpret prefixed numbers
       as the scroll amount interpret prefixed numbers as  repeat
       effects.

   IInntteerrrruuppttiinngg,, ccaanncceelliinngg
       end insert or incomplete cmd (delete or rubout) interrupts

                                                                2

vi(1)                                                       vi(1)

   FFiillee mmaanniippuullaattiioonn
       if file modified, write and exit;  otherwise,  exit  write
       back  changes  forced  write, if permission originally not
       valid quit quit, discard changes edit  file  name  reedit,
       discard changes edit starting at end edit starting at line
       n edit alternate file edit alternate file, discard changes
       write file name overwrite file name run shell, then return
       run cmd, then return edit next file in arglist specify new
       arglist  show current file and line position cursor to tag
       In general, any ex or ed command (such  as  substitute  or
       global)  may be typed, preceded by a colon and followed by
       a .

   PPoossiittiioonniinngg wwiitthhiinn ffiillee
       forward screen backward screen  scroll  down  half  screen
       scroll up half screen go to the beginning of the specified
       line (end default), where n is a  line  number  next  line
       matching pat previous line matching pat repeat last / or ?
       command reverse last / or ? command nth line after pat nth
       line   before  pat  next  section/function  previous  sec-
       tion/function beginning of sentence end of sentence begin-
       ning  of paragraph end of paragraph find matching ( ) { or
       }

   AAddjjuussttiinngg tthhee ssccrreeeenn
       clear and redraw window clear and redraw window if  ^L  is
       ->  key  redraw  screen with current line at top of window
       redraw screen with current line at bottom of window redraw
       screen with current line at center of window move pat line
       to bottom of window use n-line window scroll window down 1
       line scroll window up 1 line

   MMaarrkkiinngg aanndd rreettuurrnniinngg
       move  cursor to previous context move cursor to first non-
       white space in line mark current position with the single-
       byte lower-case letter x move cursor to mark x move cursor
       to first non-white space in line marked by x

   LLiinnee ppoossiittiioonniinngg
       top line on screen last line  on  screen  middle  line  on
       screen  next  line,  at  first non-white previous line, at
       first non-white return, same as + next line,  same  column
       previous line, same column

   CChhaarraacctteerr ppoossiittiioonniinngg
       first  non  white-space character beginning of line end of
       line forward backward same as  (backspace) same as  (space
       bar)  find next single-byte character x find previous sin-
       gle-byte character x move to character prior to next  sin-
       gle-byte  character x move to character following previous
       single-byte character x repeat last f, F, t  or  T  repeat
       inverse  of last f, F, t or T move to column n find match-
       ing ( { ) or }

                                                                3

vi(1)                                                       vi(1)

   WWoorrddss,, sseenntteenncceess,, ppaarraaggrraapphhss
       forward a word back a word end of word to next sentence to
       next  paragraph back a sentence back a paragraph forward a
       blank-delimited word back a blank-delimited word end of  a
       blank-delimited word

   CCoorrrreeccttiioonnss dduurriinngg iinnsseerrtt
       erase last character erase last word your erase character,
       same as ^H your kill character, erase this line  of  input
       quotes your erase and kill characters ends insertion, back
       to command mode interrupt, terminates insert mode  backtab
       one  character;  reset left margin of autoindent caret (^)
       followed by -d (^D); backtab to beginning of line; do  not
       reset  left  margin  of autoindent backtab to beginning of
       line; reset left margin of autoindent quote  non-printable
       character vi uses control notation for ASCII control char-
       acters, and uses octal notation for 8-bit bytes  that  are
       not printable.

   IInnsseerrtt aanndd rreeppllaaccee
       append  after  cursor  append at end of line insert before
       cursor insert before first non-blank open line below  open
       above replace one character with the single-byte character
       x replace characters change lower case to upper  case  and
       vice-versa

   OOppeerraattoorrss
       Operators  are followed by a cursor motion, and affect all
       text that would have been moved over.  For example,  since
       w  moves  over  a  word, dw deletes the word that would be
       moved over.  Double  the  operator,  for  example,  dd  to
       affect  whole  lines.   delete change yank lines to buffer
       left shift right shift filter through command

   MMiisscceellllaanneeoouuss ooppeerraattiioonnss
       change rest of line (c$) delete rest of line (d$)  substi-
       tute  chars  (cl)  substitute lines (cc) join lines delete
       characters (dl) delete characters before cursor (dh)  yank
       lines (yy)

   YYaannkk aanndd ppuutt
       Put inserts the text most recently deleted or yanked; how-
       ever, if a buffer is named  (using  the  ASCII  lower-case
       letters  a  -  z), the text in that buffer is put instead.
       yank 3 lines yank 3 characters put back text after  cursor
       put  back  text  before  cursor  put from buffer x yank to
       buffer x delete into buffer x

   UUnnddoo,, rreeddoo,, rreettrriieevvee
       undo last change restore current line repeat  last  change
       retrieve d'th last delete

FFiilleess
       default  directory  where temporary work files are placed;

                                                                4

vi(1)                                                       vi(1)

       it can be changed using the directory option (see the  set
       command)  compiled terminal description database subset of
       compiled terminal description  database  language-specific
       message file (see LANG on

RReeffeerreenncceess
NNoottiicceess
       Two  options, although they continue to be supported, have
       been replaced in the documentation by options that  follow
       the  Command  Syntax Standard (see A -r option that is not
       followed with an option-argument has been replaced  by  -L
       and +command has been replaced by -c command.

       The  encryption  options  are provided with the Encryption
       Utilities package, which is available only in  the  United
       States.

       Tampering  with  entries in /usr/share/lib/terminfo/?/* or
       /usr/share/lib/.COREterm/?/*  (for  example,  changing  or
       removing  an  entry)  can  affect programs such as vi that
       expect the entry to be present and correct.   In  particu-
       lar,  removing  the ``dumb'' terminal may cause unexpected
       problems.

       Software tabs using ^T work  only  immediately  after  the
       autoindent.

       Left and right shifts on intelligent terminals do not make
       use of insert and delete character operations in the  ter-
       minal.

   AAuutthhoorr
       vi  and ex were developed by The University of California,
       Berkeley California, Computer Science Division, Department
       of Electrical Engineering and Computer Science.

                                                                5

