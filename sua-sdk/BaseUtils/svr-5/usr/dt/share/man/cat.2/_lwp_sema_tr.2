

_lwp_sema_trywait(2)                         _lwp_sema_trywait(2)

SSyynnooppssiiss
       #include <synch.h>

       int _lwp_sema_trywait(_lwp_sema_t *sema);

   PPaarraammeetteerrss
DDeessccrriippttiioonn
       _lwp_sema_trywait  makes  a  single attempt to acquire the
       semaphore sema, but does not block in the case of a  fail-
       ure.

   sseemmaa ppaarraammeetteerr
       sema  must  have  been  previously  initialized, either by
       _lwp_sema_init or statically (see _lwp_sema_init).

   RReettuurrnn vvaalluueess
       _lwp_sema_trywait returns zero for success  and  an  error
       number for failure, as described below.

   EErrrroorrss
       If   any   of   the   following  conditions  is  detected,
       _lwp_sema_trywait  fails  and  returns  the  corresponding
       value:  The  semaphore  is  in the locked state.  The sema
       parameter points to an illegal address.  (This  error  may
       not  be  detected;  a  SIGSEGV signal may be posted to the
       faulting lightweight processs (LWP) if an illegal  address
       is used.)

RReeffeerreenncceess
NNoottiicceess
       Lightweight  processes  (LWPs) are internal interfaces and
       are subject to change.  Their use should be avoided.

                                                                1

