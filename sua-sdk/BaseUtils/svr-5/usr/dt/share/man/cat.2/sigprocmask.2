

sigprocmask(2)                                     sigprocmask(2)

SSyynnooppssiiss
       #include <signal.h>

       int  sigprocmask(int  how,  const  sigset_t *set, sigset_t
       *oset);

DDeessccrriippttiioonn
       The sigprocmask function is used to examine and/or  change
       the  calling  process's  signal mask.  If the value how is
       SIG_BLOCK, the set pointed to by the argument set is added
       to   the  current  signal  mask.   If  the  value  how  is
       SIG_UNBLOCK, the  set  pointed  by  the  argument  set  is
       removed from the current signal mask.  If the value how is
       SIG_SETMASK, the current signal mask is  replaced  by  the
       set  pointed to by the argument set.  If the argument oset
       is not NULL, the previous mask  is  stored  in  the  space
       pointed  to  by oset.  If the value of the argument set is
       NULL, the value how is not significant and  the  process's
       signal  mask  is  unchanged; thus, the call can be used to
       enquire about currently blocked signals.

       If there are any pending unblocked signals after the  call
       to  sigprocmask,  at  least  one  of those signals will be
       delivered before the call to sigprocmask returns.

       It is not possible to block those signals that  cannot  be
       ignored  [see  This restriction is silently imposed by the
       system.

       If sigprocmask fails, the process's  signal  mask  is  not
       changed.

   RReettuurrnn vvaalluueess
       On  success,  sigprocmask returns 0.  On failure, sigproc-
       mask returns -1 and sets errno to identify the error.

   EErrrroorrss
       In the following conditions, sigprocmask  fails  and  sets
       errno  to:  The  value of the how argument is not equal to
       one of the defined values.   The  value  of  set  or  oset
       points outside the process's allocated address space.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       Signal  masks  are maintained per thread.  See for further
       details.

   CCoonnssiiddeerraattiioonnss ffoorr lliigghhttwweeiigghhtt pprroocceesssseess
       Signal masks  are  internally  maintained  per  LWP.   The
       Threads  Library  has  a  wrapper function for this system
       call to make its effect per thread.

                                                                1

