

dup(2)                                                     dup(2)

SSyynnooppssiiss
       #include <unistd.h>

       int dup(int fildes);

DDeessccrriippttiioonn
       dup  duplicates an open file descriptor.  fildes is a file
       descriptor obtained from a creat, open, dup, fcntl,  pipe,
       or  ioctl  system call.  dup returns a new file descriptor
       having the following in common  with  the  original:  Same
       open  file  (or pipe).  Same file pointer (i.e., both file
       descriptors share one file  pointer).   Same  access  mode
       (read, write or read/write).

       The  new file descriptor is set to remain open across exec
       system calls [see

       The file descriptor returned is the lowest one  available.

   RReettuurrnn vvaalluueess
       On success, dup returns a non-negative integer, namely the
       file descriptor.  On failure,  dup  returns  -1  and  sets
       errno to identify the error.

   EErrrroorrss
       In  the following conditions, dup fails and sets errno to:
       fildes is not a valid open file descriptor.  A signal  was
       caught  during  the  dup system call.  The process has too
       many open files [see fildes is on a remote machine and the
       link to that machine is no longer active.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       Open file descriptors are a process resource and available
       to any sibling thread; if used  concurrently,  actions  by
       one thread can interfere with those of a sibling.

                                                                1

