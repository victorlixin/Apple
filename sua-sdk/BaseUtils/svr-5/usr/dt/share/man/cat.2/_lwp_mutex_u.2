

_lwp_mutex_unlock(2)                         _lwp_mutex_unlock(2)

SSyynnooppssiiss
       #include <synch.h>

       int _lwp_mutex_unlock(lwp_mutex_t *mutex);

   PPaarraammeetteerrss
       pointer to mutex to be unlocked

DDeessccrriippttiioonn
       _lwp_mutex_unlock unlocks the mutex pointed to by mutex.

       If  there  are  one  or  more lightweight processes (LWPs)
       waiting for the mutex when _lwp_mutex_unlock is called, at
       least one waiting LWP is allowed to attempt acquisition of
       the mutex.

   RReettuurrnn vvaalluueess
       _lwp_mutex_unlock returns zero for success  and  an  error
       number for failure, as described below.

   EErrrroorrss
       If   any   of   the   following  conditions  is  detected,
       _lwp_mutex_unlock  fails  and  returns  the  corresponding
       value:  The  mutual exclusion variable pointed to by mutex
       is invalid.  The mutex  parameter  points  to  an  illegal
       address.   (This error may not be detected; a SIGSEGV sig-
       nal may be posted  to  the  faulting  LWP  if  an  illegal
       address is used.)

UUssaaggee
       The    locks    acquired    with    _lwp_mutex_lock    and
       _lwp_mutex_trylock     should     be     released     with
       _lwp_mutex_unlock.

RReeffeerreenncceess
NNoottiicceess
       Lightweight  processes  (LWPs) are internal interfaces and
       are subject to change.  Their use should be avoided.

                                                                1

