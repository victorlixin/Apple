

getgroups(2)                                         getgroups(2)

SSyynnooppssiiss
       #include <unistd.h>

       int getgroups(int gidsetsize, gid_t *grouplist);

       int setgroups(int ngroups, const gid_t *grouplist);

DDeessccrriippttiioonn
       getgroups  gets the current supplemental group access list
       of the calling process and stores the result in the  array
       of  group IDs specified by grouplist.  This array has gid-
       setsize entries and must be large enough  to  contain  the
       entire   list.    This   list   cannot   be  greater  than
       {NGROUPS_MAX}.  If gidsetsize  equals  0,  getgroups  will
       return  the  number of groups to which the calling process
       belongs without modifying the array pointed  to  by  grou-
       plist.

       setgroups  sets the supplementary group access list of the
       calling process from the array of group IDs  specified  by
       grouplist.   The number of entries is specified by ngroups
       and can not be greater than {NGROUPS_MAX}.  This  function
       may  be invoked only by a process with the P_SETUID privi-
       lege.

   RReettuurrnn vvaalluueess
       On success, getgroups returns the number of  supplementary
       group  IDs  set  for  the  calling  process  and setgroups
       returns 0.  On failure, getgroups and setgroups return  -1
       and set errno to identify the error.

   EErrrroorrss
       In  the  following  conditions,  getgroups  fails and sets
       errno to: The value of gidsetsize  is  non-zero  and  less
       than  the  number  of  supplementary group IDs set for the
       calling process.

       In the following  conditions,  setgroups  fails  and  sets
       errno   to:   The   value   of  ngroups  is  greater  than
       {NGROUPS_MAX}.  The calling  process  does  not  have  the
       P_SETUID privilege.

       In  the  following  conditions, either call fails and sets
       errno to: A referenced part of the  array  pointed  to  by
       grouplist is outside of the allocated address space of the
       process.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       These ID numbers are attributes of the containing  process
       and are shared by sibling threads.

                                                                1

