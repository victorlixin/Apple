

_lwp_exit(2)                                         _lwp_exit(2)

SSyynnooppssiiss
       #include <sys/lwp.h>

       void _lwp_exit(void);

DDeessccrriippttiioonn
       _lwp_exit  terminates execution of the calling lightweight
       process (LWP).  If the caller is the last  LWP  associated
       with  the process, the process is terminated as well.  The
       exit status in this case is not specified.

       If the LWP was not created with the LWP_DETACHED flag set,
       the following behavior occurs: If a sibling LWP is blocked
       in an _lwp_wait for this LWP, one such  sibling  LWP  will
       return  from  its _lwp_wait call.  Otherwise, if a sibling
       LWP is blocked in an _lwp_wait for any LWP, one such  sib-
       ling  LWP will return from its _lwp_wait call.  If neither
       of the previous two  conditions  holds,  the  system  will
       store an indication that the exiting LWP has terminated.

       If  the  LWP  was  created with the LWP_DETACHED flag set,
       this LWP cannot be waited for, and no record is  retained.

       If  two or more LWPs wait explicitly for the same LWP then
       one will succeed and the others will get error ESRCH.

   RReettuurrnn vvaalluueess
       _lwp_exit does not return a value.

   EErrrroorrss
       None.

UUssaaggee
       Exit status is not used for LWPs.

RReeffeerreenncceess
NNoottiicceess
       Lightweight processes (LWPs) are internal  interfaces  and
       are subject to change.  Their use should be avoided.

                                                                1

