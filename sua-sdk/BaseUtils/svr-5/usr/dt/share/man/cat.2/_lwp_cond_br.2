

                                                                1

_lwp_cond_broadcast(2)                     _lwp_cond_broadcast(2)

SSyynnooppssiiss
       #include <synch.h>

       int _lwp_cond_broadcast(lwp_cond_t *cond);

   PPaarraammeetteerrss
       pointer to condition variable to be broadcast

DDeessccrriippttiioonn
       _lwp_cond_broadcast wakes up all the lightweight processes
       (LWPs) waiting on the condition cond.  If  more  than  one
       LWP  is  waiting,  the  order  of release from the blocked
       group is scheduling policy-dependent.

       _lwp_cond_broadcast has no effect if  there  are  no  LWPs
       waiting on the indicated condition.

   ccoonndd ppaarraammeetteerr
       The  condition  variable  denoted  by cond must previously
       have been statically initialized (zero-filled).

   RReettuurrnn vvaalluueess
       _lwp_cond_broadcast returns zero for success and an  error
       number for failure, as described below.

   EErrrroorrss
       If   any   of   the   following  conditions  is  detected,
       _lwp_cond_broadcast returns the corresponding  value:  The
       condition  variable  pointed  to  by cond is invalid.  The
       cond parameter points to an illegal address.  (This  error
       may not be detected; a SIGSEGV signal may be posted to the
       faulting LWP if an illegal address is used.)

UUssaaggee
       See the description of  how  to  use  condition  variables
       under USAGE on

RReeffeerreenncceess
NNoottiicceess
       Lightweight  processes  (LWPs) are internal interfaces and
       are subject to change.  Their use should be avoided.

                                                                1

