

chroot(2)                                               chroot(2)

SSyynnooppssiiss
       #include <unistd.h>

       int chroot(const char *path);

DDeessccrriippttiioonn
       chroot  changes the root directory of the calling process.
       path points to a  pathname  naming  a  directory.   chroot
       causes  the  named directory to become the root directory,
       the starting point for path searches for pathnames  begin-
       ning  with  /.  The user's working directory is unaffected
       by the chroot system call.

       The calling process must have  the  appropriate  privilege
       (P_FILESYS) to change the root directory.

       The ..  entry in the root directory is interpreted to mean
       the root directory itself.  Thus, ..  cannot  be  used  to
       access files outside the subtree rooted at the root direc-
       tory.

RReettuurrnn vvaalluueess
       On success, chroot returns 0.  On failure, chroot  returns
       -1,  sets errno to identify the error, and the root direc-
       tory remains unchanged.

       In the following conditions, chroot fails and  sets  errno
       to:  Search  permission  is  denied  on a component of the
       pathname.  Too many symbolic  links  were  encountered  in
       translating path.  The length of the path argument exceeds
       {PATH_MAX}, or the length  of  a  path  component  exceeds
       {NAME_MAX}  while  _POSIX_NO_TRUNC  is  in  effect.   path
       points outside the allocated address space of the process.
       A signal was caught during the chroot system call.  Compo-
       nents of path require hopping to multiple remote  machines
       and  file system type does not allow it.  path points to a
       remote machine and the link to that machine is  no  longer
       active.  Any component of the pathname is not a directory.
       The named directory does not exist or is a null  pathname.
       The  calling  process does not have the appropriate privi-
       lege (P_FILESYS) for changing the root directory.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       Both current working directory and current root  directory
       are  process  attributes  and  are  shared  by all related
       threads.  A change by one thread will  be  shared  by  all
       siblings.

                                                                1

