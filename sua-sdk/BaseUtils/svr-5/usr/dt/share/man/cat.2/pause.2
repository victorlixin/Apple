

pause(2)                                                 pause(2)

SSyynnooppssiiss
       #include <unistd.h>

       int pause(void);

DDeessccrriippttiioonn
       pause  suspends  the  calling  process until it receives a
       signal of any type.  The signal must be one  that  is  not
       currently set to be ignored.

       If  the  signal  causes  termination of the process, pause
       does not return.

   RReettuurrnn vvaalluueess
       If the signal is caught by the calling process and control
       is  returned  from  the  signal-catching function [see the
       calling process resumes execution from the point  of  sus-
       pension with a return value of -1 from pause and errno set
       to EINTR.

   EErrrroorrss
       In the following conditions, the calling  process  resumes
       from  the  point of suspension with errno set to: A signal
       was caught by the calling process.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       While one thread is blocked, siblings might still be  exe-
       cuting.   See for further details of signal delivery.  See
       for related functionality.

                                                                1

