

waitid(2)                                               waitid(2)

SSyynnooppssiiss
       #include <sys/types.h> #include <wait.h>

       int waitid(idtype_t idtype, id_t id, siginfo_t *infop, int
       options);

DDeessccrriippttiioonn
       waitid suspends the calling process until one of its chil-
       dren  changes  state.   It  records the current state of a
       child in the structure pointed to by infop.   If  a  child
       process  changed state prior to the call to waitid, waitid
       returns immediately.

       The idtype and id arguments specify which children  waitid
       is  to wait for.  If idtype is P_PID, waitid waits for the
       child with a process ID equal to (pid_t) id.  If idtype is
       P_PGID, waitid waits for any child with a process group ID
       equal to (pid_t) id.  If idtype is P_ALL, waitid waits for
       any children and id is ignored.

       The  options  argument  is  used  to  specify  which state
       changes waitid is to wait for.  It is formed by an  OR  of
       any  of the following flags: Wait for process(es) to exit.
       Wait for traced process(es) to become trapped or  reach  a
       breakpoint  [see Wait for and return the process status of
       any child that has  stopped  upon  receipt  of  a  signal.
       Return  the  status for any child that was stopped and has
       been continued.  Return immediately.  Keep the process  in
       a  waitable  state.  This will not affect the state of the
       process on subsequent waits.

       infop must point to a siginfo_t structure, as  defined  in
       siginfo_t  is  filled  in by the system with the status of
       the process being waited for.

   RReettuurrnn vvaalluueess
       If waitid returns due to a change of state of one  of  its
       children,  it returns 0.  Otherwise, waitid returns -1 and
       sets errno to identify the error.

   EErrrroorrss
       In the following conditions, waitid fails and  sets  errno
       to: infop points to an invalid address.  waitid was inter-
       rupted due to the receipt of a signal by the calling  pro-
       cess.   0  or  another  invalid  value  was  specified for
       options.  idtype and id specify an  invalid  set  of  pro-
       cesses.   The  set of processes specified by idtype and id
       does not contain any unwaited-for processes.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       While one thread is blocked, siblings might still be  exe-
       cuting.

                                                                1

