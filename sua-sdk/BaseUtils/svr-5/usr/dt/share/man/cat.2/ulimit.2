

ulimit(2)                                               ulimit(2)

SSyynnooppssiiss
       #include <ulimit.h>

       long ulimit(int cmd, . . . /* newlimit */ );

DDeessccrriippttiioonn
       This  function  provides  for control over process limits.
       The cmd values available are: Set the  regular  file  size
       limit  of the process to the value of newlimit, taken as a
       long.  Any process may decrease this  limit,  but  only  a
       process  with  the  P_SYSOPS  privilege  may  increase the
       limit.  Get the regular file size limit  of  the  process.
       The  limit is in units of 512-byte blocks and is inherited
       by child processes.  Files of any size can be  read.   Get
       the  maximum possible break value [see brk].  Get the cur-
       rent value of the maximum number of open files per process
       configured in the system.

   RReettuurrnn vvaalluueess
       On  success,  ulimit  returns  a  non-negative  value that
       depends on cmd as described  above.   On  failure,  ulimit
       returns -1 and sets errno to identify the error.

   EErrrroorrss
       In  the  following conditions, ulimit fails and sets errno
       to: The cmd argument is not valid.  An attempt was made to
       increase  the  process's  file  size limit and the calling
       process does not have the P_SYSOPS privilege.

RReeffeerreenncceess
NNoottiicceess
       ulimit is effective in  limiting  the  growth  of  regular
       files.  Pipes are currently limited to {PIPE_MAX}.

       The  getrlimit  system call provides a more general inter-
       face for controlling process limits.

   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       These resource limits are an attribute of  the  containing
       process and are shared by sibling threads.

                                                                1

