

access(2)                                               access(2)

SSyynnooppssiiss
       #include <unistd.h>

       int access(const char *path, int amode);

DDeessccrriippttiioonn
       access checks the accessibility of a file.  path points to
       a pathname naming a file.  access checks  the  named  file
       for  accessibility  according to the bit pattern contained
       in amode, using the real user ID in place of the effective
       user  ID  and  the real group ID in place of the effective
       group ID.  The bit pattern  contained  in  amode  is  con-
       structed  by  an OR of the following constants (defined in
       unistd.h): test for read permission test for write permis-
       sion  test  for execute (search) permission test for exis-
       tence of file test for regular, executable file test using
       effective IDs

       Note that successful checking of the EXEC_OK file does not
       imply that the system call will succeed on the file  named
       by  path, since the check succeeds if at least one execute
       bit is set;  there are also  additional  checks  made  for
       execute permission by exec.

RReettuurrnn vvaalluueess
       If  the  requested  access is permitted, access returns 0.
       Otherwise, access returns -1 and sets  errno  to  identify
       the reason.

       In  the following conditions, access sets errno to: Search
       permission is denied on a component of  the  path  prefix.
       Access  permission  is  denied.  The file is not a regular
       file.  path points outside the allocated address space for
       the process.  A signal was caught during the access system
       call.  amode is invalid.  Too  many  symbolic  links  were
       encountered  in  translating  path.   Components  of  path
       require hopping to multiple remote machines.   The  length
       of  the path argument exceeds {PATH_MAX}, or the length of
       a path component exceeds {NAME_MAX} while  _POSIX_NO_TRUNC
       is  in  effect.   A  component of the path prefix is not a
       directory.  Read, write, or execute (search) permission is
       requested  for  a  null pathname.  The named file does not
       exist.  path points to a remote machine and  the  link  to
       that  machine  is  no  longer  active.   Write  access  is
       requested for a file on a read-only file system.

RReeffeerreenncceess
NNoottiicceess
   PPrriivviilleeggeess
       The P_DACREAD and P_DACWRITE privileges allow the  calling
       process to override mode bit and ACL (i.e., discretionary)
       access checks.  See

                                                                1

access(2)                                               access(2)

   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       Access rights are an attribute of the  containing  process
       and are shared by sibling threads.

                                                                2

