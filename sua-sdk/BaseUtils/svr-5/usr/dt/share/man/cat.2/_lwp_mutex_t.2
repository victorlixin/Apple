

_lwp_mutex_trylock(2)                       _lwp_mutex_trylock(2)

SSyynnooppssiiss
       #include <synch.h>

       int _lwp_mutex_trylock(lwp_mutex_t *mutex);

   PPaarraammeetteerrss
       pointer to mutex to be locked

DDeessccrriippttiioonn
       _lwp_mutex_trylock,  is  used  to  conditionally  apply  a
       mutual exclusion lock (mutex) on  behalf  of  the  calling
       lightweight  process (LWP).  The parameter mutex points to
       the mutex on which the lock is to be applied.

       The  mutex  must  previously  have  been  initialized.   A
       lwp_mutex_t  object  filled  with  zeros  (for example, by
       static initialization) is a valid  unlocked  setting.   If
       the  mutex  is  already  locked  upon entry, the operation
       immediately returns to the caller  without  acquiring  the
       lock.

   RReettuurrnn vvaalluueess
       _lwp_mutex_trylock  returns  zero  on success and an error
       number for failure, as described below.

   EErrrroorrss
       If  any  of  the   following   conditions   is   detected,
       _lwp_mutex_trylock  fails  and  returns  the corresponding
       value: The mutual exclusion variable pointed to  by  mutex
       is  invalid.   The  mutex  parameter  points to an illegal
       address.  (This error may not be detected; a SIGSEGV  sig-
       nal  may  be  posted  to  the  faulting  LWP if an illegal
       address is used.)

       If any of the following conditions occur,  _lwp_mutex_try-
       lock fails and returns the corresponding value: The param-
       eter mutex points to a locked mutex.

UUssaaggee
       _lwp_mutex_trylock is used when the caller does  not  want
       to block.

       For  consistency, mutexes acquired with _lwp_mutex_trylock
       should be released with _lwp_mutex_unlock.

RReeffeerreenncceess
NNoottiicceess
       Lightweight processes (LWPs) are internal interfaces and
       are subject to change.  Their use should be avoided.

                                                                1

