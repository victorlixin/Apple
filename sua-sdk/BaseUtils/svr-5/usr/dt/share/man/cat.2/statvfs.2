

statvfs(2)                                             statvfs(2)

SSyynnooppssiiss
       #include <sys/types.h> #include <sys/statvfs.h>

       int statvfs(const char *path, struct statvfs *buf);

       int statvfs64(const char *path, struct statvfs64 *buf);

       int fstatvfs(int fildes, struct statvfs *buf);

       int fstatvfs64(int fildes, struct statvfs64 *buf);

DDeessccrriippttiioonn
       statvfs  returns  a  ``generic  superblock''  describing a
       filesystem; it can be used to  acquire  information  about
       mounted  filesystems.   buf  is  a  pointer to a structure
       (described below) that is filled by the system call.

       path should name a file that resides on that file  system.
       The  file  system  type  is known to the operating system.
       Read, write, or execute permission for the named  file  is
       not  required,  but all directories listed in the pathname
       leading to the file must be searchable.

       For  details  on  the  statvfs  and  statvfs64  structures
       pointed to by buf see

       fstatvfs is similar to statvfs, except that the file named
       by path in statvfs is instead identified by an  open  file
       descriptor  fildes obtained from a successful open, creat,
       dup, fcntl, or pipe system call.

RReettuurrnn vvaalluueess
       On success, statvfs, statvfs64, fstatvfs,  and  fstatvfs64
       return  0.   On  failure,  they return -1 and set errno to
       identify the error.

       In the following conditions, statvfs  and  statvfs64  fail
       and  set errno to: Search permission is denied on a compo-
       nent of the path prefix.  path or buf points  outside  the
       process's  allocated  address  space.  A signal was caught
       during statvfs  or  statvfs64  execution.   An  I/O  error
       occurred while reading the file system.  Too many symbolic
       links were encountered in translating path.  Components of
       path  require hopping to multiple remote machines and file
       system type does not allow it.  The length of a path  com-
       ponent  exceeds  {NAME_MAX}  characters,  or the length of
       path exceeds {PATH_MAX} characters.  Either a component of
       the  path  prefix or the file referred to by path does not
       exist.  path points to a remote machine and  the  link  to
       that machine is no longer active.  A component of the path
       prefix of path is not a directory.

       In the following conditions, fstatvfs, and fstatvfs64 fail
       and  set  errno  to:  buf  points  to  an invalid address.

                                                                1

statvfs(2)                                             statvfs(2)

       fildes is not an  open  file  descriptor.   A  signal  was
       caught  during  fstatvfs  or fstatvfs64 execution.  An I/O
       error occurred while reading the file system.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr llaarrggee ffiillee ssuuppppoorrtt
       statvfs64 and fstatvfs64 support large files, but are oth-
       erwise  identical  to  statvfs and fstatvfs, respectively.
       For details on programming for large file capable applica-
       tions, see on intro(2).

                                                                2

