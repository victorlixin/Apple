

times(2)                                                 times(2)

SSyynnooppssiiss
       #include <sys/types.h> #include <sys/times.h>

       clock_t times(struct tms *buffer);

DDeessccrriippttiioonn
       times  fills  the  tms structure pointed to by buffer with
       time-accounting information.  The tms structure is defined
       in  sys/times.h and includes the following fields: clock_t
       tms_utime; clock_t     tms_stime;  clock_t     tms_cutime;
       clock_t    tms_cstime;

       This  information  comes from the calling process and each
       of its terminated child processes for which  it  has  exe-
       cuted  a  wait  routine.   All times are reported in clock
       ticks.  The clock ticks at a system-dependent  rate.   The
       specific  value  of  this  rate  for  an implementation is
       defined, in ticks per second,  by  the  variable  CLK_TCK,
       found in the include file limits.h.

       tms_utime  is  the  CPU time used while executing instruc-
       tions in the user space of the calling process.

       tms_stime is the CPU time used by the system on behalf  of
       the calling process.

       tms_cutime  is the sum of the tms_utime and the tms_cutime
       of the child processes.

       tms_cstime is the sum of the tms_stime and the  tms_cstime
       of the child processes.

   RReettuurrnn vvaalluueess
       On  success,  times returns the elapsed real time in clock
       ticks from an arbitrary point in the  past  (for  example,
       system  start-up  time).   This point does not change from
       one invocation of times to  another.   On  failure,  times
       returns -1 and sets errno to identify the error.

   EErrrroorrss
       In  the  following  conditions, times fails and sets errno
       to: buffer points to an invalid address.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       Statistics are gathered at the process level and represent
       the combined usage of all contained threads.

                                                                1

