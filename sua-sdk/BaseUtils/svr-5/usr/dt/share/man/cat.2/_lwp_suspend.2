

_lwp_suspend(2)                                   _lwp_suspend(2)

SSyynnooppssiiss
       #include <sys/types.h> #include <sys/lwp.h>

       int _lwp_suspend(lwpid_t target_LWP);

   PPaarraammeetteerrss
       LWP ID of the lightweight process (LWP) to be suspended

DDeessccrriippttiioonn
       _lwp_suspend  causes  suspension  of the execution of tar-
       get_LWP.  This suspended state is  orthogonal  to  stopped
       states  resulting from job control or /proc manipulations.
       The function _lwp_suspend does not return until target_LWP
       has actually been suspended.

       No execution of a suspended LWP is possible.  For example,
       if a signal is posted to a suspended LWP, the handler can-
       not   execute,   so  the  signal  remains  pending.   (The
       _lwp_kill call in the posting LWP returns normally even if
       the target LWP is suspended.)

       The suspended state and the /proc/debugger stop states are
       orthogonal.

   RReettuurrnn vvaalluueess
       _lwp_suspend returns zero for success and an error  number
       for failure, as described below.

   EErrrroorrss
       If  any  of  the following conditions is detected, returns
       the corresponding value: No LWP can be found in  the  cur-
       rent  process with identity target_LWP.  target_LWP is the
       calling LWP, and the process has only one LWP.

RReeffeerreenncceess
NNoottiicceess
       Lightweight processes (LWPs) are internal  interfaces  and
       are subject to change.  Their use should be avoided.

                                                                1

