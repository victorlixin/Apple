

umount(2)                                               umount(2)

SSyynnooppssiiss
       #include <sys/mount.h>

       int umount(const char *file);

DDeessccrriippttiioonn
       umount requests that a previously mounted file system con-
       tained on the block special device or directory identified
       by  file  be unmounted.  file is a pointer to a path name.
       After unmounting the file system, the directory upon which
       the file system was mounted reverts to its ordinary inter-
       pretation.

       umount may be invoked only by a process with  the  P_MOUNT
       privilege.

RReettuurrnn vvaalluueess
       On  success, umount returns 0.  On failure, umount returns
       -1 and sets errno to identify the error.

       In the following conditions, umount fails and  sets  errno
       to: A file on file is busy.  file does not exist.  file is
       not mounted.  Too many symbolic links were encountered  in
       translating  the  path  pointed to by file.  The length of
       the file argument exceeds {PATH_MAX}, or the length  of  a
       file component exceeds {NAME_MAX} while _POSIX_NO_TRUNC is
       in effect.  file does not point to a directory.  A  compo-
       nent  of the path prefix does not exist or is a null path-
       name.  file is not a block special  device.   The  calling
       process  does not have the P_MOUNT privilege.  file points
       to an illegal address.  file is  remote.   file  is  on  a
       remote  machine, and the link to that machine is no longer
       active.  Components of the path pointed to by file require
       hopping to multiple remote machines.

RReeffeerreenncceess
NNoottiicceess
       umount  will  now  resolve  the mount_point argument using
       before any processing is performed.

                                                                1

