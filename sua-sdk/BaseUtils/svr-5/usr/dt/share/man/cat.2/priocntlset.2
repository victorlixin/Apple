

priocntlset(2)                                     priocntlset(2)

SSyynnooppssiiss
       #include  <sys/types.h>  #include <sys/procset.h> #include
       <sys/priocntl.h>  #include   <sys/fppriocntl.h>   #include
       <sys/tspriocntl.h>

       long priocntlset(procset_t *psp, int cmd, void *arg);

DDeessccrriippttiioonn
       priocntlset  changes  the scheduling properties of running
       processes.  priocntlset has the same functions as the pri-
       ocntl  system  call,  but a more general way of specifying
       the set of processes whose scheduling properties are to be
       changed.

       specifies the function to be performed.  is a pointer to a
       structure whose type depends on cmd.  See  for  the  valid
       values of cmd

       is  a  pointer  to  a procset structure, which priocntlset
       uses to specify the  set  of  processes  whose  scheduling
       properties  are  to  be  changed.  The procset_t structure
       contains the following members:
         idop_t    p_op;       /* operator connecting  left/right
       sets */
         idtype_t  p_lidtype;  /* left set ID type */
         id_t      p_lid;      /* left set ID */
         idtype_t  p_ridtype;  /* right set ID type */
         id_t      p_rid;      /* right set ID */

       specify  the  ID type and ID of one (``left'') set of pro-
       cesses; specify the ID type and ID of a second (``right'')
       set of processes.

       ID  types  and  IDs are specified just as for the priocntl
       system call.  specifies the operation to be  performed  on
       the  two sets of processes to get the set of processes the
       system call is to apply to.  The valid values for p_op and
       the  processes they specify are: set difference: processes
       in left set and not in right set  set  intersection:  pro-
       cesses in both left and right sets set union: processes in
       either left or right sets or both set  exclusive-or:  pro-
       cesses in left or right set but not in both

       The following macro, which is defined in procset.h, offers
       a  convenient  way  to  initialize  a  procset  structure:
       #define   setprocset(psp,  op,  ltype,  lid, rtype, rid) \
       (psp)->p_op       = (op), \ (psp)->p_lidtype  = (ltype), \
       (psp)->p_lid       = (lid), \ (psp)->p_ridtype  = (rtype),
       \ (psp)->p_rid      = (rid);

   RReettuurrnn vvaalluueess
       priocntlset has the same return values as

                                                                1

priocntlset(2)                                     priocntlset(2)

   EErrrroorrss
       priocntlset has the same errors as

RReeffeerreenncceess

                                                                2

