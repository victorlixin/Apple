

waitpid(2)                                             waitpid(2)

SSyynnooppssiiss
       #include <sys/types.h> #include <sys/wait.h>

       pid_t waitpid(pid_t pid, int *stat_loc, int options);

DDeessccrriippttiioonn
       waitpid  suspends  the  calling  process  until one of its
       children changes state; if a child process  changed  state
       prior  to  the  call to waitpid, return is immediate.  pid
       specifies a set of child processes  for  which  status  is
       requested.   If  pid  is  equal  to  (pid_t)-1,  status is
       requested for any child process.  If pid is  greater  than
       (pid_t)0, it specifies the process ID of the child process
       for which  status  is  requested.   If  pid  is  equal  to
       (pid_t)0  status  is requested for any child process whose
       process group ID is equal to that of the calling  process.
       If pid is less than (pid_t)-1, status is requested for any
       child process whose process group ID is equal to the abso-
       lute value of pid.

       If  waitpid  returns because the status of a child process
       is available, then that status may be evaluated  with  the
       macros  defined  by If the calling process had specified a
       non-zero value of stat_loc, the status of the  child  pro-
       cess  will  be  stored  in  the  location  pointed  to  by
       stat_loc.

       The options  argument  is  constructed  from  the  bitwise
       inclusive  OR  of  zero  or  more  of the following flags,
       defined in the header file sys/wait.h: the status  of  any
       continued child process specified by pid, whose status has
       not been reported since it continued (from a  job  control
       stop),  shall  also  be  reported  to the calling process.
       waitpid will not suspend execution of the calling  process
       if  status  is  not  immediately  available for one of the
       child processes specified by pid.  keep the process  whose
       status  is  returned in stat_loc in a waitable state.  The
       process may be waited for again  with  identical  results.
       the  status  of any child processes specified by pid^ that
       are stopped, and whose status has not  yet  been  reported
       since  they stopped, shall also be reported to the calling
       process.

       waitpid with options equal to WUNTRACED and pid^ equal  to
       (pid_t)-1 is identical to a call to

   RReettuurrnn vvaalluueess
       If  waitpid  returns because the status of a child process
       is available, it returns the process ID of the child  pro-
       cess for which status is reported.  If waitpid was invoked
       with WNOHANG set in options, it has  at  least  one  child
       process  specified  by  pid for which status is not avail-
       able, and status is not available for any  process  speci-
       fied  by  pid,  waitpid  returns  0.   Otherwise,  waitpid

                                                                1

waitpid(2)                                             waitpid(2)

       returns -1 and sets errno to identify the error.

   EErrrroorrss
       In the following conditions, waitpid fails and sets  errno
       to: waitpid was interrupted due to the receipt of a signal
       sent by the calling process.  An invalid value was  speci-
       fied  for options.  The process or process group specified
       by pid does not exist or is not a  child  of  the  calling
       process  or  can  never  be  in  the  states  specified by
       options.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       While one thread is blocked, siblings might still be  exe-
       cuting.

                                                                2

