

getpeername(3sock)                             getpeername(3sock)

SSyynnooppssiiss
       cc  [options]  file  -lsocket -lnsl #include <sys/types.h>
       #include <sys/socket.h>

       int getpeername(int socket, struct sockaddr *name,  size_t
       *namelen);

DDeessccrriippttiioonn
       getpeername  returns  the address of the peer connected to
       socket s.  The int pointed to  by  the  namelen  parameter
       should  be  initialized  to  indicate  the amount of space
       pointed to by name.  On return it contains the actual size
       of the address returned (in bytes).  The name is truncated
       if the buffer provided is too small.

       If the protocol allows unbound clients to connect, and the
       peer  is  not bound, getpeername sets the value pointed to
       by namelen to 0, and puts nothing in the  struct  sockaddr
       pointed to by name.

FFiilleess
       /usr/lib/locale/locale/LC_MESSAGES/uxns1

RReettuurrnn vvaalluueess
       0 is returned if the call succeeds, -1 if it fails.

   EErrrroorrss
       The  call  succeeds unless: socket is not a valid descrip-
       tor.  The socket has been  shut  down.   System  resources
       were  insufficient to complete the call.  There was insuf-
       ficient user memory for the operation to complete.   There
       were  insufficient  STREAMS  resources  available  for the
       operation to complete.  The socket is  not  connected,  or
       otherwise has not had the peer prespecified.  socket not a
       socket.  The operation is not  supported  for  the  socket
       protocol.

RReeffeerreenncceess
       RFC 2133

NNoottiicceess
       The  type  of  address  structure  passed  to  getpeername
       depends on the address family.
        domain sockets (address family AF_UNIX) require  a  sock-
       addr_un  structure as defined in sys/un.h; Internet domain
       IPv4 sockets (address  family  AF_INET)  require  a  sock-
       addr_in  structure  as  defined  in netinet/in.h; Internet
       domain IPv6 sockets (address family  AF_INET6)  require  a
       sockaddr_in6  structure as defined in netinet/in.h.  Other
       address families may require other  structures.   Use  the
       structure  appropriate  to  the  address  family; cast the
       structure address to a generic struct sockaddr  *  in  the
       call  to getpeername and pass the size of the structure in
       the namelen argument.

                                                                1

getpeername(3sock)                             getpeername(3sock)

       In &geminiREL; the sockaddr structure has been modified to
       support  variable  length sockets.  The net result of this
       modification is that the family member has been  shortened
       to 8 bits and a new 8-bit member inserted before it called
       len. For more information on the new sockaddr  structures,
       see: and

                                                                2

