

Intro(7mdi)                                           Intro(7mdi)

SSyynnooppssiiss
       #include <sys/stream.h> #include <sys/mdi.h>

DDeessccrriippttiioonn
       The  are  used with the I_STR STREAM ioctl; see the manual
       page for synopsis and description.

       MDI ioctls are used to change the  operation  of  and  get
       information  about the network adapter being driven by the
       MDI driver.  They are sent by the MAC user in STREAMS mes-
       sages of type with any associated data passed in a message
       type.

   AAddddrreessss ccoonnttrrooll
       These ioctl commands are  used  to  get  and  control  MDI
       addresses;  see  also  return  current MAC address set MAC
       address get factory MAC address

   FFrraammee ccoonnttrrooll
       These ioctl commands control the address to  which  frames
       are  sent: begin receiving frames to requested MAC address
       stop receiving frames sent to a MAC address begin  receiv-
       ing frames to all MAC addresses stop receiving frames sent
       to all MAC addresses return current set of  active  multi-
       cast  addresses (MDI version 1 only) return size of multi-
       cast address table (MDI version 1 only)

   SSttaattiissttiiccss
       These ioctl commands  collect  media-specific  statistics:
       return   media-specific  statistics  modify  MIB  settable
       attributes clear all info in statistic structure

   PPrroommiissccuuoouuss mmooddee
       enable promiscuous mode on the adapter

   DDiiffffeerreenncceess bbeettwweeeenn vveerrssiioonnss
       The &everest; MDI supports the following  primitives  that
       are  not  supported  by  MDI version 2: and as well as the
       MDI_NMCADDR macro.

       &everest; and &geminiREL; systems provide different mecha-
       nisms for limiting sensitive driver operations to a privi-
       leged process.  When processing an message on an &everest;
       system,  it is sufficient to check for uid0, thus granting
       process privileges to the root user only.  However, &gemi-
       niREL; drivers should not explicitly use ioc_uid.  Rather,
       they should call to determine if the credentials  accompa-
       nying   the   M_IOCTL   are   privileged.    For  example:
       drv_priv(iocp->ioc_cr) See also

FFiilleess
       /dev/mdi/*

                                                                1

Intro(7mdi)                                           Intro(7mdi)

RReeffeerreenncceess

                                                                2

