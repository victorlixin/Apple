

getdate(3C)                                           getdate(3C)

SSyynnooppssiiss
       #include <time.h>

       struct tm *getdate(const char *string);

       extern int getdate_err;

DDeessccrriippttiioonn
       getdate  converts user-definable date and/or time specifi-
       cations pointed to by string into  a  tm  structure.   The
       structure  declaration  is  in the time.h header file [see
       also

       User-supplied templates are used to  parse  and  interpret
       the input string.  The templates are text files created by
       the user  and  identified  via  the  environment  variable
       DATEMSK.   Each line in the template represents an accept-
       able date and/or time specification using some of the same
       field  descriptors  as  the ones used by the date command.
       The first line in the  template  that  matches  the  input
       specification  is  used  for interpretation and conversion
       into the internal time format.  If successful,  the  func-
       tion  getdate  returns a pointer to a tm structure; other-
       wise, it returns NULL and sets the  global  variable  get-
       date_err to indicate the error.

       The following field descriptors are supported:

       same  as  %  abbreviated  weekday  name  full weekday name
       abbreviated month name full month name locale's  appropri-
       ate  date and time representation day of month (01-31; the
       leading 0 is optional) same as %d date as %m/%d/%y  abbre-
       viated  month  name hour (00-23) hour (01-12) month number
       (01-12) minute (00-59) same as \n locale's  equivalent  of
       either  AM or PM time as %I:%M:%S %p time as %H:%M seconds
       (00-59) same as tab time as %H:%M:%S weekday number  (0-6;
       Sunday  =  0)  locale's  appropriate  date  representation
       locale's appropriate time representation year within  cen-
       tury  (for  example, 92).  When a century is not otherwise
       specified, values in the range 69-99 refer  to  the  years
       1969-1999  inclusive.   Values in the range 00-68 refer to
       the years 2000-2068 inclusive.  year as ccyy (for example,
       1986)  time  zone  name  or  no characters if no time zone
       exists

       The month and weekday names can consist of any combination
       of  upper-  and  lowercase  letters.  Any strings the user
       puts in are case-insensitive.  For example, a  string  Uhr
       (as shown below) would be treated the same way as a string
       uhr.  The user can request that the  input  date  or  time
       specification  be  in  a  specific language by setting the
       categories LC_TIME and LC_CTYPE of setlocale.

       The following example shows the  possible  contents  of  a

                                                                1

getdate(3C)                                           getdate(3C)

       template:  %m  %A  %B %d %Y, %H:%M:%S %A %B %m/%d/%y %I %p
       %d,%m,%Y %H:%M at %A the %dst of %B in %Y run  job  at  %I
       %p,%B %dnd %A den %d. %B %Y %H.%M Uhr

       The  following  are examples of valid input specifications
       for the  above  template:  getdate("10/1/87  4  PM")  get-
       date("Friday")    getdate("Friday   September   19   1987,
       10:30:30") getdate("24,9,1986 10:30")  getdate("at  monday
       the  1st  of  december in 1986") getdate("run job at 3 PM,
       december 2nd")

       If the LANG environment variable is  set  to  german,  the
       following  is valid: getdate("freitag den 10. oktober 1986
       10.30 Uhr")

       Local time and date specification are also supported.  The
       following examples show how local date and time specifica-
       tion can be defined in the template.
       ---------------------------+------------------
       Invocation                 | Line in Template
       ---------------------------+------------------
       _gg_ee_tt_dd_aa_tt_ee_((_""_11_11_//_22_77_//_88_66_""_))        | _%%_mm_//_%%_dd_//_%%_yy
       _gg_ee_tt_dd_aa_tt_ee_((_""_22_77_.._11_11_.._88_66_""_))        | _%%_dd_.._%%_mm_.._%%_yy
       _gg_ee_tt_dd_aa_tt_ee_((_""_88_66_--_11_11_--_22_77_""_))        | _%%_yy_--_%%_mm_--_%%_dd
       _gg_ee_tt_dd_aa_tt_ee_((_""_FF_rr_ii_dd_aa_yy _11_22_::_00_00_::_00_00_""_)) | _%%_AA _%%_HH_::_%%_MM_::_%%_SS

       The following rules are applied for converting  the  input
       specification  into the internal format: If only the week-
       day is given, today is assumed if the given day  is  equal
       to  the  current day and next week if it is less.  If only
       the month is given, the current month is  assumed  if  the
       given month is equal to the current month and next year if
       it is less and no year is given.  (The first day of  month
       is  assumed  if no day is given.)  If no hour, minute, and
       second are given, the current hour, minute, and second are
       assumed.   If  no  date  is given, today is assumed if the
       given hour is greater than the current hour  and  tomorrow
       is assumed if it is less.

       The following examples illustrate the above rules.  Assume
       that the current date is Mon Sep 22 12:19:47 EDT 1986  and
       that  the  LC_TIME  and LANG environment variables are not
       set.
       ---------------------------------------------------------------
       Input          Line in Template   Date
       -------------+------------------+------------------------------
       _MM_oo_nn          | _%%_aa               | Mon Sep 22 12:19:47 EDT 1986
       _SS_uu_nn          | _%%_aa               | Sun Sep 28 12:19:47 EDT 1986
       _FF_rr_ii          | _%%_aa               | Fri Sep 26 12:19:47 EDT 1986
       _SS_ee_pp_tt_ee_mm_bb_ee_rr    | _%%_BB               | Mon Sep  1 12:19:47 EDT 1986
       _JJ_aa_nn_uu_aa_rr_yy      | _%%_BB               | Thu Jan  1 12:19:47 EST 1987
       _DD_ee_cc_ee_mm_bb_ee_rr     | _%%_BB               | Mon Dec  1 12:19:47 EST 1986
       _SS_ee_pp _MM_oo_nn      | _%%_bb _%%_aa            | Mon Sep  1 12:19:47 EDT 1986

                                                                2

getdate(3C)                                           getdate(3C)

                    |                  |
       _JJ_aa_nn _FF_rr_ii      | _%%_bb _%%_aa            | Fri Jan  2 12:19:47 EST 1987
       _DD_ee_cc _MM_oo_nn      | _%%_bb _%%_aa            | Mon Dec  1 12:19:47 EST 1986
       _JJ_aa_nn _WW_ee_dd _11_99_88_99 | _%%_bb _%%_aa _%%_YY         | Wed Jan  4 12:19:47 EST 1989
       _FF_rr_ii _99        | _%%_aa _%%_HH            | Fri Sep 26 09:00:00 EDT 1986
       _FF_ee_bb _11_00_::_33_00    | _%%_bb _%%_HH_::_%%_SS         | Sun Feb  1 10:00:30 EST 1987
       _11_00_::_33_00        | _%%_HH_::_%%_MM            | Tue Sep 23 10:30:00 EDT 1986
       _11_33_::_33_00        | _%%_HH_::_%%_MM            | Mon Sep 22 13:30:00 EDT 1986

   FFiilleess
       language-specific printable files codeset-specific  print-
       able files

   EErrrroorrss
       On failure getdate returns NULL and sets the variable get-
       date_err to indicate the error.

       The following is a complete list of the  getdate_err  set-
       tings  and  their meanings.  The DATEMSK environment vari-
       able is null or undefined.  The template  file  cannot  be
       opened  for  reading.   Failed to get file status informa-
       tion.  The template file is not a regular file.  An  error
       is  encountered  while  reading the template file.  malloc
       failed (not enough memory is available).  There is no line
       in  the template that matches the input.  The input speci-
       fication is invalid.  For example, February 31 or  a  time
       is  specified that cannot be represented in a time_t (rep-
       resenting the time in seconds since 00:00:00 UTC,  January
       1, 1970).

RReeffeerreenncceess
NNoottiicceess
       A  simpler  interface,  is  also  provided that gives more
       functionality with finer control.  Its use  is  encouraged
       instead of getdate.

       Subsequent  calls  to  getdate  alter the contents of get-
       date_err.

       getdate makes explicit use of macros described in  and  is
       thus  affected  by  the  LC_CTYPE  category of the current
       locale.

       Previous implementations of getdate may return char*.

       If the time zone supplied by %Z is not  the  same  as  the
       time  zone getdate expects, an invalid input specification
       error will result.  getdate calculates  an  expected  time
       zone  based on information supplied to the interface (such
       as hour, day, and month).

                                                                3

