

makecontext(3C)                                   makecontext(3C)

SSyynnooppssiiss
       #include <ucontext.h>

       void   makecontext   (ucontext_t   *ucp,  (void  *func)(),
            int argc, . . . );

       int swapcontext (ucontext_t *oucp, const ucontext_t *ucp);

DDeessccrriippttiioonn
       These  functions  are  useful  for implementing user-level
       context switching  between  multiple  threads  of  control
       within a process.

       makecontext  modifies  the context specified by ucp, which
       has been initialized using getcontext; when  this  context
       is  resumed  using  swapcontext or setcontext [see program
       execution continues by calling the function func,  passing
       it the arguments that follow argc in the makecontext call.
       Before a call is made to makecontext,  the  context  being
       modified  should have a stack allocated for it.  The value
       of argc must match the number of integers passed to  func,
       otherwise the behavior is undefined.

       The  uc_link  field  is used to determine the context that
       will be resumed when the context being modified  by  make-
       context  returns.  The uc_link field should be initialized
       prior to the call to makecontext.

       swapcontext saves  the  current  context  in  the  context
       structure  pointed  to by oucp and sets the context to the
       context structure pointed to by ucp.

   RReettuurrnn vvaalluueess
       On successful completion, swapcontext return  a  value  of
       zero.   Otherwise,  a value of -1 is returned and errno is
       set to indicate the error.

   EErrrroorrss
       These functions will fail if either of  the  following  is
       true:

       ucp does not have enough stack left to complete the opera-
       tion.  ucp or oucp points to an invalid address.

RReeffeerreenncceess
NNoottiicceess
       The size of the ucontext_t structure may change in  future
       releases.   To  remain  binary  compatible, users of these
       features must always use makecontext or getcontext to cre-
       ate new instances of them.

       Equivalent routines and an enhanced user context structure
       are also provided in libc to handling floating point  con-
       text  changes  for  Pentium  III processors.  See for more

                                                                1

makecontext(3C)                                   makecontext(3C)

       information.

                                                                2

