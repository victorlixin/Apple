

sleep(3C)                                               sleep(3C)

SSyynnooppssiiss
       #include <unistd.h>

       unsigned sleep (unsigned seconds);

DDeessccrriippttiioonn
       The  current  process  is suspended from execution for the
       number of seconds specified by the argument.   The  actual
       suspension  time  may  be less than that requested because
       any caught signal will terminate the sleep following  exe-
       cution  of that signal's catching routine.  Also, the sus-
       pension time may be longer than requested by an  arbitrary
       amount  because of the scheduling of other activity in the
       system.   The  value  returned  by  sleep  will   be   the
       ``unslept''  amount  (the  requested  time  minus the time
       actually slept) in case the caller had an alarm set to  go
       off  earlier  than the end of the requested sleep time, or
       premature arousal because of another caught signal.

       The routine is implemented by setting an alarm signal  and
       pausing  until it (or some other signal) occurs.  The pre-
       vious state of the alarm signal  is  saved  and  restored.
       The calling program may have set up an alarm signal before
       calling sleep.  If the sleep time exceeds the  time  until
       such alarm signal, the process sleeps only until the alarm
       signal would have occurred.  The caller's alarm catch rou-
       tine  is  executed  just before the sleep routine returns.
       But if the sleep time is less  than  the  time  till  such
       alarm, the prior alarm time is reset to go off at the same
       time it would have without the intervening sleep.

RReeffeerreenncceess
NNoottiicceess
   CCoonnssiiddeerraattiioonnss ffoorr tthhrreeaaddss pprrooggrraammmmiinngg
       The Threads Library allows each thread to  sleep  indepen-
       dently of the others.

                                                                1

