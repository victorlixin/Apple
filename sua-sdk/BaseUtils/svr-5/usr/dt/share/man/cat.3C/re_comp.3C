

re_comp(3C)                                           re_comp(3C)

SSyynnooppssiiss
       char *re_comp(char *s);

       re_exec(char *s);

DDeessccrriippttiioonn
       The  re_comp function converts a regular expression string
       (RE) into an internal form suitable for pattern  matching.

       The re_exec function compares the string pointed to by the
       string argument with the last regular expression passed to
       re_comp.

       If  re_comp  is  called  with a null pointer argument, the
       current regular  expression  remains  unchanged.   Strings
       passed  to both re_comp and re_exec must b terminated by a
       NULL byte, and may include newline characters.

       The strings passed to both re_comp and  re_exec  may  have
       trailing  or  embedded NEWLINE characters; they are termi-
       nated by null characters.  The regular expressions  recog-
       nized are described in the manual page entry for given the
       above difference.

RReettuurrnn vvaalluueess
       The re_comp function  returns  a  NULL  pointer  when  the
       string  pointed  to by the string argument is successfully
       converted.  Otherwise, a pointer to one of  the  following
       strings  is returned: No previous regular expression Regu-
       lar expression too long unmatched \( missing  ]  too  many
       \(\) pairs unmatched \)

       Upon  successful  completion,  re_exec returns 1 if string
       matches the last compiled regular expression.   Otherwise,
       re_exec  returns  0 if string fails to match the last com-
       piled regular expression, and -1 if the  compiled  regular
       expression  is  invalid  (indicating  an  internal error).
       characters; they are terminated by null  characters.   The
       regular expressions recognized are described in the manual
       page entry for given the above difference.

CCoommppaattiibbiilliittyy
       These functions were added to X/Open System Interfaces and
       Headers,  Issue 4, Version 2, but are labelled to be with-
       drawn in a future issue.  For  portability,  the  routines
       documented on are preferred.

RReeffeerreenncceess
SSttaannddaarrddss ccoonnffoorrmmaannccee
       These  routines  conform  to  X/Open System Interfaces and
       Headers, Issue 4, Version 2.

                                                                1

