

getcwd(3C)                                             getcwd(3C)

SSyynnooppssiiss
       #include <unistd.h>

       char *getcwd(char *buf, size_t size);

DDeessccrriippttiioonn
       getcwd  returns  a  pointer to the current directory path-
       name.  The value of size must be at least one greater than
       the length of the pathname to be returned.

       If  buf  is  not  NULL, the pathname will be stored in the
       space pointed to by buf.

       If buf is a NULL pointer, getcwd will obtain size bytes of
       space  using  In this case, the pointer returned by getcwd
       may be used as the argument in a subsequent call to  free.

RReettuurrnn vvaalluueess
       getcwd  returns  NULL  with errno set if size is not large
       enough, or if an error occurs in a lower-level function.

       getcwd will fail if one or more of the following are true:
       A  parent  directory cannot be read to get its name.  size
       is equal to 0.  size is less than 0 or is greater  than  0
       and less than the length of the pathname plus 1.

RReeffeerreenncceess
EExxaammpplleess
       Here  is  a program that prints the current working direc-
       tory.  #include <unistd.h> #include <stdio.h>

       main() {      char *cwd;      if ((cwd = getcwd(NULL, 64))
       ==       NULL)            {                 perror("pwd");
                 exit(2);      }      (void)printf("%s\n",  cwd);
            return(0); }

SSttaannddaarrddss ccoonnffoorrmmaannccee
       This  routine  conforms  to  X/Open  System Interfaces and
       Headers, Issue 4, Version 2.

                                                                1

