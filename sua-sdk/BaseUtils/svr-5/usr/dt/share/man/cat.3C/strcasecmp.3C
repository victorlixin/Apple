

strcasecmp(3C)                                     strcasecmp(3C)

SSyynnooppssiiss
       #include <strings.h>

       int strcasecmp(const char *s1, const char *s2);

       int strncasecmp(const char *s1, const char *s2, size_t n);

DDeessccrriippttiioonn
       The strcasecmp function compares, while  ignoring  differ-
       ences  in  case, the string pointed to by s1 to the string
       pointed to by s2.

       The strncasecmp function compares, while ignoring  differ-
       ences  in  case,  not  more  than  n bytes from the string
       pointed to by s1 to the string pointed to by s2.

       These functions assume the ASCII character set when equat-
       ing lower and upper case characters.  In the POSIX locale,
       strcasecmp and strncasecmp do upper to lower  conversions,
       then a byte comparison.

       These  functions operate on null-terminated strings.  They
       do not check for overflow of any receiving string.

RReettuurrnn vvaalluuee
       Upon completion, strcasecmp  returns  an  integer  greater
       than,  equal  to, or less than 0, if the string pointed to
       by s1 is, ignoring case, greater than, equal  to  or  less
       than the string pointed to by s2, respectively.

       Upon successful completion, strncasecmp returns an integer
       greater than, equal to, or less than 0,  if  the  possibly
       null-terminated  array pointed to by s1 is, ignoring case,
       greater than, equal to or less than the possibly null-ter-
       minated array pointed to by s2 respectively.

RReeffeerreenncceess
NNoottiicceess
       strcasecmp and strncasecmp use native character comparison
       as above and assume the ASCII character set.

SSttaannddaarrddss ccoonnffoorrmmaannccee
       These routines conform to  X/Open  System  Interfaces  and
       Headers, Issue 4, Version 2.

                                                                1

