

ecvt(3C)                                                 ecvt(3C)

SSyynnooppssiiss
       #include <stdlib.h>

       char  *ecvt(double  value,  int  ndigit,  int  *decpt, int
       *sign);

       char *ecvtl(long double value, int ndigit, int *decpt, int
       *sign);

       char  *fcvt(double  value,  int  ndigit,  int  *decpt, int
       *sign);

       char *fcvtl(long double value, int ndigit, int *decpt, int
       *sign);

       char *gcvt(double value, int ndigit, char *buf);

       char *gcvtl(long double value, int ndigit, char *buf);

DDeessccrriippttiioonn
       ecvt  and  ecvtl convert value to a null-terminated string
       of ndigit digits and return a pointer thereto.  The  high-
       order  digit  is  non-zero, unless the value is zero.  The
       low-order digit is rounded.  The position of  the  decimal
       point  relative  to  the beginning of the string is stored
       indirectly through decpt (negative means to  the  left  of
       the  returned  digits).  The decimal point is not included
       in the returned string.  If the sign of the result is neg-
       ative,  the word pointed to by sign is non-zero, otherwise
       it is zero.

       fcvt and fcvtl are identical to  ecvt  and  ecvtl,  except
       that the correct digit has been rounded for printf %f out-
       put of the number of digits specified by ndigit [see

       gcvt and gcvtl convert  the  value  to  a  null-terminated
       string  in  the  array  pointed  to by buf and return buf.
       They attempt to produce ndigit significant  digits  in  %f
       format  if possible, otherwise %e format (scientific nota-
       tion), ready for printing.  A minus sign, if there is one,
       or  a  decimal  point  will  be  included  as  part of the
       returned string.  Trailing zeros are suppressed.

RReeffeerreenncceess
NNoottiicceess
       The values returned by ecvt, ecvtl, fcvt, and fcvtl  point
       to a single static data array whose content is overwritten
       by each call.

       Note: Most applications should use sprintf [see  and  str-
       told [see instead of these functions.

                                                                1

