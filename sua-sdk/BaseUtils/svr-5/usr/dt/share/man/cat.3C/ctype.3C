

ctype(3C)                                               ctype(3C)

SSyynnooppssiiss
       #include <ctype.h>

       int isalpha(int c);

       int isblank(int c);

       int isupper(int c);

       int islower(int c);

       int isdigit(int c);

       int isxdigit(int c);

       int isalnum(int c);

       int isspace(int c);

       int ispunct(int c);

       int isprint(int c);

       int isgraph(int c);

       int iscntrl(int c);

       int isascii(int c);

DDeessccrriippttiioonn
       These  macros  classify  character-coded  integer  values.
       Each is a predicate returning non-zero for true, zero  for
       false.   The behavior of these macros, except for isdigit,
       isxdigit, and isascii, is affected by the  current  locale
       [see  To  modify the behavior, change the LC_TYPE category
       in setlocale, that is,  setlocale  (LC_CTYPE,  newlocale).
       In  the  C  locale,  or  in  a locale where character type
       information is  not  defined,  characters  are  classified
       according to the rules of the US-ASCII 7-bit coded charac-
       ter set.

       The macro isascii is defined on all  integer  values;  the
       rest  are  defined  only where the argument is an int, the
       value of which is representable as an  unsigned  char,  or
       EOF,  which is defined by the stdio.h header file and rep-
       resents end-of-file.

       tests for any character for which isupper  or  islower  is
       true,  or  any character that is one of an implementation-
       defined set of  characters  for  which  none  of  iscntrl,
       isdigit,  ispunct,  or  isspace is true.  In the C locale,
       isalpha returns true only for  the  characters  for  which
       isupper  or  islower is true.  tests for any blank charac-
       ter, or one of a locale-specific  set  of  characters  for

                                                                1

ctype(3C)                                               ctype(3C)

       which isspace is true and is used to separate words within
       a line of text.  In the C  locale,  isblank  returns  true
       only  for space and horizontal tab.  tests for any charac-
       ter that is an uppercase letter or is one of an  implemen-
       tation-defined  set  of characters for which none of iscn-
       trl, isdigit, ispunct, isspace, or islower  is  true.   In
       the C locale, isupper returns true only for the characters
       defined as uppercase  ASCII  characters.   tests  for  any
       character  that  is  a  lowercase  letter  or is one of an
       implementation-defined set of characters for which none of
       iscntrl,  isdigit,  ispunct,  isspace, or isupper is true.
       In the C locale, islower returns true only for the charac-
       ters defined as lowercase ASCII characters.  tests for any
       decimal-digit character.  tests for any  hexadecimal-digit
       character  ([0-9], [A-F] or [a-f]).  tests for any charac-
       ter for which  isalpha  or  isdigit  is  true  (letter  or
       digit).   tests  for any space, tab, carriage-return, new-
       line, vertical-tab,  or  form-feed  (standard  white-space
       characters) or for one of an implementation-defined set of
       characters for which isalnum is false.  In the  C  locale,
       isspace  returns  true  only  for the standard white-space
       characters.  tests for any  printing  character  which  is
       neither a space nor a character for which isalnum is true.
       tests for any printing character, including space  (    ).
       tests for any printing character, except space.  tests for
       any ``control character'' as defined by the character set.
       tests  for  any  ASCII  character, code between 0 and 0177
       inclusive.

       All  the  character  classification  macros  use  a  table
       lookup.

       Functions  exist for all the above defined macros.  To get
       the function form, the macro name must  be  bypassed  (for
       example, #undef isdigit).

   FFiilleess
       /usr/lib/locale/locale/LC_CTYPE

RReeffeerreenncceess
NNoottiicceess
       If the argument to any of the character handling macros is
       not in the domain of the function,  the  result  is  unde-
       fined.

                                                                2

