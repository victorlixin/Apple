

elf_getident(3elf)                             elf_getident(3elf)

SSyynnooppssiiss
       cc [flag . . . ] file . . . -lelf [library] . . .

       #include <libelf.h>

       char *elf_getident(Elf *elf, size_t *ptr);

DDeessccrriippttiioonn
       As  explains, ELF provides a framework for various classes
       of files, where basic objects may have 32 bits,  64  bits,
       and  so  forth.  To accommodate these differences, without
       forcing the larger sizes on smaller machines, the  initial
       bytes  in an ELF file hold identification information com-
       mon to all file classes.  Every ELF header's  e_ident  has
       EI_NIDENT bytes with the following interpretation.

       ------------------------------------------------------------------
       e_ident Index     Value           Purpose
       ----------------+---------------+---------------------------------
       _EE_II____MM_AA_GG_00         | _EE_LL_FF_MM_AA_GG_00       |
       _EE_II____MM_AA_GG_11         | _EE_LL_FF_MM_AA_GG_11       | File identification
       _EE_II____MM_AA_GG_22         | _EE_LL_FF_MM_AA_GG_22       |
       _EE_II____MM_AA_GG_33         | _EE_LL_FF_MM_AA_GG_33       |
       ----------------+---------------+---------------------------------
       _EE_II____CC_LL_AA_SS_SS        | _EE_LL_FF_CC_LL_AA_SS_SS_NN_OO_NN_EE  |
                       | _EE_LL_FF_CC_LL_AA_SS_SS_33_22    | File class
                       | _EE_LL_FF_CC_LL_AA_SS_SS_66_44    |
       ----------------+---------------+---------------------------------
       _EE_II____DD_AA_TT_AA         | _EE_LL_FF_DD_AA_TT_AA_NN_OO_NN_EE   |
                       | _EE_LL_FF_DD_AA_TT_AA_22_LL_SS_BB   | Data encoding
                       | _EE_LL_FF_DD_AA_TT_AA_22_MM_SS_BB   |
       ----------------+---------------+---------------------------------
       _EE_II____VV_EE_RR_SS_II_OO_NN      | _EE_VV____CC_UU_RR_RR_EE_NN_TT    | File version
       ----------------+---------------+---------------------------------
       _EE_II____OO_SS_AA_BB_II        | _EE_LL_FF_OO_SS_AA_BB_II____NN_OO_NN_EE | Vendor extension identification
       ----------------+---------------+---------------------------------
       _EE_II____OO_SS_AA_BB_II_VV_EE_RR_SS_II_OO_NN | _00             | Vendor extension version
       ----------------+---------------+---------------------------------
       _99_--_11_55            | _00             | Unused, set to zero
       ----------------+---------------+---------------------------------

       Other  kinds  of  files  [see also may have identification
       data, though they would not conform to e_ident.

       elf_getident returns a pointer  to  the  file's  ``initial
       bytes.''  If the library recognizes the file, a conversion
       from the file image to the memory image may occur.  In any
       case,  the identification bytes are guaranteed not to have
       been modified, though the  size  of  the  unmodified  area
       depends on the file type.  If ptr is non-null, the library
       stores the number of identification bytes in the  location
       to  which ptr points.  If no data is present, elf is null,
       or an error occurs, the return value is  a  null  pointer,
       with zero optionally stored through ptr.

                                                                1

elf_getident(3elf)                             elf_getident(3elf)

RReeffeerreenncceess

                                                                2

