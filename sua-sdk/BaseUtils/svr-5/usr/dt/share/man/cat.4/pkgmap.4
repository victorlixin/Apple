

pkgmap(4)                                               pkgmap(4)

DDeessccrriippttiioonn
       pkgmap  is  an ASCII file that provides a complete listing
       of the package contents.  It is automatically generated by
       using the information in the prototype file.

       Each  entry  in  pkgmap  describes  a single ``deliverable
       object file.''  A deliverable object file  includes  shell
       scripts,  executable objects, data files, and directories.
       The entry consists of several fields of information,  each
       field  separated  by  a  space.   The fields are described
       below and must appear in the order shown.  A field  desig-
       nating  the  part  number  in which the object resides.  A
       part is a collection of files, and is the atomic  unit  by
       which  a package is processed.  A developer can choose the
       criteria for grouping files  into  a  part  (for  example,
       based  on  class).   If no value is defined in this field,
       part 1 is assumed.  A one-character field  that  indicates
       the file type.  Valid values are: a standard executable or
       data file a file to be edited upon installation or removal
       volatile  file (one whose contents are expected to change)
       directory an exclusive directory (See NOTICES) linked file
       named  pipe  character special device block special device
       installation script or information file symbolic link

       Once a file has the file type attribute v, it will  always
       be  volatile.   For  example,  if  a  file being installed
       already exists and has the file  type  attribute  v,  then
       even  if  the  version  of the file being installed is not
       specified as volatile, the file type attribute will remain
       volatile.   The  installation  class  to  which  the  file
       belongs.  This name must contain only alphanumeric charac-
       ters and be no longer than 12 characters.  It is not spec-
       ified if the ftype is i (information file).  The  pathname
       where  the  object will reside on the target machine, such
       as /usr/bin/mail.  Relative pathnames (those that  do  not
       begin with a slash) indicate that the file is relocatable.

       For linked files (ftype is either l or s),  pathname  must
       be  in  the form of path1=path2, with path1 specifying the
       destination of the link and path2 specifying the source of
       the link.

       For  symbolically  linked  files, when path2 is a relative
       pathname starting with path2 is  not  considered  relocat-
       able.   For  example,  if  you  enter  a  line  such  as s
       /foo/bar/etc/mount=../usr/sbin/mount

       path1 (/foo/bar/etc/mount) will  be  a  symbolic  link  to
       ../usr/sbin/mount.

       pathname can contain variables which support relocation of
       the file.  A $parameter can be embedded  in  the  pathname
       structure.   $BASEDIR  can  be used to identify the parent
       directories of  the  path  hierarchy,  making  the  entire

                                                                1

pkgmap(4)                                               pkgmap(4)

       package  easily relocatable.  Default values for parameter
       and BASEDIR must be supplied in the pkginfo file  and  can
       be overridden at installation.

       Special  characters,  such  as  an  equal  sign  (=),  are
       included in pathnames by surrounding the  entire  pathname
       in single quotes (as in, for example, '/usr/lib/~=').  The
       major device number.  The  field  is  only  specified  for
       block or character special devices.  The minor device num-
       ber.  The field is only specified for block  or  character
       special devices.  The octal mode of the file (for example,
       0664).  A question mark (?) indicates that the  mode  will
       be  left  unchanged, implying that the file already exists
       on the target machine.  This field is not used for  linked
       files,  packaging  information  files  or  non-installable
       files.  The owner of the file (for example, bin or  root).
       The  field is limited to 14 characters in length.  A ques-
       tion mark (?)  indicates  that  the  owner  will  be  left
       unchanged,  implying  that  the file already exists on the
       target machine.  This field is not used for  linked  files
       or  non-installable  files.   It is used optionally with a
       package information file.  If used, it indicates with what
       owner an installation script will be executed.

       The  owner  can be a variable specification in the form of
       $[A-Z] and will be  resolved  at  installation  time  (see
       NOTICES).   The group to which the file belongs (for exam-
       ple, bin or sys).  The field is limited to  14  characters
       in  length.   A question mark (?) indicates that the group
       will be left unchanged, implying  that  the  file  already
       exists  on the target machine.  This field is not used for
       linked files or non-installable files.  It is used option-
       ally  with  a package information file.  If used, it indi-
       cates with what group an installation script will be  exe-
       cuted.

       Can  be a variable assignment in the form of $[A-Z].  Will
       be resolved  at  installation  time  (see  NOTICES).   The
       actual size of the file in bytes.  This field is not spec-
       ified for named pipes, special  devices,  directories,  or
       linked  files.   The  checksum of the file contents.  This
       field is not specified for named pipes,  special  devices,
       directories,  or linked files.  The time of last modifica-
       tion, as reported by the function call.  This field is not
       specified  for  named pipes, special devices, directories,
       or linked files.

       The following three optional fields  must  be  used  as  a
       group.   That  is,  all  three must be specified if any is
       specified.  The Mandatory Access Control (MAC) Level Iden-
       tifier  (LID),  an integer value that specifies a combina-
       tion of a hierarchical classification  and  zero  or  more
       non-hierarchical  categories.   A  question mark (?) indi-
       cates that the mac field will be left unchanged,  implying

                                                                2

pkgmap(4)                                               pkgmap(4)

       that  the file already exists on the target machine.  This
       field can only be applied to a file on  a  sfs  filesystem
       and  is not used for linked files or packaging information
       files.  Mandatory Access Control is not supported in  this
       release; this field is present for compatibility with ear-
       lier release only.  A value of 0 should  be  used  if  you
       must  specify this field.  A comma-separated list of valid
       mnemonic  fixed  privilege  names  as  defined   for   the
       filepriv(1M) command.  The string NULL is used in place of
       the comma-separated list when fixed privileges are not  to
       be  specified.   A  question  mark  (?) indicates that the
       fixed field will be left unchanged, implying that the file
       already  exists  on  the  target  machine.   If  the fixed
       attribute is not supplied, then files are  installed  with
       no  fixed  privileges.   This field is not used for linked
       files or packaging information files.   A  comma-separated
       list  of  valid  mnemonic  inherited  privilege  names  as
       defined for the filepriv command.  The string NULL is used
       in place of the comma separated list when privilege is not
       to be specified.  A question mark (?) indicates  that  the
       inherited  field will be left unchanged, implying that the
       file already exists on the target machine.  If the  inher-
       ited  attribute  is not supplied, then files are installed
       with no inheritable privileges.  This field  is  not  used
       for  linked files or packaging information files.  Inheri-
       table privileges have no effect in  the  current  release.
       This  capability  is  maintained  solely for compatibility
       with earlier releases.

       Each pkgmap must have one line that  provides  information
       about  the number and maximum size (in 512-byte blocks) of
       parts that make up the package.  This line is in the  fol-
       lowing format: :number_of_parts  maximum_part_size

       Lines  that  begin  with  ``#''  are comment lines and are
       ignored.

       When files are saved during installation before  they  are
       overwritten,  they are normally just copied to a temporary
       pathname.  However, for files whose mode includes  execute
       permission (but which are not editable), the existing ver-
       sion is linked to a temporary pathname  and  the  original
       file  is removed.  This allows processes which are execut-
       ing during installation to be overwritten.

EExxaammpplleess
       The following is an example  pkgmap  file.   :2  500  1  i
       pkginfo 237 1179 541296672 1 b class1 /dev/diskette 17 134
       0644 root other 1 c class1 /dev/rdiskette 17 134 0644 root
       other 1 d none bin 0755 root bin 1 f none bin/INSTALL 0755
       root bin 11103 17954 541295535 1 f  none  bin/REMOVE  0755
       root   bin   3214  50237  541295541  1  l  none  bin/UNIN-
       STALL=bin/REMOVE 1 f none  bin/cmda  0755  root  bin  3580
       60325  541295567 0 NULL macread,macwrite 1 f none bin/cmdb

                                                                3

pkgmap(4)                                               pkgmap(4)

       0755 root bin 49107 51255 541438368 1  f  class1  bin/cmdc
       0755  root  bin  45599 26048 541295599 1 f class1 bin/cmdd
       0755 root bin 4648 8473 541461238 1 f none  bin/cmde  0755
       root  bin  40501  1264  541295622 1 f class2 bin/cmdf 0755
       root bin 2345 35889 541295574 1 f none bin/cmdg 0755  root
       bin  41185 47653 541461242 2 d class2 data 0755 root bin 2
       p class1 data/apipe 0755 root other 2 d none log 0755 root
       bin  0  NULL NULL 2 v none log/logfile 0755 root bin 41815
       47563 541461333 2 d none save 0755 root bin 2 d none spool
       0755 root bin 2 d none tmp 0755 root bin

RReeffeerreenncceess
NNoottiicceess
       The  pkgmap  file  can  contain  only one entry per unique
       pathname.

       An exclusive directory type (file) type x specifies direc-
       tories  that  are  constrained  to contain only files that
       appear   in    the    installation    software    database
       (/var/sadm/install/contents).  If there are other files in
       the directory, they will  be  removed  by  pkgchk  -fx  as
       described on the manual page.

       Variable specifications for the owner and group fields are
       defined in the pkginfo file.  For example, owner could  be
       $OWNER  in the pkgmap file; if OWNER is defined as root in
       the pkginfo file, $OWNER will get the value root when  the
       file is installed.

       MAC  levels (mac) are always installed on sfs filesystems,
       but have no effect because MAC is not  supported  in  this
       release.

       Fixed  and inheritable privileges (fixed and inherited) on
       files, if present, are always installed.  When a file with
       fixed  privileges  is  executed,  the fixed privileges are
       propagated to the  new  process.   Inheritable  privileges
       have no effect.

                                                                4

