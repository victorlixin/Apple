

VipDisconnect(3via)                           VipDisconnect(3via)

SSyynnooppssiiss
       cc  [flag  ...]  file  ...   -via  [library] ...  #include
       <vipl.h>

       VIP_RETURN VipDisconnect(VIP_VI_HANDLE ViHandle);

DDeessccrriippttiioonn
       The VipDisconnect routine is used to terminate  a  connec-
       tion.

       When the local endpoint is disconnected, it stops process-
       ing all posted descriptors, all pending (that is, not  yet
       completed)  descriptors  are  marked Completed, due to the
       disconnection, with a descriptor  flushed  error  and  the
       local  endpoint  transitions  to  the Idle state. For more
       information on supported states, refer to the manual page.

       When the remote endpoint causes a connection to terminate,
       either by closing the endpoint, or by  calling  VipDiscon-
       nect,  an asynchronous error callback occurs (see indicat-
       ing the disconnected connection. Note that the  node  that
       initiated  the  VipDisconnect  does not get an error call-
       back.  The local client should call VipDisconnect to reset
       the  disconnected  connection  from  the Error to the Idle
       state.

       VipDisconnect can be called in any VI state to cause pend-
       ing  descriptors  on  the  VI  to  be  completed  with the
       descriptor flushed error bit set, and transition the VI to
       the  Idle state. Specifically, VipDisconnect can be called
       in the Idle  state  in  order  to  force  pending  receive
       descriptors  to  be  completed in error. In this way, they
       can be de-queued prior to calling

       For  NICs  that   can   detect   network   partitions,   a
       VIP_NOT_REACHABLE error is returned if a network partition
       is detected. For Reliable Delivery and Reliable Reception,
       the  VI  transitions to the Error state (see for details),
       and any pending receive descriptors are marked as flushed.

   AArrgguummeennttss
       The handle of an instance of a connected VI endpoint.

RReettuurrnn vvaalluueess
       The  disconnect  operation  completed  successfully.   The
       specified ViHandle parameter was invalid.   An  error  was
       detected  that  was  caused  by insufficient resources.  A
       network partition was detected.

RReeffeerreenncceess

                                                                1

