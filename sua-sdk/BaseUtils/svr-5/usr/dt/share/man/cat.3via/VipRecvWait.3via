

VipRecvWait(3via)                               VipRecvWait(3via)

SSyynnooppssiiss
       cc  [flag  ...]  file  ...   -via  [library] ...  #include
       <vipl.h>

       VIP_RETURN VipRecvWait(VIP_VI_HANDLE  ViHandle,  VIP_ULONG
       TimeOut,
            VIP_DESCRIPTOR **DescriptorPtr);

DDeessccrriippttiioonn
       The  VipRecvWait  routine checks whether the descriptor on
       the head of a VI's receive queue has been marked as  being
       complete.  If the receive has completed, the descriptor is
       removed from the head of the queue, and the address of the
       descriptor is immediately returned. A VIP_DESCRIPTOR_ERROR
       is  returned  if  the  operation  completed  with   errors
       returned  in  the  descriptor's  status, or if the receive
       queue was empty. If the latter, DescriptorPtr  is  set  to
       NULL.

       If  the  descriptor  on the head of the queue has not been
       marked as complete, VipRecvWait blocks the calling process
       until  the descriptor is so-marked, or until the specified
       timeout has expired.

       VipRecvWait cannot be used to block  on  a  receive  queue
       that  has been associated with a completion queue. See for
       more details.

   AArrgguummeennttss
       The instance of a VI.  The count, in milliseconds,  before
       control is passed back to the calling process. This should
       be set to VIP_INFINITE if no  timeout  is  required.   The
       address of the descriptor that has completed.

RReettuurrnn vvaalluueess
       A completed descriptor was found on the receive queue.  If
       the receive queue is empty, the descriptor pointer is  set
       to  NULL.  Otherwise,  a  completed descriptor is returned
       with an  error  completion  status.   The  VI  handle  was
       invalid.   The timeout expired and no completed descriptor
       was found.  The receive queue is associated with a comple-
       tion  queue,  or  the operation failed due to insufficient
       resources.

RReeffeerreenncceess

                                                                1

