

statvfs(5)                                             statvfs(5)

SSyynnooppssiiss
       #include <sys/types.h> #include <sys/statvfs.h>

DDeessccrriippttiioonn
       The  statvfs.h  header  defines  the statvfs structure, in
       which the system calls statvfs and fstatvfs  return  data,
       and  the  statvfs64  structure,  in which the system calls
       statvfs64, and fstatvfs64 return data.  They  include  the
       following members: unsigned long  f_bsize;       /* funda-
       mental   file    system    block    size    */    unsigned
       long  f_frsize;      /*    fragment   size   */   unsigned
       long  f_blocks;      /* total # of blocks of f__frsize  on
       file system */ fsblkcnt_t     f_bfree; |-     /* total # of
       free  blocks  of  f_frsize   */   fsblkcnt_t     f_bavail;
       |-    /*  total  # of free blocks avail to non-superuser */
       fsfilcnt_t     f_files; |-    /*  total  #  of  file  nodes
       (inodes)  */  fsfilcnt_t     f_ffree;  |-     /* total # of
       free file nodes */ fsfilcnt_t     f_favail; |-    /*  #  of
       free    nodes    avail    to    non-superuser*/   unsigned
       long  f_fsid;        /* file system id (dev  for  now)  */
       char      f_basetype[FSTYPSZ];  /*  target  fs  type name,
       null-terminated */  unsigned  long  f_flag;        /*  bit
       mask  of flags */ unsigned long  f_namemax;     /* maximum
       file name length */ char      f_fstr[32];    /* file  sys-
       tem  specific string */ int       st_aclcnt;     /* number
       of     ACL     entries     (default     is      4)      */
       level_t        st_level;      /* security level identifier
       (MAC) */ This data type is a 32 bit/64 bit switchable data
       type.   See on intro(2) for information on Large File Sup-
       port (LFS).

       f_basetype contains a null-terminated FSType name  of  the
       mounted target (for example, s5 mounted over NFS will con-
       tain nfs).

       The following flags can be returned in the  f_flag  field:
       ST_RDONLY 0x01 /*     read-only     file     system     */
       ST_NOSUID 0x02 /* does not support setuid/setgid semantics
       */  ST_NOTRUNC     0x04 /*  does  not  truncate file names
       longer */                /* than {NAME_MAX}*/

RReeffeerreenncceess

                                                                1

