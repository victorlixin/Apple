

SaOpenHost(3tlib)                               SaOpenHost(3tlib)

SSyynnooppssiiss
       SaOpenHostCB cbs

       SaOpenHostDialog parent instance value okCallback
       SaOpenHostInvokeManager script cbs
       SaOpenHostManagerRunning script host

DDeessccrriippttiioonn
       These  provide  a  consistent and convenient interface for
       all admin applications providing remote  management  func-
       tionality using a Open Host interface. When activated, the
       Open Host interface prompts for a host name, then attempts
       to launch a second instance of the application passing the
       remote host name as a command line argument. The Host name
       input  form  also provides a Select button for a graphical
       browser of valid host names accessible to the local  host.

       The  main  interface is the SaOpenHostCB procedure itself,
       designed as a callback suitable for attaching directly  to
       an  application pulldown menu item. For most applications,
       this should completely provide the desired  functionality.
       The additional interfaces are used by SaOpenHostCB and are
       documented for use as a potential lower  level  interface.
       provides  a  complete interface launched by activating the
       application widget where this is  attached  as  a  primary
       callback.  It presents a host selection dialog including a
       text field and a select button for graphical  browsing  of
       available hosts (SaOpenHostDialog).  Once the user selects
       a host and closes the dialog with OK, this interface  exe-
       cutes  a  new  instance of the application, passing it the
       selected host name on the command line  (SaInvokeManager).
       The new application instance has effectively opened a view
       on a remote host  for  systems  management.   SaOpenHostCB
       takes  a  callback structure and is therefore suited to be
       the direct callback of a widget such as  a  pulldown  menu
       item,  a push button, toolbar button etc.  creates an Open
       Host dialog. This includes a text field for the host  name
       as  well  as  a  Select  button  for graphical browsing of
       available host names.  Invokes the application  passing  a
       host name on the command line.  This results in two appli-
       cation instances, each a  separate  process.   Note,  this
       handles  the  special  casing  of  the  MOTIF versus CHARM
       graphical modes of &VTcl;.  Checks to see if a  particular
       application is running locally and managing a remote host.
       Returns true (1) or false (0) accordingly.

   AArrgguummeennttss
       &VTcl; parent widget for new form dialog a unique  identi-
       fier  string  for  each open host dialog default host name
       value for the text widget on the open host dialog applica-
       tion  callback  invoked  after  ok is pressed name of exe-
       cutable application file host name &VTcl; callback  struc-
       ture.  Generally,  &VTcl; provides this automatically when
       invoking the callback. In the event that applications call

                                                                1

SaOpenHost(3tlib)                               SaOpenHost(3tlib)

       these procedures directly, an argument must be passed as a
       callback structure.

RReeffeerreenncceess
NNoottiicceess
       Applications using this interface must accept a host  name
       as a command line argument: Application [flags] [hostname]
       . . .

                                                                2

