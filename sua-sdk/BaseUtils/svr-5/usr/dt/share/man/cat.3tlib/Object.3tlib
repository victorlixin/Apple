

Object(3tlib)                                       Object(3tlib)

SSyynnooppssiiss
       ObjectCreate  [option ...] class objects [referenceObject]
       ObjectDelete  [option  ...]  class  objects   ObjectAction
       [option ...] class objects actionType actionInfo ObjectGet
       [option ...] class objects [attributeList]  ObjectReplace-
       WithDefault  [option  ...]  class  objects [attributeList]
       ObjectReplace [option  ...]  class  objects  attributeVal-
       ueList  ObjectAdd [option ...] class objects attributeVal-
       ueList ObjectRemove [option ...] class objects  attribute-
       ValueList

DDeessccrriippttiioonn
       These  calls  perform  operations  on  admin  objects. All
       object calls take a class and a  list  of  objects  within
       that  class. The class of an object determines what opera-
       tions can be performed on it and what its behavior is with
       respect  to  those  operations.  create an object with the
       given class and name.  If a reference object is specified,
       base the attributes of the new object on those of the ref-
       erence object; otherwise, default  values  will  be  used.
       delete an object with the given class and name.  perform a
       class-specific action on an object with  the  given  class
       and  name.   The  action  will  use  the additional action
       information if needed.  get attributes of the object  with
       the  given class and name. If an attribute list is passed,
       get only the listed attributes;  otherwise,  get  all  the
       attributes  of  the  object.   assign  default  values  to
       attributes of the object with the given class and name. If
       an  attribute  list  is passed, replace only the values of
       the listed attributes; otherwise, replace  the  values  of
       all  the  attributes of the object with defaults.  replace
       specified values of the object with the  given  class  and
       name.   For  each  attribute-value  pair in the attribute-
       value list, replace the existing  value(s)  of  the  given
       attribute   with   the  given  value(s).   add  values  to
       attributes of the object with the given  class  and  name.
       For each attribute-value pair in the attribute-value list,
       add the given value(s) to  the  given  attribute.   remove
       values  from attributes of the object with the given class
       and name.  For each attribute-value pair in the attribute-
       value  list,  remove  the  given  value(s)  from the given
       attribute.

   AArrgguummeennttss
       name of the class on which the operation is performed. The
       admin  library  uses  the class name to identify which OSA
       (Object Service Agent) to run.   list  of  objects  to  be
       operated  on.  This list may be modified if the -filter or
       -scope options are used.  optional variable that names  on
       which  attributes  the  operation runs.  If it is not pro-
       vided on the command line, the list of all attributes that
       are valid for the operation on the class are used instead.
       list of attribute/value pairs that  are  provided  to  the
       operation.    used   with   the   create   operation,  the

                                                                1

Object(3tlib)                                       Object(3tlib)

       referenceObject is used as a basis for the new  object  in
       terms  of  supplying  default  values,  and so on.  refer-
       enceObject must already exist as an object  instance.   If
       it  is not provided on the command line, the create opera-
       tion uses default values.  tells an action operation  what
       action  to  perform.   tells an action operation any addi-
       tional information it might require

   OOppttiioonnss
       The following optional arguments can be placed before  the
       class  argument  in  any  order.  These  arguments must be
       specifically supported by the class definition in order to
       be  valid.  specifies the access control to be implemented
       on this operation describes the filter that is used on the
       list  of  object  instances.  The filter can consist of an
       algebraic expression composed  of  the  following  expres-
       sions:  expression      :=  {  expression  or expression }
                 := { expression and expression }           :=  {
       not  expression  }            :=  {  present  attribute  }
                 := { attribute filterOperation value}  filterOp-
       eration := eq           := le           := ge           :=
       subset           := superset            :=  intersect  The
       filter  operations  used  in  a  filter expression must be
       valid for the attribute on which they are  used.  This  is
       determined  by  the  class  definition.   Specifies to the
       admin OSA named by the class which type of syn-  chroniza-
       tion  to  implement  in  performing  the  operation.  This
       allows for a modeless implementation of a user-admin  con-
       nection.  userCB  is the name of a callback function to be
       sent the results of the  operation  when  they  have  com-
       pleted.   If  the  scope  option is used, admin determines
       which objects are contained by each object  in  the  given
       object  list.  This list of contained objects, rather than
       the original list, is then passed  through  any  specified
       filters  (see  above)  and  subjected  to the given object
       operation.

RReettuurrnn vvaalluueess
       The object list passed to the object operation has scoping
       and then filtering applied to it if specified. The result-
       ing object list has the specified operation  performed  on
       it.  A  list  of responses, called BMIP responses, one for
       each object in the final object list, is  returned.   Each
       response has the following format: {operation {class} name
       {attributeValueList} {actionType}  {actionInfo}  {errors}}
       The  elements  of  the  response are as follows: operation
       performed on the object.  class of the object on which the
       operation  was performed.  name of the object on which the
       operation was performed.  list  of  attribute-value  pairs
       relating  to the operation performed.  type of action per-
       formed (only used in ObjectAction calls).  information for
       the  action  performed  (only used in ObjectAction calls).
       error stack returned by the operation, if any.  The manual
       page describes a set of helper routines to extract each of

                                                                2

Object(3tlib)                                       Object(3tlib)

       these fields.

EExxaammpplleess
       ObjectCreate {sco user} johnp {{comment {John Q. Public}}}

       ObjectGet {sco user} johnp {loginGroup}

       ObjectGet -filter {{uid le 1000} and {not {shell eq ksh}}}
       {sco user}
            {fredp johnp lisap walterp} {groups}

       ObjectAdd {sco user} johnp {{groups {104 203 165}}}

       ObjectAction {sco user} johnp createHome {0755}

       ObjectDelete {sco user} johnp

RReeffeerreenncceess

                                                                3

