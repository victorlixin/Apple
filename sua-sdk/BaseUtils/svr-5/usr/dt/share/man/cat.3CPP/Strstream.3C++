

Strstream(3C++)                                   Strstream(3C++)

SSyynnooppssiiss
       #include <Strstream.h> namespace SCO_SC {

       class Strstreambuf : public streambuf { public:
           Strstreambuf();
           Strstreambuf(String& s);
           ~Strstreambuf();
           String  str(); }; class Strstreambase : virtual public
       ios { public:
           Strstreambase();
           Strstreambase(String& s);
           ~Strstreambase();
           Strstreambuf* rdbuf(); }; class  iStrstream  :  public
       Strstreambase, public istream { public:
           iStrstream(const String& s);
           ~iStrstream(); }; class oStrstream : public Strstream-
       base, public ostream { public:
           oStrstream();
           oStrstream(String& s);
           ~oStrstream();
           String str(); }; class Strstream :  public  Strstream-
       base, public iostream { public:
           Strstream();
           Strstream(String& s);
           ~Strstream();
           String   str();   };   //  Compatibility  typedef  ...
       oStrstream; typedef ... iStrstream; }

DDeessccrriippttiioonn
       Strstreambuf, Strstreambase, iStrstream,  oStrstream,  and
       Strstream  specialize  classes  streambuf,  ios,  istream,
       ostream, and iostream (see iostream(3C++)) to use a String
       (see  String(3C++)) for its underlying sequence of charac-
       ters.

   ccllaassss SSttrrssttrreeaammbbuuff
       A Strstreambuf is queuelike; characters are stored at  the
       right  end  of  the underlying String and fetched from the
       left.  Strstreambufs support arbitrary putback.

       Strstreambuf(); Characters will be stored into and fetched
       from an initially empty internal String.

       Strstreambuf(String&  s);  Characters  will be stored into
       and fetched from s.  Since buffering may occur,  the  con-
       tents  of  s  at  any given moment may not be equal to the
       current contents of the sequence.  Calling  sync()  forces
       agreement.

       ~Strstreambuf(); Destructor.

       str(); The current contents of the sequence.

                                                                1

Strstream(3C++)                                   Strstream(3C++)

   ccllaassss SSttrrssttrreeaammbbaassee
       Strstreambase();  An  ios employing a Strstreambuf created
       by the constructor Strstreambuf().

       Strstreambase(String& s); An ios employing a  Strstreambuf
       created by the constructor Strstreambuf(s).

       ~Strstreambase(); Destructor.

       Strstreambuf*   rdbuf();   A  pointer  to  the  underlying
       Strstreambuf.

   ccllaassss iiSSttrrssttrreeaamm
       iStrstream(const  String&  s);  An  istream  employing   a
       Strstreambuf created by the constructor Strstreambuf(s).

       ~iStrstream(); Destructor.

   ccllaassss ooSSttrrssttrreeaamm
       oStrstream();  An ostream employing a Strstreambuf created
       by the constructor Strstreambuf().

       oStrstream(String& s); An ostream employing a Strstreambuf
       created by the constructor Strstreambuf(s).

       ~oStrstream(); Destructor.

       str();  The current contents of the sequence.  (Equivalent
       to rdbuf()->str().)

   ccllaassss SSttrrssttrreeaamm
       Strstream(); An iostream employing a Strstreambuf  created
       by the constructor Strstreambuf().

       Strstream(String& s); An iostream employing a Strstreambuf
       created by the constructor Strstreambuf(s).

       ~Strstream(); Destructor.

       str(); The current contents of the sequence.   (Equivalent
       to rdbuf()->str().)

RReeffeerreenncceess

                                                                2

