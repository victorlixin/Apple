

count(3C++)                                           count(3C++)

SSyynnooppssiiss
       #include <stddef.h>

       template<class T> ptrdiff_t count(
            const T& val,
            const T* b,
            const T* e ); template <class T> ptrdiff_t count_r(
            int (*rel)(const T*,const T*),
            const T& val,
            const T* b,
            const T* e ); template <class T> ptrdiff_t count_p(
            int (*pred)(const T*),
            const T* b,
            const T* e );

AAssssuummppttiioonnss
       (1)  For  the  plain  version,  T::operator==   defines an
       equivalence relation on T.

       (2) For the relational version, rel   defines  an  equiva-
       lence relation on T.

DDeessccrriippttiioonn
       These  functions  count  elements that satisfy some crite-
       rion.  template <class T> ptrdiff_t count(
           const T& val,
           const T* b,
           const T* e
           );

       Counts elements equal to val, as determined  by  T::opera-
       tor==.  template <class T> ptrdiff_t count_r(
           int (*rel)(const T*,const T*),
           const T& val,
           const T* b,
           const T* e
           );

       Like count, but uses rel to test for equality. That is, if
       p is a pointer into the array,  then  *p   is  counted  if
       rel(p,&val)==0.  template <class T> ptrdiff_t count_p(
           int (*pred)(const T*),
           const T* b,
           const T* e );

       Counts  elements that satisfy the predicate.  That is,  if
       p is a pointer into the array,   then  *p  is  counted  if
       pred(p) is true.

CCoommpplleexxiittyy
       If  N  is  the size of the array, then complexity is O(N).
       Exactly N tests of the relation are done.

                                                                1

count(3C++)                                           count(3C++)

NNootteess
       Because a Block (see  Block(3C++))   can  always  be  used
       wherever  an  array  is  called for,  Array Algorithms can
       also be used with Blocks.   In fact, these two  components
       were actually designed to be used together.

RReeffeerreenncceess
       Array_alg(3C++) Block(3C++)

                                                                2

