

dfs(3C++)                                               dfs(3C++)

SSyynnooppssiiss
       #define    GApredicate(T)    ...    #define   Graph_algde-
       clare(G,V,E)...    #define    Graph_algimplement(G,V,E)...
       Expanding  Graph_algdeclare(G,V,E)  produces the following
       text:
           typedef int GApredicate(V)(const V* v);
           List_of_p<V> dfs(G& g,V* v,GApredicate(V)* f = 0);
           List_of_p<V> dfs_u(G& g,V* v,GApredicate(V)* f = 0);

DDeessccrriippttiioonn
       Given a Graph g, these functions start  at  Vertex  v  and
       perform a depth-first traversal of the connected component
       containing v (see comps(3C++)).  They  return  a  list  of
       pointers  to  the Vertices in visitation order.  As usual,
       functions with the _u suffix  treat  the  Graph  as  undi-
       rected,  while those without the suffix treat the Graph as
       directed.  An optional client-supplied  function  will  be
       called upon arrival at each Vertex; a zero returned by the
       function terminates the traversal.

CCoommpplleexxiittyy
       O(max(v,e)), where v is the number of Vertices  and  e  is
       the number of Edges in the component.

NNootteess
       For breadth-first traversal, use bfs(3C++).

RReeffeerreenncceess

                                                                1

