

insert(3C++)                                         insert(3C++)

SSyynnooppssiiss
       template  <class  T> T* insert(T val, T* b,T* e); template
       <class T> T* insert_r(int (*rel)(const T*,const T*),T val,
            T* b,T* e);

AAssssuummppttiioonnss
       (1)  For  the  plain version, T::operator< defines a total
       ordering relation on T and the array is sorted w.r.t. that
       relation.

       (2) For the relational version, rel defines a total order-
       ing relation on T and the  array  is  sorted  w.r.t.  that
       relation.

       (3) T has operator=.

DDeessccrriippttiioonn
       These  functions  assign  the value val to the location in
       the  sorted  array  that  contains  the  leftmost  element
       greater  than  val and returns a pointer to this location.
       Before making the assignment, all elements from that loca-
       tion to the end of the array are moved one location to the
       right.  template <class T> T* insert(T val,T* b,T* e);

       Uses T::operator< to define the ordering  relation.   tem-
       plate  <class  T>  T*  insert_r(int  (*rel)(const T*,const
       T*),T val,
             T* b,T* e);

       Uses rel to define the ordering relation.

CCoommpplleexxiittyy
       If N is the size of the array, then  complexity  is  O(N).
       At  most  lgN tests of the ordering relation and at most N
       assignments are done.

NNootteess
       Because a Block (see  Block(3C++))   can  always  be  used
       wherever  an  array  is  called for,  Array Algorithms can
       also be used with Blocks.   In fact, these two  components
       were actually designed to be used together.

RReeffeerreenncceess

                                                                1

