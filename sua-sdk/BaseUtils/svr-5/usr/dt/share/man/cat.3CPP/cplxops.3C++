

cplxops(3C++)                                       cplxops(3C++)

SSyynnooppssiiss
       #include <complex.h>

       class complex {

       public:       friend  complex operator+(complex,  complex)
       throw();      friend  complex operator-(complex)  throw();
            friend     complex     operator-(complex,    complex)
       throw();      friend  complex operator*(complex,  complex)
       throw();       friend  complex operator/(complex, complex)
       throw();

            friend int     operator==(complex, complex)  throw();
            friend int     operator!=(complex, complex) throw();

            void operator+=(complex)   throw();       void opera-
       tor-=(complex)   throw();         void operator*=(complex)
       throw();      void operator/=(complex) throw();
        };

DDeessccrriippttiioonn
       The  basic arithmetic operators, comparison operators, and
       assignment operators are overloaded for  complex  numbers.
       The operators have their conventional precedences.  In the
       following descriptions for complex operators,
        -- x, y, and z are of type complex.

       Arithmetic operators:  Returns  a  complex  which  is  the
       arithmetic sum of complex numbers x and y.  Returns a com-
       plex which is the arithmetic negation of complex number x.
       Returns  a  complex  which is the arithmetic difference of
       complex numbers x and y.  Returns a complex which  is  the
       arithmetic  product of complex numbers x and y.  Returns a
       complex which is the arithmetic quotient of  complex  num-
       bers x and y.

       Comparison operators: Returns non-zero if complex number x
       is  equal  to  complex  number  y;  returns  0  otherwise.
       Returns  non-zero if complex number x is not equal to com-
       plex number y; returns 0 otherwise.  Assignment operators:
       Complex  number  x is assigned the value of the arithmetic
       sum of itself and complex number y.  Complex number  x  is
       assigned  the value of the arithmetic difference of itself
       and complex number y.  Complex number x  is  assigned  the
       value of the arithmetic product of itself and complex num-
       ber y.  Complex number x is  assigned  the  value  of  the
       arithmetic quotient of itself and complex number y.

WWaarrnniinngg
       The  assignment  operators do not produce a value that can
       be used in an expression.  That  is,  the  following  con-
       struction is syntactically invalid,
       complex    x, y, z;
       .

                                                                1

cplxops(3C++)                                       cplxops(3C++)

       x = ( y += z );
       whereas,
       x = ( y + z );
       x = ( y == z );
       are valid.

RReeffeerreenncceess

                                                                2

