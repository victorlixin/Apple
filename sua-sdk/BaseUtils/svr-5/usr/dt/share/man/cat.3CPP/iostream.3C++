

iostream(3C++)                                     iostream(3C++)

SSyynnooppssiiss
       #include  <iostream.h> class streambuf ; class ios ; class
       istream : virtual public ios ;  class  ostream  :  virtual
       public  ios  ;  class  iostream  :  public istream, public
       ostream ; class  istream_withassign  :  public  istream  ;
       class   ostream_withassign   :   public  ostream  ;  class
       iostream_withassign : public iostream ;

       class Iostream_init ;

       extern istream_withassign cin ; extern  ostream_withassign
       cout   ;   extern   ostream_withassign   cerr   ;   extern
       ostream_withassign clog ;

       #include <fstream.h> class filebuf :  public  streambuf  ;
       class  fstream : public iostream ; class ifstream : public
       istream ; class ofstream : public ostream ;

       #include <strstream.h> class strstreambuf : public stream-
       buf ; class istrstream : public istream ; class ostrstream
       : public ostream ;

       #include <stdiostream.h> class stdiobuf : public streambuf
       ; class stdiostream : public ios ;

DDeessccrriippttiioonn
       The  C++ iostream package declared in iostream.h and other
       header  files  consists  primarily  of  a  collection   of
       classes.

       In  the  iostream  man  pages, character refers to a value
       that can be held in either a char or unsigned char.   When
       functions  that return an int are said to return a charac-
       ter, they return a positive value.  Usually such functions
       can  also  return  EOF  (-1)  as an error indication.  The
       piece of memory that can hold a character is  referred  to
       as  a byte.  Thus, either a char* or an unsigned char* can
       point to an array of bytes.

       The iostream package consists  of  several  core  classes,
       which  provide  the basic functionality for I/O conversion
       and buffering, and  several  specialized  classes  derived
       from  the core classes.  Both groups of classes are listed
       below.

   CCoorree ccllaasssseess
       The core of the iostream package comprises  the  following
       classes:  This is the base class for buffers.  It supports
       insertion (also known as storing or putting)  and  extrac-
       tion  (also  known  as fetching or getting) of characters.
       Most members  are  inlined  for  efficiency.   The  public
       interface  of class streambuf is described in and the pro-
       tected interface (for derived  classes)  is  described  in
       This class contains state variables that are common to the

                                                                1

iostream(3C++)                                     iostream(3C++)

       various stream classes, for example, error states and for-
       matting  states.   See  This  class supports formatted and
       unformatted  conversion  from  sequences   of   characters
       fetched  from streambufs.  See This class supports format-
       ted and unformatted conversion to sequences of  characters
       stored  into  streambufs.  See This class combines istream
       and ostream.  It is intended for situations in which bidi-
       rectional operations (inserting into and extracting from a
       single sequence of characters)  are  desired.   See  These
       classes add assignment operators and a constructor with no
       operands to the corresponding  class  without  assignment.
       The  predefined  streams  (see below) cin, cout, cerr, and
       clog, are objects of these classes.  See and This class is
       present  for technical reasons relating to initialization.
       It has no public members.  The  Iostream_init  constructor
       initializes   the   predefined   streams  (listed  below).
       Because an  object  of  this  class  is  declared  in  the
       iostream.h  header  file,  the  constructor is called once
       each time the header is included (although the  real  ini-
       tialization  is  only done once), and therefore the prede-
       fined streams will be initialized before  they  are  used.
       In  some  cases,  global constructors may need to call the
       Iostream_init constructor explicitly to ensure  the  stan-
       dard streams are initialized before they are used.

   PPrreeddeeffiinneedd ssttrreeaammss
       The  following  streams are predefined: The standard input
       (file descriptor 0).  The standard output (file descriptor
       1).   Standard  error (file descriptor 2).  Output through
       this stream is unit-buffered, which means that  characters
       are   flushed   after   each   inserter  operation.   (See
       ostream::osfx() in and ios::unitbuf in This stream is also
       directed  to file descriptor 2, but unlike cerr its output
       is buffered.

       cin, cerr, and clog are tied to cout so that  any  use  of
       these will cause cout to be flushed.

       In  addition  to  the  core  classes enumerated above, the
       iostream package contains additional classes derived  from
       them  and  declared in other headers.  Programmers may use
       these, or may choose to define their own  classes  derived
       from the core iostream classes.

   CCllaasssseess ddeerriivveedd ffrroomm ssttrreeaammbbuuff
       Classes  derived  from streambuf define the details of how
       characters are produced  or  consumed.   Derivation  of  a
       class  from  streambuf  (the  protected interface) is dis-
       cussed in The available buffer classes  are:  This  buffer
       class supports I/O through file descriptors.  Members sup-
       port opening, closing, and seeking.  Common  uses  do  not
       require  the  program to manipulate file descriptors.  See
       This buffer class supports I/O through stdio FILE structs.
       It  is  intended  for use when mixing C and C++ code.  New

                                                                2

iostream(3C++)                                     iostream(3C++)

       code should prefer to use filebufs.  See This buffer class
       stores and fetches characters from arrays of bytes in mem-
       ory (i.e., strings).  See

   CCllaasssseess ddeerriivveedd ffrroomm iissttrreeaamm,, oossttrreeaamm,, aanndd iioossttrreeaamm
       Classes derived from istream, ostream, and  iostream  spe-
       cialize  the core classes for use with particular kinds of
       streambufs.  These classes are: These classes support for-
       matted  I/O  to  and from files.  They use a filebuf to do
       the I/O.  Common operations (such as opening and  closing)
       can  be  done directly on streams without explicit mention
       of filebufs.  See
       These classes support ``in core'' formatting.  They use  a
       strstreambuf.   See  This  class  specializes iostream for
       stdio FILEs.  See stdiostream.h.

NNoottiicceess
       Parts of the streambuf class of  the  old  stream  package
       that  should  have  been private were public.  Most normal
       usage will compile properly, but any code that depends  on
       details,  including classes that were derived from stream-
       bufs, will have to be rewritten.

       Performance of programs that copy from  cin  to  cout  may
       sometimes  be improved by breaking the tie between cin and
       cout and doing explicit flushes of cout.

       The header file stream.h exists for compatibility with the
       earlier  stream package.  It includes iostream.h, stdio.h,
       and some other headers,  and  it  declares  some  obsolete
       functions,  enumerations,  and variables.  Some members of
       streambuf and ios (not discussed in these man  pages)  are
       present  only  for  backward compatibility with the stream
       package.

RReeffeerreenncceess

                                                                3

