

comps(3C++)                                           comps(3C++)

SSyynnooppssiiss
       #define  Graph_algdeclare(G,V,E)...   #define Graph_algim-
       plement(G,V,E)...  Expanding Graph_algdeclare(G,V,E)  pro-
       duces the following text:
           Set<G> strong_conn_comps(const G& g);
           Set<G> conn_comps_u(const G& g);

DDeessccrriippttiioonn
       A  connected component is a Graph having the property that
       each Vertex is reachable from every other Vertex  by  fol-
       lowing  some  path  (sequence  of Edges).  If the Graph is
       being  treated  as  undirected,  Edge  directionality   is
       ignored in finding paths; if the Graph is being treated as
       directed, then Edge directionality is treated as  signifi-
       cant  in  finding  paths.   By the above definition, every
       Graph (whether directed or undirected) consists of one  or
       more components.

       These functions take a Graph g and find its connected com-
       ponents.  As usual, functions with the _u suffix treat the
       Graph  as  undirected,  while functions without the suffix
       treat the Graph as directed.

CCoommpplleexxiittyy
       O(max(v,e)), where v is the number of Vertices  and  e  is
       the number of Edges in the Graph.

RReeffeerreenncceess

                                                                1

