

select(3C++)                                         select(3C++)

SSyynnooppssiiss
       template  <class  T>  void  select(ptrdiff_t n,T* b,T* e);
       template <class T> void select_r(int (*rel)(const T*,const
       T*),
            ptrdiff_t n,T* b,T* e);

AAssssuummppttiioonnss
       (1)  For the plain version,  T::operator<  defines a total
       ordering relation on  T.

       (2) For the relational  version,   rel   defines  a  total
       ordering relation on  T.

       (3) T  has  operator=.

DDeessccrriippttiioonn
       These functions place the nth smallest element of an array
       into location  b+n-1.   They  also  move  the  first   n-1
       smallest  elements  to  the  left of this location and the
       remaining elements to the right.  template <class T>  void
       select(ptrdiff_t n,T* b,T* e);

       Uses   T::operator<   to  find  the  nth smallest element.
       template <class T> void select_r(int (*rel)(const T*,const
       T*),
           ptrdiff_t n,T* b,T* e);

       Uses  rel  to find the nth smallest element.

CCoommpplleexxiittyy
       If  N  is the size of the array, then complexity is O(N*N)
       in the worst case and O(N) on average.  The worst case  is
       highly improbable.  If n is less than 1 or greater than e-
       b then nothing is done.

NNootteess
       These functions use drand48(3C)  to  obtain  pseudo-random
       numbers.

       Because a Block (see Block(3C++)) can always be used wher-
       ever an array is called for, Array Algorithms can also  be
       used  with  Blocks.   In  fact,  these two components were
       actually designed to be used together.

RReeffeerreenncceess

                                                                1

