

generate(3C++)                                     generate(3C++)

SSyynnooppssiiss
       template  <class  T>  void  generate(void (*fun)(ptrdiff_t
       n,T* p),T* b,T* e);

AAssssuummppttiioonnss
       None.

DDeessccrriippttiioonn
       For each cell in an array from the leftmost to the  right-
       most, generate  calls function fun with two arguments: (1)
       the cell index (assuming that the index of the first  cell
       is 0) and  (2) a pointer to the cell.

CCoommpplleexxiittyy
       If  N  is  the size of the array, then complexity is O(N).
       Exactly N function calls to fun are made.

EExxaammppllee
       In the following example, iota assigns a consecutive inte-
       ger  starting from 0 to every location in the array (simi-
       lar to the APL function iota):
           void zap(ptrdiff_t n, int* address){
               *address = n;
           }
           void iota(int* b, int* e){
               generate(zap, b, e);
           }

NNootteess
       Because a Block (see  Block(3C++))   can  always  be  used
       wherever  an  array  is  called for,  Array Algorithms can
       also be used with Blocks.   In fact, these two  components
       were actually designed to be used together.

RReeffeerreenncceess

                                                                1

