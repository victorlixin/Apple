

fma(3M)                                                   fma(3M)

SSyynnooppssiiss
       cc [flag ...] file ...  -lm [library ...]

       #include <math.h>

       double fma(double x, double y, double z);

       float fmaf(float x, float y, float z);

       long double fmal(long double x, long double y, long double
       z);

DDeessccrriippttiioonn
       fma, fmaf and fmal compute (x x y) +  z,  rounded  as  one
       ternary operation. They value is computed to infinite pre-
       cision and rounded once to the result format, according to
       the   rounding   mode   characterized   by  the  value  of
       FLT_ROUNDS.

   EErrrroorrss
       If x is +-oo and y is +-0 (or vice versa) and z is  not  a
       NaN  fma,  fmaf  and  fmal return IEEE NaN on systems that
       support it and raise the invalid operation exception. Oth-
       erwise, they return 0. errno is set to EDOM.

       If  x x y results in +oo and z is -oo (or vice versa) fma,
       fmaf and fmal return IEEE NaN on systems that  support  it
       and raise the invalid operation exception. Otherwise, they
       return 0. errno is set to EDOM.

       On systems that support IEEE NaN, if the argument  to  any
       of these functions is a quiet NaN, that value is returned.
       If the argument  is  a  signaling  NaN,  a  quiet  NaN  is
       returned  and  the  invalid operation exception is raised.
       In either case, errno is set to EDOM.

       If the program was compiled with the -Xt compilation mode,
       a  value  that  will  compare  equal  to  HUGE is returned
       instead of HUGE_VAL.  These error handling procedures  may
       be changed with the function matherr.

RReeffeerreenncceess

                                                                1

