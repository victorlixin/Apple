

aio_memlock(3aio)                               aio_memlock(3aio)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <aio.h>

       int aio_memlock(void *avaddr, size_t asize);

DDeessccrriippttiioonn
       aio_memlock  provides  a mechanism for locking the area of
       memory to be used for asynchronous I/O operations.

       An application must lock down the entire  area  of  memory
       which  will  be  accessed  to  transfer  the data for each
       request.  avaddr specifies the starting address of  memory
       to lock.  asize specifies the size of the area in bytes.

       Multiple  requests  to  aio_memlock are permitted during a
       process's lifetime;  each call must  specify  a  different
       address  range.   This allows processes to do asynchronous
       I/O over multiple regions of the address space.

       Once the memory  is  locked,  it  cannot  be  unlocked  or
       changed.   No  special privilege is needed for this opera-
       tion.

   EErrrroorrss
       avaddr and/or avsize are not valid or an attempt was  made
       to lock the same address range more than once.

UUssaaggee
       You  should  only  use aio_memlock with SVR4.2 or when the
       AIO_RAW aio_flag is set.

       The amount of locked memory must be sized  carefully.   If
       it  is too large, it may adversely effect the overall sys-
       tem performance.  If it is too small, it  will  limit  the
       number  of asynchronous I/O requests that can be outstand-
       ing at any given point in time.

       In addition, the application should  make  sure  that  any
       calls  to  functions  that  resize memory, such as brk and
       sbrk do not involve addresses within the locked area.

CCoommppaattiibbiilliittyy
       Earlier releases of &gemini; permitted only  one  call  to
       aio_memlock during a process's lifetime.

RReeffeerreenncceess

                                                                1

