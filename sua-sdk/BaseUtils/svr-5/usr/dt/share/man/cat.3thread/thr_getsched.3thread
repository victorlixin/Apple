

thr_getscheduler(3thread)               thr_getscheduler(3thread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <thread.h>

       int thr_getscheduler(thread_t tid, sched_param_t *param);

DDeessccrriippttiioonn
       thr_getscheduler  sets  the  sched_param_t  pointed  to by
       param to the policy-specific parameters for tid.

   ttiidd ppaarraammeetteerr
       tid is the ID of the thread whose scheduling policy infor-
       mation thr_getscheduler will retrieve.

   PPaarraammeetteerrss
       a  thread  ID  a pointer to a sched_param_t structure con-
       taining   the   policy-specific   parameters    (set    by
       thr_getscheduler)

   ppaarraamm ppaarraammeetteerr
       param   points  to  a  sched_param_t  structure  in  which
       thr_getscheduler will store tid's  scheduling  policy  and
       parameters.

       sched_param_t    is   defined   as   follows:   struct   {
            id_t policy;                  long policy_params[POL-
       ICY_PARAM_SZ]; } sched_param_t;

       See  for the available scheduling policies and parameters.

   SSeeccuurriittyy rreessttrriiccttiioonnss
       No privileges or special permissions are required  to  use
       thr_getscheduler.

UUssaaggee
       thr_getscheduler  is  used  by  multithreaded applications
       which need to control their scheduling.

RReettuurrnn vvaalluueess
       thr_getscheduler returns zero for  success  and  an  error
       number for failure, as described below.

   EErrrroorrss
       If  the  following condition is detected, thr_getscheduler
       fails and returns the corresponding value: No  thread  can
       be  found in the current process with identity tid.  param
       is null.

RReeffeerreenncceess

                                                                1

