

thr_yield(3thread)                             thr_yield(3thread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <thread.h>

       void thr_yield(void);

DDeessccrriippttiioonn
       thr_yield() causes the calling thread to stop executing to
       allow another eligible thread (if any) to run.  The  call-
       ing thread will remain in a runnable state.

       In  this  implementation,  a  multiplexed  thread  calling
       thr_yield will yield its lightweight process (LWP) only if
       another  thread  of  higher or equal priority is runnable.
       In that case, the calling thread will  be  halted  and  it
       will  be placed on the end of its priority queue.  If only
       lower priority threads are runnable, or no other thread is
       runnable, the caller will continue executing.  Likewise, a
       bound thread calling thr_yield will cause its LWP to yield
       the  processor if another thread of higher or equal prior-
       ity is runnable.

       This function should be viewed as a hint from  the  caller
       to  the  system,  indicating that the caller has reached a
       point at which it is convenient to yield the processor  to
       other threads.

       thr_yield requires no special permissions or privilege.

UUssaaggee
       thr_yield()  is  used  by multithreaded applications which
       need to control their scheduling.

RReettuurrnn vvaalluueess
       None

   EErrrroorrss
       None.

RReeffeerreenncceess

                                                                1

