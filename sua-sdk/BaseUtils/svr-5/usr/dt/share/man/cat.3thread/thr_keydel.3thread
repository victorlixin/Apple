

thr_keydelete(3thread)                     thr_keydelete(3thread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <thread.h>

       int thr_keydelete(thread_key_t key)

DDeessccrriippttiioonn
       thr_keydelete   deletes   the  specified  key,  which  was
       obtained from a previous call to thr_keycreate.

   PPaarraammeetteerrss
       the key to be deleted

   kkeeyy ppaarraammeetteerr
       key is the key to be deleted.  key must no  longer  be  in
       use, that is, no thread can have a non-NULL value bound to
       key, otherwise thr_keydelete will return EBUSY.

UUssaaggee
       A typical use would be for a dynamically linked library to
       create  its  private key with thr_keycreate as part of its
       initialization, use  thr_getspecific  and  thr_setspecific
       while  in  use, and then call thr_keydelete before unlink-
       ing.

       The application should ensure that  other  thread-specific
       data  functions  for  key are not called concurrently with
       thr_keydelete.

RReettuurrnn vvaalluueess
       thr_keydelete returns zero for success and an error number
       for failure, as described below.

   EErrrroorrss
       If  any  of  the following conditions occur, thr_keydelete
       returns the corresponding value: key  has  thread-specific
       data associated with it.  key is invalid.

RReeffeerreenncceess

                                                                1

