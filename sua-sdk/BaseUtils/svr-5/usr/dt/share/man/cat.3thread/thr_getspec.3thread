

thr_getspecific(3thread)                 thr_getspecific(3thread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <thread.h>

       int thr_getspecific(thread_key_t key, void **value);

DDeessccrriippttiioonn
       thr_getspecific  obtains  the value currently bound to the
       specified key on behalf of the calling thread.

   PPaarraammeetteerrss
       key whose value is to be returned pointer to a location in
       which  thr_getspecific  will store the value associated by
       the calling thread with the specified key.

   kkeeyy ppaarraammeetteerr
       key is a key obtained with a previous call to

       The effect of calling thr_getspecific with a key value not
       obtained  with thr_keycreate or after key has been deleted
       with thr_keydelete is undefined.

   vvaalluuee ppaarraammeetteerr
       If a value is bound to the specified key  by  the  calling
       thread, that value is placed in the location pointed to by
       value.  If no value is bound to the specified key for  the
       calling thread, the location pointed to by value is set to
       NULL.

UUssaaggee
       thr_getspecific is not guaranteed  to  detect  an  invalid
       key.   If  thr_getspecific returns 0 and sets the location
       pointed to by value to NULL, either no value is  currently
       bound  to  key,  the value bound to key is NULL, or key is
       invalid.  In this case, the caller can  determine  whether
       key  is  invalid  by calling thr_setspecific(key, NULL) to
       get the applicable error number.

RReettuurrnn vvaalluueess
       thr_getspecific returns zero for success and an error num-
       ber for failure as described below.

   EErrrroorrss
       If  any  of the following conditions is detected, thr_get-
       specific returns the corresponding value and the  contents
       of  the location pointed to by value are unchanged: key is
       not a valid key

RReeffeerreenncceess

                                                                1

