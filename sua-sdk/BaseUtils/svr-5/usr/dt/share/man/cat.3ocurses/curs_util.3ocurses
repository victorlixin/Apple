

curs_util(3ocurses)                           curs_util(3ocurses)

SSyynnooppssiiss
       cc [flag . . .] file -locurses [library . . .]

       #include <ocurses.h>

       char  *unctrl(chtype  c);  char *keyname(int c); void fil-
       ter(void);  void  use_env(char  bool);  int  putwin(WINDOW
       *win,  FILE  *filep);  WINDOW  *getwin(FILE  *filep);  int
       delay_output(int  ms);  int  draino(int  ms);  int  flush-
       inp(void);

DDeessccrriippttiioonn
       The  unctrl macro expands to a character string which is a
       printable representation  of  the  character  c.   Control
       characters  are  displayed  in  the ^X notation.  Printing
       characters are displayed as is.

       With the keyname routine, a character string corresponding
       to the key c is returned.

       The  filter  routine, if used, is called before initscr or
       newterm are called.  It makes curses think that there is a
       one-line  screen.   curses does not use any terminal capa-
       bilities that assume that they know on what  line  of  the
       screen the cursor is positioned.

       The  use_env routine, if used, is called before initscr or
       newterm are called.  When called with FALSE  as  an  argu-
       ment,  the  values  of  lines and columns specified in the
       terminfo database will be used, even if environment  vari-
       ables  LINES  and COLUMNS (used by default) are set, or if
       curses is running in  a  window  (in  which  case  default
       behavior  would  be  to  use  the window size if LINES and
       COLUMNS are not set).

       With the putwin routine, all data associated  with  window
       win  is written into the file to which filep points.  This
       information can be later retrieved using the getwin  func-
       tion.

       The getwin routine reads window related data stored in the
       file by putwin.  The routine then creates and  initializes
       a new window using that data.  It returns a pointer to the
       new window.

       The delay_output routine inserts an ms  millisecond  pause
       in  output.   This  routine should not be used extensively
       because padding characters are  used  rather  than  a  CPU
       pause.

       The draino routine returns when ms are needed to clear the
       output completely.  Current valid value for ms is 0.

       The flushinp routine throws away any  typeahead  that  has

                                                                1

curs_util(3ocurses)                           curs_util(3ocurses)

       been  typed  by  the user and has not yet been read by the
       program.

   RReettuurrnn vvaalluueess
       Except for  flushinp,  routines  that  return  an  integer
       return  ERR  upon  failure and an integer value other than
       ERR upon successful completion.

       flushinp always returns OK.

       Routines that return pointers return NULL on error.

RReeffeerreenncceess
NNoottiicceess
       The  header  file  ocurses.h  automatically  includes  the
       header files stdio.h and unctrl.h.

       Note that unctrl is a macro, which is defined in unctrl.h.

                                                                2

