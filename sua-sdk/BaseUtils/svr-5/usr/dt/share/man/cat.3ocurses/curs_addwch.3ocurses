

curs_addwch(3ocurses)                       curs_addwch(3ocurses)

SSyynnooppssiiss
       cc [flag . . .] file -locurses [library . . .]

       #include <ocurses.h>

       int  addwch(chtype  wch);  int waddwch(WINDOW *win, chtype
       wch); int mvaddwch(int y, int x, chtype wch);  int  mvwad-
       dwch(WINDOW   *win,   int  y,  int  x,  chtype  wch);  int
       echowchar(chtype wch); int wechowchar(WINDOW *win,  chtype
       wch);

DDeessccrriippttiioonn
       The  addwch, waddwch, mvaddwch, and mvwaddwch routines put
       the character wch, holding a wchar_t character,  into  the
       window  at  the  current cursor position of the window and
       advance the position of the window cursor.  Their function
       is similar to that of putwchar in the C multibyte library.
       At the right margin, an automatic  newline  is  performed.
       At  the  bottom  of  the  scrolling region, if scrollok is
       enabled, the scrolling region is scrolled up one line.

       If wch is a tab, newline,  or  backspace,  the  cursor  is
       moved  appropriately  within  the  window.  A newline also
       does a clrtoeol before moving.  Tabs are considered to  be
       at every eighth column.  If wch is another control charac-
       ter, it is drawn in the ^X notation.  Calling winwch after
       adding  a  control  character  does not return the control
       character, but instead returns the representation  of  the
       control character.

       Video  attributes can be combined with a wchar_t character
       by OR-ing them into the parameter.  This results in  these
       attributes also being set.  (The intent here is that text,
       including attributes, can be  copied  from  one  place  to
       another  using  inwch  and addwch.)  [see standout, prede-
       fined video attribute constants, on the page].

       The echowchar and  wechowchar  routines  are  functionally
       equivalent  to  a  call  to  addwch  followed by a call to
       refresh, or a call to waddwch followed by a call  to  wre-
       fresh.   The  knowledge  that  only  a single character is
       being output is taken into consideration and, for non-con-
       trol  characters, a considerable performance gain might be
       seen by using these routines instead of their equivalents.

   LLiinnee ggrraapphhiiccss
       The  following  variables  may be used to add line drawing
       characters to the screen with routines of the addwch  fam-
       ily.   When  variables  are  defined for the terminal, the
       A_ALTCHARSET bit is turned on [see Otherwise, the  default
       character  listed  below  is  stored in the variable.  The
       names chosen are consistent with the VT100 nomenclature.

                                                                1

curs_addwch(3ocurses)                       curs_addwch(3ocurses)

       ---------------------------------------------------
       ---------------------------------------------------
       Name           Default     Glyph Description
       ---------------------------------------------------
       _AA_CC_SS____UU_LL_CC_OO_RR_NN_EE_RR   _++           upper left-hand corner
       _AA_CC_SS____LL_LL_CC_OO_RR_NN_EE_RR   _++           lower left-hand corner
       _AA_CC_SS____UU_RR_CC_OO_RR_NN_EE_RR   _++           upper right-hand corner
       _AA_CC_SS____LL_RR_CC_OO_RR_NN_EE_RR   _++           lower right-hand corner
       _AA_CC_SS____RR_TT_EE_EE       _++           right tee (-|)
       _AA_CC_SS____LL_TT_EE_EE       _++           left tee (|-)
       _AA_CC_SS____BB_TT_EE_EE       _++           bottom tee_ (_|)
       _AA_CC_SS____TT_TT_EE_EE       _++           top tee ( |)
       _AA_CC_SS____HH_LL_II_NN_EE      _--           horizontal line
       _AA_CC_SS____VV_LL_II_NN_EE      _||           vertical line
       _AA_CC_SS____PP_LL_UU_SS       _++           plus
       _AA_CC_SS____SS_11         _--           scan line 1
       _AA_CC_SS____SS_99         ___           scan line 9
       _AA_CC_SS____DD_II_AA_MM_OO_NN_DD    _++           diamond
       _AA_CC_SS____CC_KK_BB_OO_AA_RR_DD    _::           checker board (stipple)
       _AA_CC_SS____DD_EE_GG_RR_EE_EE     _''           degree symbol
       _AA_CC_SS____PP_LL_MM_II_NN_UU_SS    _##           plus/minus
       _AA_CC_SS____BB_UU_LL_LL_EE_TT     _oo           bullet
       _AA_CC_SS____LL_AA_RR_RR_OO_WW     _<<           arrow pointing left
       _AA_CC_SS____RR_AA_RR_RR_OO_WW     _>>           arrow pointing right
       _AA_CC_SS____DD_AA_RR_RR_OO_WW     _vv           arrow pointing down
       _AA_CC_SS____UU_AA_RR_RR_OO_WW     _^^           arrow pointing up
       _AA_CC_SS____BB_OO_AA_RR_DD      _##           board of squares
       _AA_CC_SS____LL_AA_NN_TT_EE_RR_NN    _##           lantern symbol
       _AA_CC_SS____BB_LL_OO_CC_KK      _##           solid square block
       ---------------------------------------------------

   RReettuurrnn vvaalluueess
       All routines return the integer ERR upon  failure  and  an
       integer  value  other than ERR upon successful completion,
       unless otherwise noted in the preceding  routine  descrip-
       tions.

RReeffeerreenncceess
NNoottiicceess
       The  header  file  ocurses.h  automatically  includes  the
       header files stdio.h and unctrl.h.

       Note that addwch, mvaddwch, mvwaddwch, and  echowchar  may
       be macros.

                                                                2

