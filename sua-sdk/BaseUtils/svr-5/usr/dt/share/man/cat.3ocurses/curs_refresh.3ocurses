

curs_refresh(3ocurses)                     curs_refresh(3ocurses)

SSyynnooppssiiss
       cc [flag . . .] file -locurses [library . . .]

       #include <ocurses.h>

       int refresh(void); int wrefresh(WINDOW *win); int wnoutre-
       fresh(WINDOW *win); int doupdate(void); int redrawwin(WIN-
       DOW  *win);  int  wredrawln(WINDOW *win, int beg_line, int
       num_lines);

DDeessccrriippttiioonn
       The refresh and wrefresh  routines  (or  wnoutrefresh  and
       doupdate)  must  be called to get any output on the termi-
       nal, as other routines merely manipulate data  structures.
       The routine wrefresh copies the named window to the physi-
       cal terminal screen, taking into account what  is  already
       there  in  order to do optimizations.  The refresh routine
       is the same, using stdscr as the default  window.   Unless
       leaveok  has been enabled, the physical cursor of the ter-
       minal is left at the location of the cursor for that  win-
       dow.

       The  wnoutrefresh  and  doupdate  routines  allow multiple
       updates with more  efficiency  than  wrefresh  alone.   In
       addition  to  all  the window structures, curses keeps two
       data structures representing the terminal screen: a physi-
       cal screen, describing what is actually on the screen, and
       a virtual screen, describing what the programmer wants  to
       have on the screen.

       The  routine wrefresh works by first calling wnoutrefresh,
       which copies the named window to the virtual  screen,  and
       then  calling  doupdate, which compares the virtual screen
       to the physical screen and does the actual update.  If the
       programmer  wishes  to  output  several windows at once, a
       series of calls to wrefresh results in  alternating  calls
       to  wnoutrefresh  and  doupdate, causing several bursts of
       output to the screen.  By first calling  wnoutrefresh  for
       each  window,  it  is then possible to call doupdate once,
       resulting in only one burst of output,  with  fewer  total
       characters transmitted and less CPU time used.  If the win
       argument to wrefresh is the global  variable  curscr,  the
       screen  is immediately cleared and repainted from scratch.

       The redrawwin routine indicates to curses that some screen
       lines  are corrupted and should be thrown away before any-
       thing is written over them.  These routines could be  used
       for  programs  such  as  editors,  which want a command to
       redraw some part of the screen or the entire screen.   The
       routine redrawln is preferred over redrawwin where a noisy
       communication line exists and redrawing the entire  window
       could  be  subject to even more communication noise.  Just
       redrawing several lines offers the possibility  that  they
       would show up unblemished.

                                                                1

curs_refresh(3ocurses)                     curs_refresh(3ocurses)

   RReettuurrnn vvaalluueess
       All  routines  return  the integer ERR upon failure and an
       integer value other than ERR upon successful completion.

RReeffeerreenncceess
NNoottiicceess
       The  header  file  ocurses.h  automatically  includes  the
       header files stdio.h and unctrl.h.

       Note that refresh and redrawwin may be macros.

                                                                2

