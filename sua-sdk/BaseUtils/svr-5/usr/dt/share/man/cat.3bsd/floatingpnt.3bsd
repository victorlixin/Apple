

floatingpoint(3bsd)                           floatingpoint(3bsd)

SSyynnooppssiiss
       /usr/ucb/cc [flag . . . ] file . . .

       #include <sys/ieeefp.h> #include <fp.h>

DDeessccrriippttiioonn
       This  file  defines constants, types, variables, and func-
       tions used to implement standard floating point  according
       to  ANSI/IEEE  Std  754-1985.  The variables and functions
       are  implemented   in   libucb.a.    The   included   file
       sys/ieeefp.h defines certain types of interest to the ker-
       nel.

   IIEEEEEE rroouunnddiinngg mmooddeess::
       The type of the IEEE rounding direction mode.   Note:  the
       order  of  enumeration  varies according to hardware.  The
       IEEE rounding direction mode currently in force.  This  is
       a global variable that is intended to reflect the hardware
       state, so it should only be written indirectly  through  a
       function  that  also sets the hardware state.  The type of
       the IEEE rounding precision mode, which  only  applies  on
       systems  that support extended precision.  The IEEE round-
       ing precision mode currently in force.  This is  a  global
       variable that is intended to reflect the hardware state on
       systems with extended precision,  so  it  should  only  be
       written indirectly.

   SSIIGGFFPPEE hhaannddlliinngg::
       The  type  of a SIGFPE code.  The type of a user-definable
       SIGFPE exception handler called  to  handle  a  particular
       SIGFPE code.  A macro indicating the default SIGFPE excep-
       tion handling, namely to perform  the  exception  handling
       specified  by  calls to if any, and otherwise to dump core
       using A macro indicating  an  alternate  SIGFPE  exception
       handling,  namely  to  ignore  and  continue execution.  A
       macro indicating an alternate SIGFPE  exception  handling,
       namely to abort with a core dump.

   IIEEEEEE eexxcceeppttiioonn hhaannddlliinngg::
       The  number  of  distinct  IEEE floating-point exceptions.
       The type of the N_IEEE_EXCEPTION exceptions.  Each  excep-
       tion  is given a bit number.  The type intended to hold at
       least N_IEEE_EXCEPTION  bits  corresponding  to  the  IEEE
       exceptions numbered by fp_exception_type.  Thus fp_inexact
       corresponds to the least significant bit and fp_invalid to
       the  fifth  least  significant bit.  Note: some operations
       may set more than  one  exception.   The  IEEE  exceptions
       between  the  time  this global variable was last cleared,
       and the last time a function  was  called  to  update  the
       variable  by  obtaining  the  hardware state.  An array of
       user-specifiable signal handlers for use by  the  standard
       SIGFPE  handler  for IEEE arithmetic-related SIGFPE codes.
       Since IEEE trapping modes correspond  to  hardware  modes,
       elements  of  this  array  should  only be modified with a

                     BSD System Compatibility                   1

floatingpoint(3bsd)                           floatingpoint(3bsd)

       function like that performs the appropriate hardware  mode
       update.  If no sigfpe_handler has been declared for a par-
       ticular  IEEE-related  SIGFPE  code,  then   the   related
       ieee_handlers will be invoked.

   IIEEEEEE ffoorrmmaattss aanndd ccllaassssiiffiiccaattiioonn::
       Definitions  of IEEE formats.  An enumeration of the vari-
       ous classes of IEEE values and symbols.

   IIEEEEEE bbaassee ccoonnvveerrssiioonn::
       The functions described under and  not  only  satisfy  the
       IEEE  Standard, but also the stricter requirements of cor-
       rect rounding for all arguments.  The length  of  a  deci-
       mal_string.   The  digit  buffer in a decimal_record.  The
       canonical form for representing an unpacked decimal float-
       ing-point  number.   The  type  used  to  specify fixed or
       floating binary to decimal conversion.  A struct that con-
       tains  specifications  for  conversion  between binary and
       decimal.   An  enumeration  of  possible  valid  character
       strings  representing  floating-point numbers, infinities,
       or NaNs.

FFiilleess
RReeffeerreenncceess

                     BSD System Compatibility                   2

