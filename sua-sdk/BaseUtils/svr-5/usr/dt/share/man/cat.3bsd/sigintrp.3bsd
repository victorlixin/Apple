

siginterrupt(3bsd)                             siginterrupt(3bsd)

SSyynnooppssiiss
       /usr/ucb/cc [flag . . . ] file . . .

       int siginterrupt(int sig, int flag);

DDeessccrriippttiioonn
       siginterrupt  is  used  to  change the system call restart
       behavior when a system call is interrupted by  the  speci-
       fied  signal.  If the flag is false (0), then system calls
       will be restarted if they are interrupted by the specified
       signal  and no data has been transferred yet.  System call
       restart is the default behavior when the routine is  used.

       If  the  flag is true (1), then restarting of system calls
       is disabled.  If a system call is interrupted by the spec-
       ified  signal and no data has been transferred, the system
       call will return -1 with errno set to EINTR.   Interrupted
       system  calls  that  have  started  transferring data will
       return the amount of data actually transferred.

       Issuing a siginterrupt call during the execution of a sig-
       nal handler will cause the new action to take place on the
       next signal to be caught.

RReettuurrnn vvaalluueess
       A 0 value indicates that the call succeeded.  A  -1  value
       indicates that an invalid signal number has been supplied.

RReeffeerreenncceess
NNoottiicceess
       This library routine uses an extension of the system  call
       that  is  not  available in 4.2BSD, hence it should not be
       used if backward compatibility is needed.

                     BSD System Compatibility                   1

