

pthread_attr_setschedpolicy(3pptthhrreeaadd_)attr_setschedpolicy(3pthread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <pthread.h>

       int  pthread_attr_setschedpolicy(pthread_attr_t *attr, int
       policy);       int       pthread_attr_getschedpolicy(const
       pthread_attr_t *attr,
           int *policy);

DDeessccrriippttiioonn
       pthread_attr_setschedpolicy  and pthread_attr_getschedpol-
       icy respectively, set and get the schedpolicy attribute in
       the attr argument.

       The   supported   values  of  policy  include  SCHED_FIFO,
       SCHED_RR and SCHED_OTHER, which are defined by the  header
       sched.h.   When threads executing with the scheduling pol-
       icy SCHED_FIFO or SCHED_RR are waiting on  a  mutex,  they
       acquire  the  mutex  in  priority  order when the mutex is
       unlocked.

UUssaaggee
       After these attributes have been set, a thread can be cre-
       ated  with the specified attributes using Using these rou-
       tines does not affect the current running thread.

RReettuurrnn vvaalluueess
       If     successful,     pthread_attr_setschedpolicy     and
       pthread_attr_getschedpolicy  return  zero.   Otherwise, an
       error number is returned to indicate the error.

DDiiaaggnnoossttiiccss
       If    the     foolowing     condition     is     detected,
       pthread_attr_setschedpolicy  and pthread_attr_getschedpol-
       icy will return the corresponding value: invalid attribute

       If     the     following     condition     is    detected,
       pthread_attr_setschedpolicy will return the  corresponding
       value:  attempt  to  set  the  attribute to an unsupported
       value

RReeffeerreenncceess
SSttaannddaarrddss ccoommpplliiaannccee
       The Single UNIX Specification, Version 2; The Open  Group.

                                                                1

