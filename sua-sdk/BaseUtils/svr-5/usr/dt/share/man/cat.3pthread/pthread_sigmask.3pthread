

pthread_sigmask(3pthread)               pthread_sigmask(3pthread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <signal.h>

       int pthread_sigmask(int how, const sigset_t *set, sigset_t
       *oset);

DDeessccrriippttiioonn
       pthread_sigmask changes or examines (or both) the  calling
       thread's signal mask  according to the way how and set are
       set.

       If there are any pending unblocked signals after the  call
       to  pthread_sigmask, at least one of these signals will be
       delivered before the call to pthread_sigmask returns.

       If pthread_sigmask fails, the thread's signal mask is  not
       changed.

       It  is  not possible to block those signals that cannot be
       ignored (see this restriction is silently imposed  by  the
       system.

       If  any  of the SIGFPE, SIGILL, SIGSEGV, or SIGBUS signals
       are generated while they are blocked, the result is  unde-
       fined, unless the signal was generated by a function capa-
       ble of sending a signal to a specific process or thread.

       The how parameter determines how set is interpreted.   how
       must  be  one of the following values: Add the set of sig-
       nals denoted by set to the current  signal  mask.   Remove
       the  set of signals denoted by set from the current signal
       mask.  Replace the current signal mask  with  the  set  of
       signals denoted by set.

       Note that 0 is not a valid value for how.

       The  set parameter can be NULL or a pointer to a sigset_t.
       If set is NULL, the value of how is not  significant,  and
       the  thread's  signal mask will not be changed.  Thus, the
       call can be used to inquire about currently  blocked  sig-
       nals.

       If  set  is  not NULL, it points to a set of signals to be
       blocked or unblocked (according to the value  of  how)  in
       the  current  thread.  set is usually constructed with the
       routines sigemptyset(3C),  sigfillset(3C),  sigaddset(3C),
       sigdelset(3C), and sigismember(3C), which are described on

       The oset parameter can be NULL or not NULL.   If  oset  is
       not NULL, pthread_sigmask stores the value of the previous
       mask in that location.  If oset is not  NULL  and  set  is
       NULL, oset will point to the value of the thread's current

                                                                1

pthread_sigmask(3pthread)               pthread_sigmask(3pthread)

       signal mask.

RReettuurrnn vvaalluueess
       pthread_sigmask returns zero on  success.   Otherwise,  an
       error number is returned, as described below.

DDiiaaggnnoossttiiccss
       pthread_sigmask  returns the following value if the corre-
       sponding condition is detected: The value of  how  is  not
       equal to one of the defined values.

SSttaannddaarrddss CCoommpplliiaannccee
       The  Single UNIX Specification, Version 2; The Open Group.

RReeffeerreenncceess
NNoottiicceess
   PPoorrttaabbiilliittyy ccoonnssiiddeerraattiioonnss
       Threads should use pthread_sigmask  rather  than  sigproc-
       mask(2).   In  some  implementations,  sigprocmask  can be
       trapped and behaves identically  to  pthread_sigmask,  but
       for portability, pthread_sigmask should be used.

   PPeerrffoorrmmaannccee ccoonnssiiddeerraattiioonnss
       An application running multiplexed (PTHREAD_SCOPE_PROCESS)
       threads with different signal masks  can  degrade  perfor-
       mance.   Therefore, for best performance, all multiplexing
       threads in a process should use the same signal mask.

       Some applications cannot avoid assigning different  signal
       masks  to  threads;  in  such  cases,  performance  may be
       improved   by   creating   those    threads    as    bound
       (PTHREAD_SCOPE_SYSTEM) threads.

   SSttyyllee ccoonnssiiddeerraattiioonnss
       The  preferred coding style is to mask all signals and use
       sigwait synchronously.

                                                                2

