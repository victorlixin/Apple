

sem_post(3pthread)                             sem_post(3pthread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <semaphore.h>

       int sem_post(sem_t *sem);

DDeessccrriippttiioonn
       sem_post  increments the count of the semaphore pointed to
       by sem, and, if the new count value is less than or  equal
       to  zero,  makes  the next thread waiting at the semaphore
       runnable.  If the  semaphore  value  resulting  from  this
       operation  is positive, then no threads were blocked wait-
       ing for the semaphore to become  unlocked;  the  semaphore
       value is simply incremented.

       sem  is  a  pointer to the semaphore to increment and must
       previously have been initialized by sem_init.

       The highest priority waiting thread will be unblocked, and
       if  there is more than one highest priority thread blocked
       waiting for  the  semaphore,  then  the  highest  priority
       thread   that   has  been  waiting  the  longest  will  be
       unblocked.

       sem_post is reentrant with respect to signals and  may  be
       invoked from a signal-catching function.

RReettuurrnn vvaalluueess
       sem_post  returns  zero on success.  Otherwise, it returns
       -1 and sets errno to indicate the error.

DDiiaaggnnoossttiiccss
       sem_post returns -1 and sets errno to the following values
       if  the  corresponding  conditions  are  detected: invalid
       argument specified

SSttaannddaarrddss ccoommpplliiaannccee
       The Single UNIX Specification, Version 2; The Open  Group.

RReeffeerreenncceess

                                                                1

