

pthread_key_delete(3pthread)         pthread_key_delete(3pthread)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <pthread.h>

       int pthread_key_delete(pthread_key_t *key);

DDeessccrriippttiioonn
       pthread_key_delete  deletes  a  thread-specific  data key,
       which   was   obtained   from   a   previous    call    to
       pthread_key_create.  The thread-specific data values asso-
       ciated  with  key  need  not   be   NULL   at   the   time
       pthread_key_delete is called.  It is the responsibility of
       the application to free any application storage or perform
       an  cleanup  actions  for  data  structures related to the
       deleted key or  associated  thread-specific  data  in  any
       threads;  this  cleanup can be done either before or after
       pthread_key_delete is called.  Any attempt to use key fol-
       lowing the call to pthread_key_delete results in undefined
       behavior.

       The pthread_key_delete function is  callable  from  within
       destructor  functions.   No  destructor  functions will be
       invoked by pthread_key_delete.   Any  destructor  function
       that  may  have been associated with key will no longer be
       called upon thread exit.

       The key parameter is the key to be deleted.

       A typical use would be for a dynamically linked library to
       create  a  private  key with pthread_key_create as part of
       its   initialization,    use    pthread_getspecific    and
       pthread_setspecific   while   in   use,   and   then  call
       pthread_key_delete before unlinking.

       The application should ensure that  other  thread-specific
       data  functions  for  key are not called concurrently with
       pthread_key_delete.

RReettuurrnn vvaalluueess
       pthread_key_delete returns zero on success.  Otherwise, an
       error number is returned.

DDiiaaggnnoossttiiccss
       pthread_key_delete returns the following value if the cor-
       responding condition is detected: key is invalid.

SSttaannddaarrddss CCoommpplliiaannccee
       The Single UNIX Specification, Version 2; The Open  Group.

RReeffeerreenncceess

                                                                1

