

fsck_sfs(1M)                                         fsck_sfs(1M)

SSyynnooppssiiss
       fsck [-F sfs] [generic_options] [special . . .]

       fsck  [-F  sfs]  [generic_options]  [(-y|-Y)|(-n|-N)]  [-o
       p,b=#,w] [-w] [special . . .]

DDeessccrriippttiioonn
       generic_options are options supported by the generic  fsck
       command.   current_options  are  options  supported by the
       s5-specific module of the fsck command.

       fsck audits and interactively repairs inconsistent  condi-
       tions on filesystems.  In this case, it asks for confirma-
       tion before attempting any  corrections.   Inconsistencies
       other  than those mentioned above can often result in some
       loss of data.  The amount and severity of data lost can be
       determined from the diagnostic output.

       fsck  corrects innocuous inconsistencies such as: unrefer-
       enced inodes, too-large link  counts  in  inodes,  missing
       blocks in the free list, blocks appearing in the free list
       and also in files, or incorrect counts in the super block,
       automatically.   It  displays a message for each inconsis-
       tency  corrected  that  identifies  the  nature  of,   and
       filesystem  on  which,  the  correction  is to take place.
       After successfully correcting a  filesystem,  fsck  prints
       the number of files on that filesystem, the number of used
       and free blocks, and the percentage of fragmentation.

       The default action for each correction is to wait for  the
       operator  to  respond  either  yes or no.  If the operator
       does not have write permission  on  the  filesystem,  fsck
       defaults to a -n (no corrections) action.

       The  sfs  filesystem  is  based on the ufs filesystem, but
       uses only the even-numbered inodes for  conventional  pur-
       poses.  The odd-numbered inodes are used to store security
       information.  When this manual page uses the  term  inode,
       it  refers  to  an  even-numbered  inode.  An odd-numbered
       inode is called a secure inode.

       Inconsistencies checked are as follows: Blocks claimed  by
       more  than one inode, secure inode, ACL, or the free list.
       Blocks claimed by an inode, secure inode, ACL, or the free
       list  outside the range of the filesystem.  Incorrect link
       counts.  Incorrect directory  sizes.   Bad  inode  format.
       Blocks not accounted for anywhere.  Directory checks, file
       pointing to unallocated inode, inode number out of  range,
       absence  of  ``.'' and ``..''  as the first two entries in
       each directory.   Super  Block  checks:  more  blocks  for
       inodes  than  there are in the filesystem.  Bad free block
       list format.  Total free block  and/or  free  inode  count
       incorrect.   Orphaned files and directories (allocated but
       unreferenced)  are,  with  the   operator's   concurrence,

                                                                1

fsck_sfs(1M)                                         fsck_sfs(1M)

       reconnected  by  placing them in the lost+found directory.
       The name assigned is the inode number.  If the  lost+found
       directory  does  not  exist,  it  is created.  If there is
       insufficient space its size is increased.

       A filesystem may be specified by giving the  name  of  the
       block  or character special device on which it resides, or
       by giving the name of its mount point.

   ssffss--ssppeecciiffcc ooppttiioonnss
       Specify the sfs FSType. If -F sfs is not specified heuris-
       tics  similiar  to those used by are used to determine the
       file system type.  This command executes faster if  it  is
       not required to autodetect file system types. If possible,
       specify the -F sfs.  Assume a yes response  to  all  ques-
       tions  asked  by  fsck.  Assume a no response to all ques-
       tions asked by fsck; do not open the filesystem for  writ-
       ing.   Specify  sfs filesystem specific suboptions.  These
       suboptions can be any combination of the following:  Check
       the  filesystem  non-interactively.   Exit  if  there is a
       problem requiring intervention.  Use the  block  specified
       as the super block for the filesystem.  Block 32 is always
       an alternate super block.  Only check  writeable  filesys-
       tems.

RReeffeerreenncceess
NNoottiicceess
       Checking  the  character  special  device is almost always
       faster.

                                                                2

