

idoptimize(1M)                                     idoptimize(1M)

SSyynnooppssiiss
       idoptimize   -s  [module]...   idoptimize  -l  [module]...
       idoptimize -c [module]...  idoptimize -g [-m]  [module]...
       idoptimize -L [module]...  idoptimize -C [clobber] idopti-
       mize -u

DDeessccrriippttiioonn
       idoptimize uses  the  technology  provided  by  to  gather
       experimental  data,  analyze  this  data and rearrange the
       kernel code such that it runs faster for a given  system's
       workload.

       idoptimize has seven different forms.  The first five rep-
       resent the steps that most people will  want  to  take  to
       optimize  their  kernel.   The  last two are utility calls
       that might be useful.

       For each version of the command that takes a list of  mod-
       ules,  the  default is to use the list of modules that are
       loaded into the current running kernel.   In  general,  it
       should  be unnecessary to supply arguments to any of them.
       This optional step is to make some of the loadable modules
       on the system static.  fur can do a better job of optimiz-
       ing a kernel if all of the modules that are being used are
       static.   This step tells the system to rebuild the kernel
       so that it will take logging data during the next  reboot.
       Reboot  the  system  after this step.  A logging kernel is
       VERY SLOW.  This step clears the logs in the running  ker-
       nel.   It  is executed on a kernel that is set up for log-
       ging (Step 2).  One should clear the logs  before  running
       an  experimental  load.   This step gets the logs from the
       running kernel and analyzes them.  It should be run  after
       the  experiment  is done.  One can run many experiments by
       clearing the  log  before  each  experiment,  running  the
       experiment  and then adding the -m option to idoptimize -g
       (to merge the results) each time.   This  step  tells  the
       system that the next rebuild of the system should not cre-
       ate a logging kernel.  Reboot the system after  this  step
       and  when  the  system  comes up, the kernel is optimized.
       The -C option is used to clear out files left  from  using
       idoptimize  to  save on disk space.  If the this option is
       invoked, useful information will be lost, but  the  kernel
       will  be  returned  to  its original state, except for the
       effects of idoptimize -s.

       The -u option undoes the effects of idoptimize -s.

DDiiaaggnnoossttiiccss
       If a  non-existent  module  is  named,  idoptimize  fails.
       Also,  if -c or -g is used with a kernel that has not been
       built for logging, idoptimize fails.

RReeffeerreenncceess

                                                                1

