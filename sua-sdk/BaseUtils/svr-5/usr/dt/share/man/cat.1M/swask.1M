

swask(1M)                                               swask(1M)

SSyynnooppssiiss
       /usr/sbin/swask  [-v]  [-c  catalog] [-C session_file] [-f
       software_file]
            [-s source] [-S session_file] [-t target_file]
            [-x option=value] [-X options_file]
            [software_selections] [@ target_selections]

DDeessccrriippttiioonn
       The  swask  command  runs  interactive  software   request
       scripts for the software objects selected from one or more
       targets specified  by  target_selections.   These  scripts
       store  the  responses  in  a  response file (response) for
       later use by the and commands.  swinstall and swconfig can
       also  run  the interactive request scripts directly, using
       the ask default option. See for details of this option.

       If the -s option is specified, software is  selected  from
       the  distribution  source.  If the -s option is not speci-
       fied,  software  installed  on  the  target   systems   is
       selected.  For  each software selection that has a request
       script, executing that script generates a  response  file.
       By  specifying  the -c catalog option, swask stores a copy
       of the response file to catalog for later use by swinstall
       or swconfig.

   OOppttiioonnss
       swask  supports the following options: Specifies the path-
       name of an exported catalog that stores the response files
       created  by the request script.  swask creates the catalog
       if it does not already exist.  If this option  is  omitted
       and  the  source is local, swask copies the response files
       into the source depot,  distribution.path/catalog.   Saves
       the current options and operands to session_file.  You can
       enter a relative or absolute path with the filename.   The
       default  directory  for  session  files  is $HOME/.sw/ses-
       sions/.  You can recall a session file with  the  -S  ses-
       sion_file  option.  You  can save session information with
       the -C session_file option.   In  addition,  each  command
       automatically  creates  a  session file of the most recent
       session information called  $HOME/.sw/sessions/swask.last.
       Reads  the list of software selections from software_file,
       instead of (or in addition to) the command  line  operands
       (given  by  software_selections).   Specifies  the  source
       depot (or tape) from which software is  selected  for  the
       ask  operation.  (SM can read both and tape depots.)  Runs
       swask with options and operands saved from a previous ses-
       sion to session_file.  You can save session information to
       a file with the -C session_file option.  Reads the list of
       target  selections  from  target_file,  instead  of (or in
       addition to) the command  line  operands  (given  by  tar-
       get_selections).   Turns on verbose output to stdout. (The
       command log file is  not  affected  by  this  option.)  By
       default,  verbose  output  is  enabled for all the SM com-
       mands.  Sets the default option to  value,  and  overrides

                                                                1

swask(1M)                                               swask(1M)

       the  default value (or a value in an alternate option_file
       specified with the -X option).  Multiple -x options can be
       specified.   Reads  the deafult options and behaviors from
       option_file.  These values override  the  default  values.
       swask  supports  the  following  format  for each software
       selection:   bundle[.product[.subproduct][.fileset]][,ver-
       sion] product[.subproduct][.fileset][,version] The version
       component has the following format: [,r op revision][,a op
       arch][,v  op  vendor] [,c op category][,l=location][,fr op
       revision] [,fa op arch] Refer to the manual page for  more
       details of specifying software selections.  swask supports
       the  following   format   for   each   target   selection:
       [host][:][/directory] The : is required if both a host and
       directory are specified.

   DDeeffaauulltt ooppttiioonnss
       In addition to the standard options, several SM  behaviors
       and  policy  options  can  be changed by modifying default
       values   listed   in    the    master    defaults    file,
       /usr/lib/sw/sys.defaults.   Refer  to  the manual page for
       information about each of these default options and how to
       modify them.

       The following default options are supported by swask:
       ask                       loglevel
       autoselect_dependencies   log_msgid
       autoselect_patches        rpc_timeout
       enforce_scripts           software
       log_msgid                 targets
       logdetail                 patch_filter
       logfile                   verbose

   SSeessssiioonn ffiilleess
       Each invocation of swask defines an ask session. The invo-
       cation options, source information,  software  selections,
       and target hosts are saved before the session starts. This
       lets you re-execute swask even if the session ends  before
       proper  completion.   Refer to the manual page for further
       details.

   SSooffttwwaarree aanndd ttaarrggeett lliissttss
       You can use files containing software  and  target  selec-
       tions  as  input  to swask.  See the -f and -t options for
       more information.

   EEnnvviirroonnmmeenntt vvaarriiaabblleess
       Refer to the manual page for details  of  the  environment
       variables  that affect both swask and the control scripts.

FFiilleess
       Contains the user-specific default  values  for  some  (or
       all) SM options. If this file does not exist, SM looks for
       user-specific defaults  in  $HOME/.sw/defaults.   Contains
       session  files  automatically  saved by the SM commands or

                                                                2

swask(1M)                                               swask(1M)

       explicitly saved by the user.  Contains the master list of
       current  SM  options, with their default values, for docu-
       mentation purposes only.  Contains all of the configurable
       (and  non-configurable)  data  for  SM.  This directory is
       also the default location  of  log  files.   Contains  the
       active  system-wide  default  values  for  some  or all SM
       options.  The Installed Products Database (IPD): a catalog
       of  all products installed on a system.  Contains all std-
       out and stderr messages generated by swask.

EExxiitt ccooddeess
       swask returns: successful on all  targets  failed  on  all
       targets failed on some targets

DDiiaaggnnoossttiiccss
       swask writes to stdout, stderr, and to the swask log file.

   SSttaannddaarrdd oouuttppuutt
       An interactive swask session does not write to stdout.   A
       non-interactive swask session writes messages for signifi-
       cant events.  These include: a begin and end session  mes-
       sage  selection, analysis, and execution task messages for
       each target selection

   SSttaannddaarrdd eerrrroorr
       An interactive swask session does not write to stderr.   A
       non-interactive  swask  session  writes  messages  for all
       WARNING and ERROR conditions to stderr.

   LLoogg ffiilleess
       Both interactive and non-interactive  swask  sessions  log
       summary  events at the host where the command was invoked.
       They log detailed events to the swask.log log file associ-
       ated with each target selection.

       swask   logs   all   stdout   and   stderr   messages   to
       /var/adm/sw/swask.log.  Similar messages are logged by  an
       interactive  swask  session.   You can specify a different
       log file by modifying the logfile default option. See  for
       details of this option.

RReeffeerreenncceess
NNoottiicceess
   AAuutthhoorr
       swask was developed by the Hewlett-Packard Company.

EExxaammpplleess
       To   run  all  request  scripts  from  the  default  depot
       (/var/spool/sw) and write the response file  back  to  the
       same  depot,  enter:  swask -s /var/spool/sw \* To run the
       request script for product1 from depot /tmp/sample.depot.1
       on  remote  host sysA, create the catalog /tmp/test1.depot
       on the local controller, and place the  response  file  in
       the  catalog,  enter: swask -s sysA:/tmp/sample.depot.1 -c

                                                                3

swask(1M)                                               swask(1M)

       /tmp/test1.depot product1  To  run  request  scripts  from
       remote depot /tmp/sample.depot.1 on host sysA (only when a
       response   file   is   absent),   create    the    catalog
       /tmp/test1.depot  on  the  local controller, and place the
       response  file   in   the   catalog,   enter:   swask   -s
       sysA:/tmp/sample.depot.1     -c     /tmp/test1.depot     \
                              -x ask=as_needed \*

                                                                4

