

boot(1M)                                                 boot(1M)

DDeessccrriippttiioonn
       The  boot  program  loads  and executes &uwTM; kernels and
       other stand-alone programs.  Stand-alone programs  execute
       before  the  operating  system  is up and running, so they
       cannot depend on operating  system  services.   In  normal
       operation,  &gemini; kernels are the only stand-alone pro-
       grams ever used.

       During installation of the &gemini; system, the boot  pro-
       gram  is placed on the hard disk starting at logical block
       0 of the active partition.  See for a description  of  the
       partition table and active partions.

       The  system BIOS invokes a boot program each time the com-
       puter is reset or powered up.  The BIOS  loads  the  first
       bootable image it finds on any of the devices it searches.

       Many BIOS user-interface programs allow you to specify the
       list  of  devices  to search and the order of search.  The
       list may include the removable media drives (floppy  disk,
       CD-ROM),  and the hard drive.  (See your hardware documen-
       tation for instructions on doing this.)

       A boot initiated from removable media has two stages:  The
       boot block in sector 0 of the filesystem loads boot.  boot
       loads and executes the &gemini; kernel.

       A boot initiated from the hard disk has three stages:  The
       system  firmware loads the masterboot from absolute sector
       0 on the hard disk.  The masterboot then loads the  parti-
       tion  boot program from the active partition.  The remain-
       der of boot is loaded from /stand, a bfs filesystem.

       When first invoked, boot  displays  the  following  status
       message: Starting UnixWare...

       At  this point you can press any key to interrupt boot and
       initiate the Boot Command  Processor  (BCP).   The  prompt
       [boot]  indicates that you are in the BCP.  In this inter-
       active mode you can make entries in the following  syntax:
       PARAMETER=value

       which  is  the same syntax as that used in the /stand/boot
       file.  You can change the  values  of  parameters  on  the
       existing  parameter/value  list, add new ones to the list,
       or remove system parameters.  (See for a complete list  of
       valid  parameters.)   The  parameters  you add, change, or
       remove interactively apply only to the kernel that you are
       in the process of booting, except in the following circum-
       stance: If you are installing &gemini; for the first  time
       (Initial System Load), parameters added using the BCP will
       be automatically  added  to  /stand/boot.   Following  all
       other  uses  of the BCP you must also edit the /stand/boot
       file and add, change, or remove them there for the  effect

                                                                1

boot(1M)                                                 boot(1M)

       to be permanent.

       The  Boot Command Processor commands can be abbreviated to
       a unique substring, and are case-insensitive.  When  param
       is used as an argument to show, however, it is case-sensi-
       tive.  The following commands are available: Displays this
       list  of  commands.   Loads  and  runs  specified program;
       default is BOOTPROG.

       filename can be  prefixed  with  device  to  override  the
       default  device.  Standard values for device take the fol-
       lowing forms: specifies the floppy disk, drive number unit
       specifies  the  hard  disk, drive number unit (starting at
       zero), partition number partition, and slice number slice.
       partition  can  also  be  specified as an operating system
       type  name  (UNIX,  DOS,  (DOS_12,  DOS_16,   DOS_32,   or
       DOS_EXT),  NT,  or  OS2).  If partition is not defined, it
       defaults to UNIX.  slice specifies the  slice  number  for
       the  root  filesystem,  allowing the possibility of backup
       roots.

       If  device is specified without filename, boot performs  a
       raw boot of the specified device.  For example,to boot DOS
       or Windows from the first hard  drive,  use:  b  hd(0,dos)
       Lists  all  files  in  /stand directory; default device is
       BOOTDEV.  Displays the logo image until a key is  pressed.
       Turns  off  display  of the logo image for the duration of
       this boot session.  Shows boot parameter values: Shows all
       boot  parameters,  even messages.  Shows only boot parame-
       ters and messages starting with param.  Sets the value  of
       a  boot parameter.  Appends the value to a boot parameter,
       inserting a comma.  If the TIMEOUT parameter  is  non-zero
       (default is 0) and you have not typed anything, boot times
       out and resumes loading the default program.

       For example, you can use the BOOTPROG parameter to  change
       the name of the kernel file to boot from the /stand direc-
       tory.  As delivered, the default is unix.  If  you  change
       the  value of BOOTPROG to unix.old or unix.good, for exam-
       ple, the boot program will load that alternate kernel from
       the boot filesystem.

       If  you  specify  a  file that does not exist or cannot be
       loaded for some reason, you will be warned  and  will  re-
       enter the BCP.

FFiilleess
       /stand/boot /stand/bootmsgs

DDiiaaggnnoossttiiccss
       The masterboot and boot programs have different error mes-
       sages.

                                                                2

boot(1M)                                                 boot(1M)

   mmaasstteerrbboooott ddiiaaggnnoossttiiccss
       The masterboot program displays an error message and locks
       the  system.   The  following is a list of the most common
       masterboot messages and their  meanings:  Disk  I/O  error
       occurred  when trying to read in the partition boot of the
       active operating  system.   The  sector  loaded  from  the
       active  partition  is not marked as a valid partition boot
       block.  (The last two bytes of the 512-byte sector must be
       0x55,  0xAA.)   The masterboot was unable to determine the
       logical geometry (cylinders, heads, etc.) of the disk.  No
       partition in the partition table is marked active.

RReeffeerreenncceess
NNoottiicceess
       The boot program cannot be used to load programs that have
       not been  linked  for  standalone  execution.   To  create
       stand-alone  programs, use the option of the UnixWare sys-
       tem linker and special stand-alone libraries.

       Although stand-alone programs can operate in real or  pro-
       tected  mode,  they  must  not be large or huge model pro-
       grams.  Programs in real mode  can  use  the  input/output
       routines of the computer's startup ROM.

                                                                3

