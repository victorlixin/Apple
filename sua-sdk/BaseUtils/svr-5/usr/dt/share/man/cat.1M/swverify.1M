

swverify(1M)                                         swverify(1M)

SSyynnooppssiiss
       /usr/sbin/swverify  [-d  | -r] [-F] [-v] [-C session_file]
       [-f software_file]
            [-S session_file] [-t target_file]
            [-x option=value] [-X option_file]
            [software_selections] [@ target_selections]

DDeessccrriippttiioonn
       The swverify command verifies the software  selections  at
       one  or more target selections (for example, root filesys-
       tems).  When verifying installed software, swverify checks
       software  states, dependency relationships, file existence
       and integrity, in addition  to  executing  vendor-supplied
       verification scripts.

       swverify  also verifies software selections at one or more
       target depots.  For target depots, swverify  performs  all
       of the checks listed above, but does not execute verifica-
       tion scripts.  swverify does not support operations  on  a
       tape depot.

       swverify  also  supports  these features: Verifies whether
       installed or configured software is  compatible  with  the
       hosts  on which that software is installed.  Verifies that
       all dependencies (prerequisites, corequisites and exrequi-
       sites)  are  being  met (for installed software) or can be
       met (for available  software).   Executes  vendor-specific
       fix  scripts  that  correct  and report specific problems.
       Reports missing  files  and  checks  all  file  attributes
       (ignoring  volatile  files). These attributes include per-
       missions, file type, size,  checksum,  modification  time,
       link source and major/minor attributes.

   OOppttiioonnss
       swverify supports the following options: Saves the current
       options and operands to session_file.   You  can  enter  a
       relative  or absolute path with the filename.  The default
       directory for session files is  $HOME/.sw/sessions/.   You
       can recall a session file with the -S session_file option.
       You can save session information with the -C  session_file
       option.   In  addition,  swverify  automatically creates a
       session file of the most recent session information called
       $HOME/.sw/sessions/swverify.last.   Operates  on  a  depot
       rather than on installed  software.   Reads  the  list  of
       software  selections from software_file, instead of (or in
       addition to) the command line  operands  (given  by  soft-
       ware_selections).   Runs  vendor-specific  fix  scripts to
       correct and report problems on installed software. The fix
       script  can create missing directories, correct file modi-
       fications (mode, owner,  group,  major,  and  minor),  and
       recreate  symbolic  links.   Operates on an alternate root
       rather than /.  verify scripts are not run when  verifying
       software  in  an alternate root directory.  Runs swinstall
       or swcopy with options and operands saved from a  previous

                                                                1

swverify(1M)                                         swverify(1M)

       session to session_file.  You can save session information
       to a file with the -C session_file option.  Reads the list
       of  target  selections from target_file, instead of (or in
       addition to) the command  line  operands  (given  by  tar-
       get_selections).   Turns on verbose output to stdout. (The
       command log file is  not  affected  by  this  option.)  By
       default,  verbose  output  is  enabled for all the SM com-
       mands.  Sets the default option to  value,  and  overrides
       the  default value (or a value in an alternate option_file
       specified with the -X option).  Multiple -x options can be
       specified.   Reads  the default options and behaviors from
       option_file.  These values override  the  default  values.
       swverify  supports  the following format for each software
       selection:   bundle[.product[.subproduct][.fileset]][,ver-
       sion] product[.subproduct][.fileset][,version] The version
       component has the following format: [,r op revision][,a op
       arch][,v  op  vendor] [,c op category][,l=location][,fr op
       revision] [,fa op arch] Refer to the manual page for  more
       details  of specifying software selections.  swverify sup-
       ports the following  format  for  each  target  selection:
       [host][:][/directory] The : is required if both a host and
       directory are specified.

   DDeeffaauulltt ooppttiioonnss
       In addition to the standard options, several SM  behaviors
       and  policy  options  can  be changed by modifying default
       values   listed   in    the    master    defaults    file,
       /usr/lib/sw/sys.defaults.   Refer  to  the manual page for
       information about each of these default options and how to
       modify them.

       The following options are supported by swverify:
       agent_auto_exit                 fix
       agent_timeout_minutes           installed_software_catalog
       allow_incompatible              logdetail
       allow_multiple_versions         logfile
       autoselect_dependencies         loglevel
       enforce_dependencies            log_msgid
       check_contents                  mount_all_filesystems
       check_permissions               rpc_binding_info
       check_requisites                rpc_timeout
       check_scripts                   select_local
       check_volatile                  software
       controller_source               targets
       distribution_target_directory   verbose
       enfore_locatable

   SSeessssiioonn ffiilleess
       Each invocation of swverify defines a verify session.  The
       invocation options, source  information,  software  selec-
       tions,  and target hosts are saved before the actual veri-
       fication starts.  This lets you re-execute  swverify  even
       if  the  session  ends before proper completion.  Refer to
       the manual page for further details.

                                                                2

swverify(1M)                                         swverify(1M)

   EEnnvviirroonnmmeenntt vvaarriiaabblleess
       Refer to the manual page for details  of  the  environment
       variables that affect swconfig and the control scripts.

   SSiiggnnaallss
       swverify catches the SIGQUIT and SIGINT signals.  If these
       signals are received, swverify writes a message,  sends  a
       Remote  Procedure Call (RPC) to the agents to wrap up, and
       then exits.

FFiilleess
       Contains the user-specific default values for some or  all
       SM  options.  If  this  file  does not exist, SM looks for
       user-specific defaults  in  $HOME/.sw/defaults.   Contains
       session  files  automatically saved by the SM commands, or
       explicitly saved by the user.  Contains the master list of
       current  SM  options  with their default values.  Contains
       all the configurable and  non-configurable  data  for  SM.
       This is also the default location for log files.  Contains
       the active system-wide default values for some (or all) SM
       options.  The Installed Products Database (IPD): a catalog
       of all products installed on a system.  The default  loca-
       tion of a target software depot.

EExxiitt ccooddeess
       swverify  returns:  the  software selections were success-
       fully verified the verify operation failed on  all  target
       selections  the  verify  operation  failed  on some target
       selections

DDiiaaggnnoossttiiccss
       swverify writes to stdout, stderr,  and  to  specific  log
       files.

   SSttaannddaarrdd oouuttppuutt
       swverify  writes  messages  for significant events.  These
       include: a begin and end session message selection, analy-
       sis, and execution task messages for each target selection

   SSttaannddaarrdd eerrrroorr
       swverify writes messages for all WARNING and ERROR  condi-
       tions to stderr.

   LLoogg ffiilleess
       swverify logs summary events at the host where the command
       was invoked.  It logs detailed  events  to  the  log  file
       associated with each target selection.

       The  log  files  are:  swverify logs all stdout and stderr
       messages to /var/adm/sw/swverify.log.  (The user can spec-
       ify  a different log file by modifying the logfile default
       option.)  A swagent process  performs  the  actual  verify
       operation   at  each  target  selection.   When  verifying
       installed   software,    swagent    logs    messages    to

                                                                3

swverify(1M)                                         swverify(1M)

       var/adm/sw/swagent.log  beneath  the  root  directory (for
       example, / or an alternate root directory).  When  verify-
       ing  available software (that is, within a depot), swagent
       logs messages to swagent.log beneath the  depot  directory
       (for example, /var/spool/sw).

RReeffeerreenncceess
NNoottiicceess
   AAuutthhoorr
       swverify was developed by the Hewlett-Packard Company.

EExxaammpplleess
       To verify the C and Pascal products installed at the local
       host, enter: swverify cc pascal  To  verify  a  particular
       version    of   VisionFS,   enter:   swverify   VisionFS,1
       /opt/VisionFS To verify the entire  contents  of  a  local
       depot, enter: swverify -d \* @ /var/spool/sw

                                                                4

