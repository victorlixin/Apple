

swconfig(1M)                                         swconfig(1M)

SSyynnooppssiiss
       /usr/sbin/swconfig  [-p]  [-u]  [-v] [-c catalog] [-C ses-
       sion_file]
            [-f software_file] [-S session_file] [-t target_file]
            [-x option=value] [-X option_file]
            [software_selections] [@ target_selections]

DDeessccrriippttiioonn
       The  swconfig command configures, unconfigures, and recon-
       figures installed software products for execution  on  the
       specified  targets.  swconfig transitions software between
       installed and configured states.

       Software is automatically configured and  unconfigured  as
       part of the and commands respectively.  The user can defer
       configuration when software is  installed.   swconfig  can
       (un)configure  software independent of swinstall and swre-
       move: for example, to configure (unconfigure)  hosts  that
       share  software  from  a server host where the software is
       actually installed.  swconfig must also be  executed  when
       the   initial   configuration  by  swinstall  failed,  was
       deferred, or needs to be changed.

       Configuration primarily involves the execution of  vendor-
       supplied configure scripts. These scripts perform configu-
       ration tasks that enable the use of the  software  on  the
       target  hosts.  swconfig also allows software to unconfig-
       ure the hosts on which it will no longer be run. A  vendor
       can  supply  unconfigure scripts to undo the configuration
       performed by the configure script.

       The configure scripts are not run by swinstall  and  swre-
       move  when  an  alternate  root  directory  is  specified.
       Instead, swconfig must be run after that software has been
       made  available to client hosts, to configure those hosts.
       Similarly, swconfig must be used on client hosts to uncon-
       figure those hosts.  Configuration can also be deferred on
       software installed in the root directory  /,  for  example
       when  multiple  configured  versions have been allowed, by
       using the defer_configure default option with swinstall.

       Other features of swconfig include: Only configuration  of
       compatible software is supported by default.  This is con-
       trolled by the allow_incompatible default  option.   If  a
       fileset  specifies  other software as a prerequisite, that
       software must be in a configured state before the software
       specifying  the  dependency  will be configured.  Multiple
       versions of a product will be configured if the  user  has
       set  the  allow_multiple_versions  default option to true.
       The vendor must, therefore, detect  and  prevent  multiple
       configured  versions in their configure scripts (if neces-
       sary).  A vendor's configure script is useful for software
       update  operations,  as  well  as  for  new installs.  The
       scripts must also  be  able  to  handle  reinstalls.   The

                                                                1

swconfig(1M)                                         swconfig(1M)

       ability  to  ask  for a user response by running a request
       script. See the ask default option for more information.

   OOppttiioonnss
       swconfig supports the  following  options:  Specifies  the
       pathname  of an exported catalog that stores copies of the
       response file or files created by a request script (if  -x
       ask=true  or -x ask=as_needed options are used).  response
       files are also stored in the Installed  Products  Database
       (IPD).   Saves  the  current  options and operands to ses-
       sion_file.  You can enter a relative or absolute path with
       the  filename.  The default directory for session files is
       $HOME/.sw/sessions/.  You can recall a session  file  with
       the  -S session_file option. You can save session informa-
       tion with the -C session_file option.  In addition, swcon-
       fig  automatically  creates  a  session  file  of the most
       recent   session   information    called    $HOME/.sw/ses-
       sions/swconfig.last.   Reads  the  list of software selec-
       tions from software_file, instead of (or in  addition  to)
       the  command line operands (given by software_selections).
       Previews a configuration task by only running the  session
       through  the  analysis phase.  Specifies the source depot,
       PSF file, or tape from which software will  be  installed,
       copied,  listed  or  packaged.  Runs swconfig with options
       and  operands  saved  from  a  previous  session  to  ses-
       sion_file.   You  can  save  session information to a file
       with the -C session_file option.  Reads the list of target
       selections  from  target_file,  instead of (or in addition
       to) the command  line  operands  (given  by  target_selec-
       tions).  Unconfigures the software.  Turns on verbose out-
       put to stdout. (The swconfig log file is not  affected  by
       this  option.)  By  default, verbose output is enabled for
       all the SM commands.  Sets the default  option  to  value,
       and  overrides  the default value (or a value in an alter-
       nate option_file specified with the -X option).   Multiple
       -x  options  can  be specified.  Reads the default options
       and behaviors from option_file.  These values override the
       default  values.   swconfig  supports the following format
       for each software selection: bundle[.product[.subproduct][
       .fileset]][,version]  product[.subproduct][.fileset][,ver-
       sion] The version component has the following format:  [,r
       op  revision][,a  op  arch][,v  op  vendor]  [,c  op cate-
       gory][,l=location][,fr op revision] [,fa op arch] Refer to
       the  manual  page  for more details of specifying software
       selections.  swconfig supports the following form for each
       target  selection: [host][:][/directory] The : is required
       if both a host and directory are specified.

   DDeeffaauulltt ooppttiioonnss
       In addition to the standard options, several SM  behaviors
       and  policy  options  can  be changed by modifying default
       values   listed   in    the    master    defaults    file,
       /usr/lib/sw/sys.defaults.   Refer  to  the manual page for
       information about each of these default options and how to

                                                                2

swconfig(1M)                                         swconfig(1M)

       modify them.

       The following options are supported by swconfig:
       agent_auto_exit              loglevel
       agent_timeout_minutes        log_msgid
       allow_incompatible           mount_all_filesystems
       allow_multiple_versions      reconfigure
       ask                          rpc_binding_info
       autoselect_dependencies      rpc_timeout
       autoselect_dependents        select_local
       controller_source            software
       enforce_dependencies         enforce_scripts
       installed_software_catalog   targets
       logdetail                    verbose
       logfile                      write_remote_files

   SSeessssiioonn ffiilleess
       Each  invocation  of swconfig defines a configuration ses-
       sion.  The invocation options, source  information,  soft-
       ware  selections,  and  target  hosts are saved before the
       actual configuration starts.   This  lets  you  re-execute
       swconfig  even  if  the session ends before proper comple-
       tion.  Refer to the manual page for further details.

   EEnnvviirroonnmmeenntt vvaarriiaabblleess
       Refer to the manual page for details  of  the  environment
       variables that affect swconfig and the control scripts.

   SSiiggnnaallss
       swconfig catches the SIGQUIT and SIGINT signals.  If these
       signals are received, swconfig writes a message,  sends  a
       Remote  Procedure Call (RPC) to the agents to wrap up, and
       then exits.

       Each agent will complete the configuration  task  (if  the
       execution  phase  has already started) before it wraps up.
       This avoids leaving software in a corrupt state.

FFiilleess
       Contains the user-specific default  values  for  some  (or
       all) SM options. If this file does not exist, SM looks for
       user-specific defaults  in  $HOME/.sw/defaults.   Contains
       session  files  automatically saved by the SM commands, or
       explicitly saved by the user.  Contains the master list of
       current  SM options with their default values.  The direc-
       tory that contains all configurable  and  non-configurable
       data  for SM commands.  This directory is also the default
       location of log files.  Contains  the  active  system-wide
       default  values for some (or all) SM command options.  The
       Installed Products Database (IPD): a catalog of all  prod-
       ucts installed on a system.

EExxiitt ccooddeess
       swconfig    returns:    the   software   selections   were

                                                                3

swconfig(1M)                                         swconfig(1M)

       successfully configured the configure operation failed  on
       all  target  selections  the configure operation failed on
       some target selections

DDiiaaggnnoossttiiccss
       swconfig writes to stdout,  stderr  and  to  specific  log
       files.

   SSttaannddaarrdd oouuttppuutt
       swconfig  writes  messages  for significant events.  These
       include: a begin and end session message selection, analy-
       sis, and execution task messages for each target selection

   SSttaannddaarrdd eerrrroorr
       swconfig also writes messages for all  WARNING  and  ERROR
       conditions to stderr.

   LLoogg ffiilleess
       swconfig logs summary events at the host where the command
       was invoked.  It logs detailed  events  to  the  log  file
       associated with each target selection.

       The  log  files  are:  swconfig logs all stdout and stderr
       messages to /var/adm/sw/swconfig.log.  (The user can spec-
       ify  a different log file by modifying the logfile default
       option.)  A process performs  the  configuration  at  each
       target selection.  swagent logs events to /var/adm/sw/swa-
       gent.log.

RReeffeerreenncceess
NNoottiicceess
       swconfig does not support the configuration,  unconfigura-
       tion,  or  reconfiguration of installed software on remote
       targets.

   AAuutthhoorr
       swconfig was developed by the Hewlett-Packard Company.

EExxaammpplleess
       To configure the C and Pascal products on the local  host,
       enter:  swconfig  cc pascal To configure product1, use any
       associated response files generated by a  request  script,
       and  save response files under /tmp/resp1, enter: swconfig
       -x  ask=true  -c  /tmp/resp1   product1   To   reconfigure
       VisionFS,  enter: swconfig -x reconfigure=true VisionFS To
       configure the version of VisionFS that  was  installed  in
       /opt/New_VisionFS,             enter:             swconfig
       VisionFS,l=/opt/New_VisionFS To unconfigure  the  software
       selections  listed  in  /tmp/install.products on the hosts
       listed  in  /tmp/install.hosts,  enter:  swconfig  -u   -f
       /tmp/install.products -t /tmp/install.hosts

                                                                4

