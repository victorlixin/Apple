

getnetent(3N)                                       getnetent(3N)

SSyynnooppssiiss
       cc  . . .  -lsocket -lnsl #include <netdb.h>

       struct netent *getnetent(void);

       struct netent *getnetbyname (const char *name);

       struct netent *getnetbyaddr (in_addr_t net, int type);

       void setnetent(int stayopen);

       void endnetent(void);

DDeessccrriippttiioonn
       getnetent,  getnetbyname,  and getnetbyaddr each returns a
       pointer to an object with the following structure contain-
       ing  the  broken-out  fields of a line in the network data
       base, /etc/networks.

       struct netent {
               char        *n_name;      /* official name of  net
       */
               char        **n_aliases;  /* alias list */
               int         n_addrtype;   /* net number type */
               in_addr_t   n_net;        /* net number */ };

       The  members  of  this structure are: The official name of
       the network.  A null-terminated list  of  alternate  names
       for the network.  The type of the network number returned;
       currently only AF_INET.  The network number.  Network num-
       bers  are returned in machine byte order.  getnetent reads
       the next line of the file, opening the file if  necessary.
       The  getnetent subroutine keeps a pointer in the database,
       allowing subsequent calls to be used to search the file.

       setnetent opens and rewinds the  file.   If  the  stayopen
       flag is non-zero, the network data base will not be closed
       after each call to getnetent (either  directly,  or  indi-
       rectly through one of the other getnet* calls).

       endnetent closes the file.

       getnetbyname and getnetbyaddr sequentially search from the
       beginning of the file until a matching  net  name  or  net
       address  is  found,  or until EOF is encountered.  Network
       numbers are supplied in machine byte order.  The only type
       currently supported is AF_INET.

       A call to setnetent must be made before a while loop using
       getnetent in order to perform  initialization.   endnetent
       must be used after the loop. Both getnetbyname and getnet-
       byaddr make calls to setnetent and endnetent.

                                                                1

getnetent(3N)                                       getnetent(3N)

FFiilleess
       /etc/networks

DDiiaaggnnoossttiiccss
       Null pointer (0) returned on EOF or error, except by  end-
       netent and setnetent.

RReeffeerreenncceess
NNoottiicceess
       All  information is contained in a static area, so it must
       be copied if it is to be  saved.   Only  Internet  network
       numbers are currently understood.

       It  is  probably not possible to expect network numbers to
       fit in no more than 32 bits.

SSttaannddaarrddss ccoommpplliiaannccee
       getnetent, getnetbyaddr, and getnetbyname  are  conformant
       with:

       RFC 1101

                                                                2

