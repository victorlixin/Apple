

getnameinfo(3N)                                   getnameinfo(3N)

SSyynnooppssiiss
       cc  [options] file -lsocket -lnsl #include  <sys/socket.h>
       #include  <netdb.h>

       int getnameinfo(const struct sockaddr *sa, size_t addrlen,
            char  *host,  size_t hostlen,      char *serv, size_t
       servlen,      int flags);

DDeessccrriippttiioonn
       getnameinfo looks up a specified IP address (IPv4 or IPv6)
       and  port  number and returns text strings for each in the
       buffers provided.

       Use the first argument sa to specify a pointer to a  sock-
       addr_in  or  sockaddr_in6  structure  that  holds  the  IP
       address and port number you want  to  look  up.   Use  the
       addrlen  argument  to  specify  the  size of the structure
       pointed to by sa.  Use the sockaddr_in structure for  IPv4
       addresses,  or  sockaddr_in6  for IPv6 addresses.  Use the
       host argument to specify a pointer to a buffer that can be
       used  to  store  the  returned  hostname.  Use the hostlen
       argument to specify the size of the buffer pointed  to  by
       host. If you specify a zero value for hostlen, getnameinfo
       will not attempt to return a hostname.

       Use the serv argument to specify a  pointer  to  a  buffer
       that  can be used to store the returned service name.  Use
       the servlen argument to specify the  size  of  the  buffer
       pointed  to  by  serv.  If  you  specify  a zero value for
       servlen, getnameinfo will not attempt to return a  service
       name.   The  sizes  of  the buffers pointed to by host and
       serv must be large enough  to  hold  the  fully  qualified
       domain  hostname  and service name respectively. The sizes
       should also allow for the terminating null  characters  at
       the  end  of  each  string.  The  constants NI_MAXHOST and
       NI_MAXSERV defined in <netdb.h> may be  used  as  suitable
       buffer  sizes for these names.  The flags argument changes
       the default actions of getnameinfo. The  following  values
       may  be  ORed  into its value: If set, this specifies that
       the service is a datagram service, and causes to be called
       with its second argument set to udp instead of the default
       value tcp. This is useful for ports such as 512-514  which
       have  different  services for UDP and TCP.  If set, return
       an error if the host's name cannot be located in the  DNS.
       If  set,  return  only  the hostname portion of the fully-
       qualified domain name (FQDN) for local hosts.  By default,
       the  FQDN  for  the  host  is  looked  up  in  the DNS and
       returned.  If set, or if the host's name cannot be located
       in  the DNS, return the numeric form of the host's address
       instead of its name (for example, by calling instead of

       This flag is required to support the -n option  that  many
       commands  provide.  If set, return the numeric form of the
       service address (for example, its port number) instead  of

                                                                1

getnameinfo(3N)                                   getnameinfo(3N)

       its name.

       This  flag  is required to support the -n option that many
       commands provide.

RReettuurrnn vvaalluueess
       getnameinfo returns 0 on successful  completion,  or  non-
       zero for failure.

RReeffeerreenncceess
       RFC 2133

NNoottiicceess
       In &geminiREL; the sockaddr structure has been modified to
       support variable length sockets.  The net result  of  this
       modification  is that the family member has been shortened
       to 8 bits and a new 8-bit member inserted before it called
       len.  For more information on the new sockaddr structures,
       see:

                                                                2

