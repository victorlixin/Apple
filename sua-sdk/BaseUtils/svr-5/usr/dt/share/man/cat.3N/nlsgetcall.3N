

nlsgetcall(3N)                                     nlsgetcall(3N)

SSyynnooppssiiss
       cc [options] file -lnls -lnsl #include <listen.h>

       #include <sys/xti>

       struct t_call *nlsgetcall(int fd);

DDeessccrriippttiioonn
       nlsgetcall allows server processes started by the listener
       process to access the client's t_call structure, that  is,
       the sndcall argument of

       The   t_call  structure  returned  by  nlsgetcall  can  be
       released using

       nlsgetcall returns the  address  of  an  allocated  t_call
       structure  or  NULL  if a t_call structure cannot be allo-
       cated.  If the  t_alloc  succeeds,  undefined  environment
       variables  are  indicated  by  a negative len field in the
       appropriate netbuf structure.  A len field of zero in  the
       netbuf  structure  is  valid  and  means that the original
       buffer in the listener's t_call structure was NULL.

FFiilleess
RReettuurrnn vvaalluueess
       A NULL pointer is returned if a t_call structure cannot be
       allocated  by  t_alloc.  t_errno can be inspected for fur-
       ther error information.  Undefined  environment  variables
       are  indicated  by  a  negative  length field (len) in the
       appropriate netbuf structure.

RReeffeerreenncceess
NNoottiicceess
       The len field in the netbuf structure is defined as  being
       unsigned.   In order to check for error returns, it should
       first be cast to an int.

       The listener  process  limits  the  amount  of  user  data
       (udata) and options data (opt) to 128 bytes each.  Address
       data addr is limited to 64 bytes.  If  the  original  data
       was longer, no indication of overflow is given.

       Server processes must call before calling this routine.

                                                                1

