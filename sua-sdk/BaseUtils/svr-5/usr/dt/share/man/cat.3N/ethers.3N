

ethers(3N)                                             ethers(3N)

SSyynnooppssiiss
       cc  [options]  file  -lsocket -lnsl #include <sys/types.h>
       #include  <sys/socket.h>  #include   <net/if.h>   #include
       <netinet/in.h> #include <netinet/if_ether.h>

       char *ether_ntoa(ether_addr_t e);

       ether_addr_t *ether_aton(char *s);

       int ether_ntohost(char *hostname, ether_addr_t e);

       int ether_hostton(char *hostname, ether_addr_t e);

       int ether_line(char *l, ether_addr_t e, char *hostname);

DDeessccrriippttiioonn
       These routines are useful for mapping 48-bit Ethernet num-
       bers to their ASCII representations or their corresponding
       hostnames, and vice versa.

       The  function ether_ntoa converts a 48-bit Ethernet number
       pointed to by e to its standard ASCII  representation;  it
       returns a pointer to the ASCII string.  The representation
       is of the form x:x:x:x:x:x where x is a hexadecimal number
       between 0 and ff.

       The  function  ether_aton  converts an ASCII string in the
       standard representation back to a 48-bit Ethernet  number;
       the  function returns NULL if the string cannot be scanned
       successfully.

       The  function  ether_ntohost  maps  an   Ethernet   number
       (pointed  to by e) to its associated hostname.  The string
       pointed to by hostname must be long  enough  to  hold  the
       hostname  and  a  NULL  character.  The function returns 0
       upon success and non-zero upon failure.

       Inversely, the  function  ether_hostton  maps  a  hostname
       string  to its corresponding Ethernet number; the function
       modifies the Ethernet number pointed to by e.   The  func-
       tion  also  returns 0 upon success and non-zero upon fail-
       ure.

       The function ether_line scans a line (pointed to by l) and
       sets  the  hostname and the Ethernet number (pointed to by
       e).  The string pointed to by hostname must be long enough
       to  hold  the hostname and a NULL character.  The function
       returns 0 upon success and non-zero upon failure.

       The format of the scanned line is described by

FFiilleess
       /etc/ethers

                                                                1

ethers(3N)                                             ethers(3N)

UUssaaggee
       The return values from the ether functions are pointers to
       static  data,  which will be overwritten on the next call.
       For multi-threaded applications, this  occurs  on  a  per-
       thread basis.

RReeffeerreenncceess

                                                                2

