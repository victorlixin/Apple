

cond_signal(3synch)                           cond_signal(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int cond_signal(cond_t *cond);

DDeessccrriippttiioonn
       cond_signal wakes up a single thread, if one exists, wait-
       ing on the condition cond.  If more  than  one  thread  is
       waiting,  the  choice of which to release from the blocked
       group is scheduling policy-specific:  Bound  threads  have
       priority  over multiplexed threads; then within each cate-
       gory the choice of thread is scheduling-policy-specific.

       cond_signal has no effect if there are no threads  waiting
       on cond.

       A  cond_signal  will  be  more  reliable if the associated
       mutex used by waiters is held across the call.

   PPaarraammeetteerrss
       pointer to condition variable to be signaled

   ccoonndd ppaarraammeetteerr
       The condition variable denoted  by  cond  must  previously
       have been initialized (see cond_init(3synch)).

UUssaaggee
       See  the  description  of  how  to use condition variables
       under USAGE on

RReettuurrnn vvaalluueess
       cond_signal returns zero for success and an  error  number
       for failure.

   EErrrroorrss
       If  any of the following conditions is detected, cond_sig-
       nal returns  the  corresponding  value:  invalid  argument
       specified

RReeffeerreenncceess

                                                                1

