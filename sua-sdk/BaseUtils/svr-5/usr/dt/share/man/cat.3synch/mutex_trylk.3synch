

mutex_trylock(3synch)                       mutex_trylock(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int mutex_trylock(mutex_t *mutex);

DDeessccrriippttiioonn
       mutex_trylock  attempts  once to lock the mutual exclusion
       lock (mutex) pointed to by mutex.

   PPaarraammeetteerrss
       pointer to mutex to be locked

       If mutex is available, mutex_trylock will return  success-
       fully  with  mutex  locked.   If  mutex is already locked,
       mutex_trylock immediately  returns  EBUSY  to  the  caller
       without acquiring mutex or blocking.

       mutex  must  previously  have  been initialized, either by
       mutex_init, or statically (see

UUssaaggee
       mutex_trylock is used when the caller  does  not  want  to
       block.

       Mutexes  acquired  with  mutex_trylock  should be released
       with mutex_unlock.

RReettuurrnn vvaalluueess
       mutex_trylock returns zero for success and an error number
       for failure.

   EErrrroorrss
       If  the  following condition occurs, mutex_trylock returns
       the corresponding value: mutex is already locked

       If the  following  condition  is  detected,  mutex_trylock
       fails  and  returns the corresponding value: invalid argu-
       ment specified

RReeffeerreenncceess

                                                                1

