

rw_tryrdlock(3synch)                         rw_tryrdlock(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int rw_tryrdlock(rwlock_t *lock);

DDeessccrriippttiioonn
       rw_tryrdlock  attempts  once  to acquire the reader-writer
       lock pointed to by lock in read mode; it  does  not  block
       the caller if the lock is unavailable.

       A  reader-writer lock can be held by any number of readers
       at one time, but only one writer at a time  can  hold  the
       lock.

       If the lock is free or is currently held by another reader
       and there are no writers waiting, rw_tryrdlock  increments
       the reader count and the caller proceeds.

       If  the  lock  is currently held by a writer, or there are
       writers waiting, rw_tryrdlock immediately returns EBUSY to
       the caller, without acquiring the lock.

       lock   must   previously   have   been   initialized  (see
       rwlock_init(3synch)).

   PPaarraammeetteerrss
       pointer to the lock to be acquired

UUssaaggee
       rw_tryrdlock is used when the  caller  does  not  want  to
       block if the lock is unavailable.

RReettuurrnn vvaalluueess
       rw_tryrdlock  returns zero for success and an error number
       for failure.

   EErrrroorrss
       If the following condition occurs, rw_tryrdlock fails  and
       returns  the  corresponding  value: the reader-writer lock
       pointed to by lock cannot be acquired

       If  the  following  condition  is  detected,  rw_tryrdlock
       returns  the  corresponding value: invalid argument speci-
       fied

       For consistency, locks acquired with  rw_tryrdlock  should
       be released with rw_unlock.

RReeffeerreenncceess

                                                                1

