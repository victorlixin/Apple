

rmutex_trylock(3synch)                     rmutex_trylock(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int rmutex_trylock(rmutex_t *rmutex);

DDeessccrriippttiioonn
       rmutex_trylock  attempts once to lock the recursive mutual
       exclusion lock (rmutex) pointed to by rmutex.

       If rmutex is available, rmutex_trylock  will  return  suc-
       cessfully with rmutex locked.  If rmutex is already locked
       by  another  thread,  rmutex_trylock  immediately  returns
       EBUSY  to  the  caller without locking rmutex or blocking.
       If rmutex is already  held  by  the  calling  thread,  the
       recursive  depth is incremented and control is returned to
       the caller, as if the lock had just been acquired.

       rmutex must previously have  been  initialized  (see  rmu-
       tex_init(3synch)).

   PPaarraammeetteerrss
       pointer to recursive mutex to be locked

UUssaaggee
       rmutex_trylock  is  used  when the caller does not want to
       block.

       The locks acquired with rmutex_trylock should be  released
       with rmutex_unlock.

RReettuurrnn vvaalluueess
       rmutex_trylock  returns zero for success and an error num-
       ber for failure.

   EErrrroorrss
       If any of  the  following  conditions  is  detected,  rmu-
       tex_trylock  returns  the  corresponding  value: rmutex is
       locked by another thread invalid argument specified

RReeffeerreenncceess

                                                                1

