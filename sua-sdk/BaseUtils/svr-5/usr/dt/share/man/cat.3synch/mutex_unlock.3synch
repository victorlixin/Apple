

mutex_unlock(3synch)                         mutex_unlock(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int mutex_unlock(mutex_t *mutex);

DDeessccrriippttiioonn
       mutex_unlock unlocks the mutex pointed to by mutex.

       If  there  are  one  or more threads waiting for the mutex
       when mutex_unlock is called, at least one  waiting  thread
       is  allowed  to  try  again to acquire the mutex.  If more
       than one thread is waiting, the choice of which to release
       from  the  blocked  group  is  scheduling-policy-specific:
       Bound threads have priority over multiplexed threads; then
       within  each  category the choice of thread is scheduling-
       policy-specific.

   PPaarraammeetteerrss
       pointer to mutex to be unlocked

UUssaaggee
       Mutexes acquired with mutex_lock and mutex_trylock  should
       be released with mutex_unlock.

RReettuurrnn vvaalluueess
       mutex_unlock  returns zero for success and an error number
       for failure.

   EErrrroorrss
       If  the  following  condition  is  detected,  mutex_unlock
       returns  the  corresponding value: invalid argument speci-
       fied

RReeffeerreenncceess

                                                                1

