

rw_trywrlock(3synch)                         rw_trywrlock(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int rw_trywrlock(rwlock_t *lock);

DDeessccrriippttiioonn
       rw_trywrlock makes a single attempt to acquire the reader-
       writer lock pointed to by lock in write mode; it does  not
       block the caller if the lock is unavailable.

       A  reader-writer lock can be held by any number of readers
       at one time, but only one writer at a time  can  hold  the
       lock.

       If  the  lock  is  free, rw_trywrlock acquires the lock in
       write mode and the caller proceeds.

       If the lock is currently  held,  rw_trywrlock  immediately
       returns EBUSY to the caller, without acquiring the lock.

       lock   must   previously   have   been   initialized  (see
       rwlock_init).

UUssaaggee
       rw_trywrlock is used when the  caller  does  not  want  to
       block if the lock is unavailable.

RReettuurrnn vvaalluueess
       rw_trywrlock  returns zero for success and an error number
       for failure.

   PPaarraammeetteerrss
       pointer to the reader-writer lock to be acquired

   EErrrroorrss
       If any of the following  conditions  occurs,  rw_trywrlock
       fails  and  returns  the  corresponding value: the reader-
       writer lock pointed to by lock cannot be acquired

       If  the  following  condition  is  detected,  rw_trywrlock
       returns  the  corresponding value: invalid argument speci-
       fied

       For consistency, locks acquired with  rw_trywrlock  should
       be released with rw_unlock.

RReeffeerreenncceess

                                                                1

