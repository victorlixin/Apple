

_barrier_spin(3synch)                       _barrier_spin(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int _barrier_spin(barrier_spin_t *barrier);

DDeessccrriippttiioonn
       _barrier_spin makes the calling thread busy-wait, or spin,
       at a spinning barrier until count threads reach  the  bar-
       rier.   count  is defined during initialization with _bar-
       rier_spin_init.  A thread is said to have reached the bar-
       rier when it calls _barrier_spin.

       When  the last thread reaches the barrier, all count spin-
       ning threads are released from the barrier and allowed  to
       resume  execution.  The barrier is reset after the waiting
       threads are released.

       barrier must previously have been  initialized  (see  bar-
       rier_spin_init(3synch)).

   PPaarraammeetteerrss
       pointer to the barrier object at which to spin

RReettuurrnn vvaalluueess
       _barrier_spin returns zero for success and an error number
       for failure, as described below.

   EErrrroorrss
       If the  following  condition  is  detected,  _barrier_spin
       returns  the  corresponding value: invalid argument speci-
       fied

UUssaaggee
       Because spinning barriers waste resources,  most  applica-
       tions  should  use  blocking  barriers instead of spinning
       barriers.  Spinning barriers should only be used when  all
       participating  threads  will reach the barrier at approxi-
       mately the same time.

   WWaarrnniinnggss
       Spinning barriers should never be used on a single proces-
       sor system.

RReeffeerreenncceess

                                                                1

