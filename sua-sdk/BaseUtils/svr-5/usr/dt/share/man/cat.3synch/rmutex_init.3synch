

rmutex_init(3synch)                           rmutex_init(3synch)

SSyynnooppssiiss
       cc [options] -Kthread file

       #include <synch.h>

       int rmutex_init(rmutex_t *rmutex, int type, void *arg);

DDeessccrriippttiioonn
       rmutex_init  initializes  the  recursive  mutual exclusion
       lock (rmutex) pointed to by rmutex to be of type type  and
       in  the  unlocked state.  Once initialized, the rmutex can
       be used any number of times without being  re-initialized.

       All  operations  on locks initialized with rmutex_init are
       recursive.

   PPaarraammeetteerrss
       pointer to recursive mutex to be initialized  USYNC_THREAD
       or USYNC_PROCESS NULL (reserved for future use)

   rrmmuutteexx ppaarraammeetteerr
       rmutex points to the rmutex to be initialized.

   ttyyppee ppaarraammeetteerr
       type can be set to one of the following values: initialize
       the rmutex for threads within the current process initial-
       ize the rmutex for threads across processes

   aarrgg ppaarraammeetteerr
       arg  should be set to NULL.  It is not currently used, but
       is reserved for future use.

   SSttaattiicc rreeccuurrssiivvee mmuutteexx iinniittiiaalliizzaattiioonn
       An rmutex can be initialized statically if its storage  is
       zero-filled.    In  this  case,  the  rmutex  is  of  type
       USYNC_THREAD, and rmutex_init need not be called.

RReettuurrnn vvaalluueess
       rmutex_init returns zero for success and an  error  number
       for failure.

   EErrrroorrss
       If   the  following  condition  is  detected,  rmutex_init
       returns the corresponding value: invalid  argument  speci-
       fied

RReeffeerreenncceess

                                                                1

