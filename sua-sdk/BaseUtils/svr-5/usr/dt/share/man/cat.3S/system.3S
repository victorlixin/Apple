

system(3S)                                             system(3S)

SSyynnooppssiiss
       #include <stdlib.h>

       int system(const char *string);

DDeessccrriippttiioonn
       system causes the string to be given to a command shell as
       input, as if it had been typed as a command at a terminal.
       system  forks to create a child process that runs the com-
       mand shell specified in the SHELL environment variable  in
       the  current  environment; this shell executes string.  If
       SHELL is not set, then /bin/sh is used.

       The current process waits until the shell  has  completed,
       then  returns  the  exit  status  of the shell.  See for a
       description of the information packed into the  exit  sta-
       tus.

   RReettuurrnn vvaalluueess
       If  string  is  a NULL pointer, system checks if the shell
       specified in the SHELL environment variable exists and  is
       executable.   If it is available, system returns non-zero;
       otherwise it returns zero.  If the fork or exec of  string
       fails,  system  returns -1 and sets errno.  If the command
       interpreter cannot be  executed  then  it  behaves  as  if
       exit(127) or _exit(127) had been called.

   EErrrroorrss
       system fails if one or more of the following are true: The
       system-imposed limit on  the  total  number  of  processes
       under  execution  by a single user would be exceeded.  The
       new process requires more memory than is  allowed  by  the
       system-imposed maximum MAXMEM.

RReeffeerreenncceess
CCoommppaattiibbiilliittyy
       Previous  versions  of  &gemini; and &everest; always used
       /bin/sh as the shell in which command is executed.  Appli-
       cations  built  for  previous  system versions may require
       that SHELL be set to /bin/sh in the caller's  environment.

                                                                1

