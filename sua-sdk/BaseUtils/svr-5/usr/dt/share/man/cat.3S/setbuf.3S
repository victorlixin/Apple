

setbuf(3S)                                             setbuf(3S)

SSyynnooppssiiss
       #include <stdio.h>

       void setbuf (FILE *stream, char *buf);

       int  setvbuf  (FILE  *stream,  char *buf, int type, size_t
       size);

DDeessccrriippttiioonn
       setbuf may be used after a stream [see has been opened but
       before it is read or written.  It causes the array pointed
       to by buf to be used instead of an automatically allocated
       buffer.   If  buf is the NULL pointer input/output will be
       completely unbuffered.

       setbuf can also be used after a stream has been opened and
       written  to  if  the  buffer  has been flushed with fflush
       prior to calling setbuf. [See fopen(3S)].  This will  pre-
       vent loss of data in the existing buffer.

       To use setbuf after a read, make sure that the application
       has read all of the characters in one buffer and make sure
       that  it  will not receive any more characters until after
       calling setbuf.

       While there is no limitation on the size  of  the  buffer,
       the  constant  BUFSIZ, defined in the stdio.h header file,
       is typically a good buffer size: char buf[BUFSIZ];

       setvbuf may be used after a stream  has  been  opened  but
       before  it is read or written.  type determines how stream
       will be buffered.   Valid  values  for  type  (defined  in
       stdio.h)  are:  causes  input/output to be fully buffered.
       causes output to be line buffered; the buffer  is  flushed
       when a newline is written, the buffer is full, or input is
       requested.    causes   input/output   to   be   completely
       unbuffered.

       If  buf is not the NULL pointer, the array it points to is
       used for buffering, instead of an automatically  allocated
       buffer.  size specifies the size of the buffer to be used.
       If input/output is unbuffered, buf and size are ignored.

       For a further discussion of buffering, see

   EErrrroorrss
       If an invalid value for type is provided, setvbuf  returns
       a non-zero value.  Otherwise, it returns zero.

RReeffeerreenncceess
NNoottiicceess
       A  common source of error is allocating buffer space as an
       ``automatic'' variable in a code block, and  then  failing
       to close the stream in the same block.

                                                                1

setbuf(3S)                                             setbuf(3S)

       Parts  of  buf  are  used  for internal bookkeeping of the
       stream and, therefore, buf contains less than  size  bytes
       when full.  It is recommended that the automatically allo-
       cated buffer is used when using setvbuf.

                                                                2

