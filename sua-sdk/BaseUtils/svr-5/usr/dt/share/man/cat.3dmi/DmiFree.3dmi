

DmiFree(3dmi)                                       DmiFree(3dmi)

SSyynnooppssiiss
       #include <dmi2mem.h>

       DmiErrorStatus_t  DMI_API DmiFree ( /* [in] */ void * ptr,
       /* [in] */ DmiMemDsc_t memDsc );

       DmiErrorStatus_t DmiFreeTimestamp (      DmiTimestamp_t  *
       ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeString  (      DmiString_t * ptr,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiFreeOctetString   (        DmiOctet-
       String_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeDataUnion (      DmiDataUnion_t *
       ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeEnumInfo  (       DmiEnumInfo_t  *
       ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeAttributeInfo (      DmiAttribute-
       Info_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeAttributeData (      DmiAttribute-
       Data_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeGroupInfo (      DmiGroupInfo_t *
       ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeComponentInfo  (        DmiCompo-
       nentInfo_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiFreeFileDataInfo   (        DmiFile-
       DataInfo_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeClassNameInfo (      DmiClassName-
       Info_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeRowRequest (      DmiRowRequest_t
       * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeRowData (      DmiRowData_t * ptr,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t    DmiFreeAttributeIds    (        DmiAt-
       tributeIds_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeAttributeValues   (        DmiAt-
       tributeValues_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeEnumList  (       DmiEnumList_t *
       ptr,      DmiMemDsc_t memDsc);

                                                                1

DmiFree(3dmi)                                       DmiFree(3dmi)

       DmiErrorStatus_t   DmiFreeAttributeList   (         DmiAt-
       tributeList_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeGroupList (      DmiGroupList_t *
       ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeComponentList  (        DmiCompo-
       nentList_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeFileDataList (      DmiFileDataL-
       ist_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeClassNameList  (        DmiClass-
       NameList_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeStringList (      DmiStringList_t
       * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeFileTypeList  (       DmiFileType-
       List_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiFreeMultiRowRequest  (      DmiMulti-
       RowRequest_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiFreeMultiRowData  (       DmiMultiRow-
       Data_t * ptr,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiFreeNodeAddress   (       DmiNodeAd-
       dress_t  * ptr,      DmiMemDsc_t memDsc);

DDeessccrriippttiioonn
       The DmiFree functions free DMI data structures in a memory
       model  specified by memDsc.  The DmiFree functions release
       the DMI data's top-level structure, and  all  recursively-
       referenced  memory  blocks.  All blocks must be previously
       allocated in the memDsc memory model.

       All functions for deleting  DMI  structures  are  prefixed
       with  DmiFree.  The functions free data of the type speci-
       fied by the suffix.  For example, DmiFreeTimeStamp frees a
       DmiTimeStamp.

       DmiFree  releases  a  memory block allocated in the memory
       model specified by the memDsc parameter and pointed to  by
       the ptr parameter.

   PPaarraammeetteerrss
       (Input) Memory block to be freed.  If the ptr parameter is
       NULL, no memory is freed.  (Input) Memory  model  descrip-
       tor.   If the memDsc parameter is NULL, the default memory
       model is used.

RReettuurrnn vvaalluueess
       The DmiFree functions return these values:

                                                                2

DmiFree(3dmi)                                       DmiFree(3dmi)

       For a description of return values, see

NNoottiicceess
       Portions of this page are derived from material for  which
       the  copyright owner is Intel Corporation, Inc.  The mate-
       rial is reprinted with permission.  See copyright page for
       a full statement of rights and permissions.

                                                                3

