

DmiDup(3dmi)                                         DmiDup(3dmi)

SSyynnooppssiiss
       #include <dmi2mem.h>

       DmiErrorStatus_t   DmiDupTimestamp  (       DmiTimestamp_t
       **dest,        DmiTimestamp_t    *src,         DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t  DmiDupString  (      DmiString_t **dest,
            DmiString_t *src,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiDupOctetString (      DmiOctetString_t
       **dest,        DmiOctetString_t   *src,        DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t   DmiDupDataUnion(         DmiDataUnion_t
       **dest,         DmiDataUnion_t    *src,        DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t   DmiDupEnumInfo   (        DmiEnumInfo_t
       **dest,      DmiEnumInfo_t *src,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiDupAttributeInfo(       DmiAttribute-
       Info_t      **dest,           DmiAttributeInfo_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiDupAttributeData(       DmiAttribute-
       Data_t      **dest,           DmiAttributeData_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiDupGroupInfo(         DmiGroupInfo_t
       **dest,         DmiGroupInfo_t    *src,        DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t    DmiDupComponentInfo(         DmiCompo-
       nentInfo_t     **dest,         DmiComponentInfo_t    *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t     DmiDupFileDataInfo(          DmiFile-
       DataInfo_t     **dest,          DmiFileDataInfo_t    *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiDupClassNameInfo(       DmiClassName-
       Info_t      **dest,           DmiClassNameInfo_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiDupRowRequest(        DmiRowRequest_t
       **dest,         DmiRowRequest_t   *src,        DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t DmiDupRowData(      DmiRowData_t  **dest,
            DmiRowData_t *src,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t      DmiDupAttributeIds(           DmiAt-
       tributeIds_t    **dest,         DmiAttributeIds_t    *src,

                                                                1

DmiDup(3dmi)                                         DmiDup(3dmi)

            DmiMemDsc_t memDsc);

       DmiErrorStatus_t DmiDupAttributeValues(      DmiAttribute-
       Values_t    **dest,         DmiAttributeValues_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t     DmiDupEnumList(         DmiEnumList_t
       **dest,      DmiEnumList_t *src,      DmiMemDsc_t memDsc);

       DmiErrorStatus_t      DmiDupAttributeList(          DmiAt-
       tributeList_t   **dest,        DmiAttributeList_t    *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t    DmiDupGroupList(        DmiGroupList_t
       **dest,        DmiGroupList_t    *src,         DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t    DmiDupComponentList(         DmiCompo-
       nentList_t    **dest,         DmiComponentList_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiDupFileDataList(       DmiFileDataL-
       ist_t      **dest,           DmiFileDataList_t       *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t    DmiDupClassNameList(         DmiClass-
       NameList_t    **dest,         DmiClassNameList_t     *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiDupStringList(       DmiStringList_t
       **dest,        DmiStringList_t   *src,         DmiMemDsc_t
       memDsc);

       DmiErrorStatus_t   DmiDupFileTypeList(        DmiFileType-
       List_t      **dest,           DmiFileTypeList_t      *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiDupMultiRowRequest(        DmiMulti-
       RowRequest_t   **dest,        DmiMultiRowRequest_t   *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t   DmiDupMultiRowData(        DmiMultiRow-
       Data_t      **dest,           DmiMultiRowData_t      *src,
            DmiMemDsc_t memDsc);

       DmiErrorStatus_t  DmiDupNodeAddress(      DmiNodeAddress_t
       **dest,        DmiNodeAddress_t   *src,        DmiMemDsc_t
       memDsc);

DDeessccrriippttiioonn
       The  DmiDup  functions duplicate top-level DMI data struc-
       tures, and all referenced structures  of  the  destination
       structure  are  recursively  created  and  copied from the
       respective  source  structures.   The   DmiDup   functions

                                                                2

DmiDup(3dmi)                                         DmiDup(3dmi)

       duplicate  data  of the type specified by the suffix.  For
       example, DmiDupTimeStamp duplicates a  DmiTimeStamp.   All
       allocations  are  done  in  the  memory model specified by
       memDsc.

   PPaarraammeetteerrss
       (Input and output) Pointer to the returned pointer to  the
       allocated  destination  Dmidata_type  structure.   (Input)
       Pointer to the  source  Dmidata_type  structure.   (Input)
       Memory  model  descriptor.   If  memDsc  is NULL, then the
       default memory model is used.

RReettuurrnn vvaalluueess
       For a description of return values, see

NNoottiicceess
       Portions of this page are derived from material for  which
       the  copyright owner is Intel Corporation, Inc.  The mate-
       rial is reprinted with permission.  See copyright page for
       a full statement of rights and permissions.

                                                                3

